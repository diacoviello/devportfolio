{"version":3,"sources":["../node_modules/mdurl/encode.js","../node_modules/unified/node_modules/is-buffer/index.js","../node_modules/extend/index.js","../node_modules/vfile/node_modules/is-buffer/index.js","../node_modules/react-markdown/node_modules/react-is/index.js","../node_modules/react-markdown/node_modules/react-is/cjs/react-is.production.min.js","../node_modules/style-to-object/index.js","../node_modules/inline-style-parser/index.js","../node_modules/unist-util-stringify-position/index.js","../node_modules/vfile-message/index.js","../node_modules/vfile/lib/minpath.browser.js","../node_modules/vfile/lib/minproc.browser.js","../node_modules/vfile/lib/minurl.shared.js","../node_modules/vfile/lib/minurl.browser.js","../node_modules/vfile/lib/index.js","../node_modules/@babel/runtime/helpers/esm/toArray.js","../node_modules/bail/index.js","../node_modules/is-plain-obj/index.js","../node_modules/trough/index.js","../node_modules/unified/lib/index.js","../node_modules/mdast-util-to-string/index.js","../node_modules/micromark-util-chunked/index.js","../node_modules/micromark-util-combine-extensions/index.js","../node_modules/micromark-util-character/lib/unicode-punctuation-regex.js","../node_modules/micromark-util-character/index.js","../node_modules/micromark-factory-space/index.js","../node_modules/micromark/lib/initialize/content.js","../node_modules/micromark/lib/initialize/document.js","../node_modules/micromark-core-commonmark/lib/blank-line.js","../node_modules/micromark-util-subtokenize/index.js","../node_modules/micromark-core-commonmark/lib/content.js","../node_modules/micromark/lib/initialize/flow.js","../node_modules/micromark/lib/initialize/text.js","../node_modules/micromark-util-resolve-all/index.js","../node_modules/micromark/lib/create-tokenizer.js","../node_modules/micromark-core-commonmark/lib/thematic-break.js","../node_modules/micromark-core-commonmark/lib/list.js","../node_modules/micromark-core-commonmark/lib/block-quote.js","../node_modules/micromark-factory-destination/index.js","../node_modules/micromark-factory-label/index.js","../node_modules/micromark-factory-title/index.js","../node_modules/micromark-factory-whitespace/index.js","../node_modules/micromark-util-normalize-identifier/index.js","../node_modules/micromark-core-commonmark/lib/definition.js","../node_modules/micromark-core-commonmark/lib/code-indented.js","../node_modules/micromark-core-commonmark/lib/heading-atx.js","../node_modules/micromark-core-commonmark/lib/setext-underline.js","../node_modules/micromark-util-html-tag-name/index.js","../node_modules/micromark-core-commonmark/lib/html-flow.js","../node_modules/micromark-core-commonmark/lib/code-fenced.js","../node_modules/character-entities/index.js","../node_modules/decode-named-character-reference/index.js","../node_modules/micromark-core-commonmark/lib/character-reference.js","../node_modules/micromark-core-commonmark/lib/character-escape.js","../node_modules/micromark-core-commonmark/lib/line-ending.js","../node_modules/micromark-core-commonmark/lib/label-end.js","../node_modules/micromark-core-commonmark/lib/label-start-image.js","../node_modules/micromark-util-classify-character/index.js","../node_modules/micromark-core-commonmark/lib/attention.js","../node_modules/micromark-core-commonmark/lib/autolink.js","../node_modules/micromark-core-commonmark/lib/html-text.js","../node_modules/micromark-core-commonmark/lib/label-start-link.js","../node_modules/micromark-core-commonmark/lib/hard-break-escape.js","../node_modules/micromark-core-commonmark/lib/code-text.js","../node_modules/micromark/lib/constructs.js","../node_modules/micromark/lib/preprocess.js","../node_modules/micromark-util-decode-numeric-character-reference/index.js","../node_modules/micromark-util-decode-string/index.js","../node_modules/mdast-util-from-markdown/lib/index.js","../node_modules/micromark/lib/postprocess.js","../node_modules/micromark/lib/parse.js","../node_modules/remark-parse/index.js","../node_modules/remark-parse/lib/index.js","../node_modules/unist-builder/index.js","../node_modules/unist-util-is/index.js","../node_modules/unist-util-visit-parents/index.js","../node_modules/unist-util-visit/index.js","../node_modules/unist-util-position/index.js","../node_modules/mdast-util-definitions/index.js","../node_modules/mdast-util-to-hast/lib/traverse.js","../node_modules/mdast-util-to-hast/lib/handlers/thematic-break.js","../node_modules/mdast-util-to-hast/lib/wrap.js","../node_modules/mdast-util-to-hast/lib/handlers/list.js","../node_modules/mdast-util-to-hast/lib/handlers/footnote-reference.js","../node_modules/mdast-util-to-hast/lib/revert.js","../node_modules/mdast-util-to-hast/lib/handlers/list-item.js","../node_modules/mdast-util-to-hast/lib/handlers/index.js","../node_modules/mdast-util-to-hast/lib/handlers/blockquote.js","../node_modules/mdast-util-to-hast/lib/handlers/break.js","../node_modules/mdast-util-to-hast/lib/handlers/code.js","../node_modules/mdast-util-to-hast/lib/handlers/delete.js","../node_modules/mdast-util-to-hast/lib/handlers/emphasis.js","../node_modules/mdast-util-to-hast/lib/handlers/footnote.js","../node_modules/mdast-util-to-hast/lib/handlers/heading.js","../node_modules/mdast-util-to-hast/lib/handlers/html.js","../node_modules/mdast-util-to-hast/lib/handlers/image-reference.js","../node_modules/mdast-util-to-hast/lib/handlers/image.js","../node_modules/mdast-util-to-hast/lib/handlers/inline-code.js","../node_modules/mdast-util-to-hast/lib/handlers/link-reference.js","../node_modules/mdast-util-to-hast/lib/handlers/link.js","../node_modules/mdast-util-to-hast/lib/handlers/paragraph.js","../node_modules/mdast-util-to-hast/lib/handlers/root.js","../node_modules/mdast-util-to-hast/lib/handlers/strong.js","../node_modules/mdast-util-to-hast/lib/handlers/table.js","../node_modules/mdast-util-to-hast/lib/handlers/text.js","../node_modules/mdast-util-to-hast/lib/index.js","../node_modules/unist-util-generated/index.js","../node_modules/mdast-util-to-hast/lib/footer.js","../node_modules/remark-rehype/index.js","../node_modules/property-information/lib/util/schema.js","../node_modules/property-information/lib/util/merge.js","../node_modules/property-information/lib/normalize.js","../node_modules/property-information/lib/util/info.js","../node_modules/property-information/lib/util/types.js","../node_modules/property-information/lib/util/defined-info.js","../node_modules/property-information/lib/util/create.js","../node_modules/property-information/lib/xlink.js","../node_modules/property-information/lib/xml.js","../node_modules/property-information/lib/util/case-sensitive-transform.js","../node_modules/property-information/lib/util/case-insensitive-transform.js","../node_modules/property-information/lib/xmlns.js","../node_modules/property-information/lib/aria.js","../node_modules/property-information/lib/html.js","../node_modules/property-information/lib/svg.js","../node_modules/property-information/index.js","../node_modules/react-markdown/lib/rehype-filter.js","../node_modules/react-markdown/lib/uri-transformer.js","../node_modules/hast-util-whitespace/index.js","../node_modules/property-information/lib/find.js","../node_modules/property-information/lib/hast-to-react.js","../node_modules/react-markdown/lib/ast-to-react.js","../node_modules/comma-separated-tokens/index.js","../node_modules/space-separated-tokens/index.js","../node_modules/react-markdown/lib/react-markdown.js"],"names":["encodeCache","encode","string","exclude","keepEscaped","i","l","code","nextCode","cache","result","defaultChars","ch","String","fromCharCode","test","push","toString","toUpperCase","slice","length","charCodeAt","getEncodeCache","encodeURIComponent","componentChars","module","exports","obj","constructor","isBuffer","hasOwn","Object","prototype","hasOwnProperty","toStr","defineProperty","gOPD","getOwnPropertyDescriptor","isArray","arr","Array","call","isPlainObject","key","hasOwnConstructor","hasIsPrototypeOf","setProperty","target","options","name","enumerable","configurable","value","newValue","writable","getProperty","extend","src","copy","copyIsArray","clone","arguments","deep","require","b","c","d","e","f","g","h","k","m","n","p","q","r","u","v","w","Symbol","for","x","y","a","t","$$typeof","type","z","A","B","C","D","E","F","G","H","I","ContextConsumer","ContextProvider","Element","ForwardRef","Fragment","Lazy","Memo","Portal","Profiler","StrictMode","Suspense","isAsyncMode","isConcurrentMode","isContextConsumer","isContextProvider","isElement","isForwardRef","isFragment","isLazy","isMemo","isPortal","isProfiler","isStrictMode","isSuspense","isValidElementType","typeOf","parse","style","iterator","declaration","output","property","declarations","hasIterator","len","COMMENT_REGEX","NEWLINE_REGEX","WHITESPACE_REGEX","PROPERTY_REGEX","COLON_REGEX","VALUE_REGEX","SEMICOLON_REGEX","TRIM_REGEX","EMPTY_STRING","trim","str","replace","TypeError","lineno","column","updatePosition","lines","match","lastIndexOf","position","start","line","node","Position","whitespace","this","end","source","content","errorsList","error","msg","err","Error","reason","filename","silent","re","exec","comments","rules","comment","pos","charAt","prop","val","ret","decl","decls","stringifyPosition","point","index","VFileMessage","place","origin","parts","undefined","indexOf","message","stack","fatal","ruleId","actual","expected","file","url","note","path","basename","ext","assertPath","seenNonSlash","firstNonSlashEnd","extIndex","dirname","unmatchedSlash","extname","startPart","startDot","preDotState","join","joined","segments","normalize","sep","absolute","allowAboveRoot","lastSlashIndex","lastSegmentLength","lastSlash","dots","normalizeString","JSON","stringify","proc","cwd","isUrl","fileURLOrPath","href","urlToPath","URL","protocol","hostname","pathname","third","decodeURIComponent","getPathFromURLPosix","order","VFile","buffer","data","messages","history","stored","map","includes","assertNonEmpty","assertPart","stem","encoding","part","_toArray","arrayWithHoles","iterableToArray","unsupportedIterableToArray","nonIterableRest","bail","getPrototypeOf","toStringTag","wrap","middleware","callback","called","parameters","fnExpectsCallback","done","apply","exception","Promise","then","unified","base","frozen","transformers","fns","pipeline","run","values","middlewareIndex","pop","next","fn","use","middelware","trough","attachers","namespace","freezeIndex","processor","assertUnfrozen","own","Parser","Compiler","freeze","attacher","transformer","Number","POSITIVE_INFINITY","settings","addPlugin","addList","addPreset","assign","add","plugin","plugins","entry","isPlainObj","doc","vfile","assertParser","newable","assertCompiler","assertNode","compile","executor","resolve","reject","tree","runSync","complete","assertDone","process","processSync","destination","keys","asyncName","Boolean","looksLikeAVFile","includeImageAlt","one","alt","all","children","splice","list","remove","items","chunkStart","from","unshift","combineExtensions","extensions","syntaxExtension","extension","hook","left","right","constructs","existing","before","asciiAlpha","regexCheck","asciiDigit","asciiHexDigit","asciiAlphanumeric","asciiPunctuation","asciiAtext","asciiControl","markdownLineEndingOrSpace","markdownLineEnding","markdownSpace","unicodeWhitespace","unicodePunctuation","regex","factorySpace","effects","ok","max","limit","size","enter","prefix","consume","exit","tokenize","previous","contentStart","attempt","parser","contentInitial","lineStart","token","contentType","document","childFlow","childToken","lineStartOffset","self","continued","item","containerState","continuation","documentContinue","checkNewContainers","_closeFlow","closeFlow","indexBeforeExits","events","indexBeforeFlow","exitContainers","documentContinued","currentConstruct","concrete","flowStart","interrupt","_gfmTableDynamicInterruptHack","check","containerConstruct","thereIsANewContainer","thereIsNoNewContainer","lazy","now","offset","containerContinue","flow","_tokenizer","flowContinue","writeToChild","eof","stream","sliceStream","defineSkip","write","seen","nok","disable","null","blankLine","partial","subtokenize","event","lineIndex","otherIndex","otherEvent","subevents","more","jumps","_isInFirstContentOfListItem","subcontent","_container","eventIndex","context","startPosition","startPositions","tokenizer","childEvents","gaps","current","adjust","breaks","_gfmTasklistFirstContentOfListItem","contentEnd","continuationConstruct","contentContinue","prefixed","tail","sliceSerialize","initial","flowInitial","afterConstruct","resolver","resolveAll","createResolver","initializeFactory","text","field","notText","atBreak","resolveAllLineSuffixes","extraResolver","chunks","bufferIndex","tabs","chunk","_index","_bufferIndex","createTokenizer","initialize","columnStart","resolveAllConstructs","accountForPotentialSkip","fields","constructFactory","construct","info","addResult","onsuccessfulcheck","expandTabs","atTab","serializeChunks","main","state","view","startIndex","startBufferIndex","endIndex","endBufferIndex","sliceChunks","chunkIndex","go","_","restore","onreturn","returnState","bogusState","listOfConstructs","constructIndex","handleListOfConstructs","def","handleMapOfConstructs","handleConstruct","startPoint","startPrevious","startCurrentConstruct","startEventsIndex","startStack","store","create","resolveTo","thematicBreak","marker","sequence","initialSize","kind","atMarker","inside","onBlank","listItemPrefixWhitespaceConstruct","endOfPrefix","otherPrefix","initialBlankLine","furtherBlankLines","notInCurrentItem","indentConstruct","blockQuote","open","after","factoryDestination","literalType","literalMarkerType","rawType","stringType","balance","destinationEnclosedBefore","destinationRaw","destinationEnclosed","destinationEnclosedEscape","destinationRawEscape","factoryLabel","markerType","label","labelEscape","factoryTitle","atFirstTitleBreak","atTitleBreak","title","titleEscape","factoryWhitespace","normalizeIdentifier","toLowerCase","definition","identifier","labelAfter","titleConstruct","defined","codeIndented","afterStartPrefix","afterPrefix","indentedContent","headingAtx","fenceOpenInside","headingBreak","setextUnderline","paragraph","closingSequence","closingSequenceEnd","heading","htmlBlockNames","htmlRawNames","htmlFlow","startTag","declarationStart","tagCloseStart","continuationDeclarationInside","tagName","commentOpenInside","cdataOpenInside","basicSelfClosing","completeAttributeNameBefore","completeClosingTagAfter","completeEnd","completeAttributeName","completeAttributeNameAfter","completeAttributeValueBefore","completeAttributeValueQuoted","completeAttributeValueUnquoted","completeAttributeValueQuotedAfter","completeAfter","continuationCommentInside","continuationRawTagOpen","continuationClose","continuationCharacterDataInside","continuationAtLineEnding","nextBlankConstruct","htmlContinueStart","htmlLineEnd","continuationRawEndTag","codeFenced","closingFenceConstruct","closingSequenceStart","sizeOpen","nonLazyLine","initialPrefix","sequenceOpen","infoOpen","openAfter","infoAfter","meta","characterEntities","AElig","AMP","Aacute","Abreve","Acirc","Acy","Afr","Agrave","Alpha","Amacr","And","Aogon","Aopf","ApplyFunction","Aring","Ascr","Assign","Atilde","Auml","Backslash","Barv","Barwed","Bcy","Because","Bernoullis","Beta","Bfr","Bopf","Breve","Bscr","Bumpeq","CHcy","COPY","Cacute","Cap","CapitalDifferentialD","Cayleys","Ccaron","Ccedil","Ccirc","Cconint","Cdot","Cedilla","CenterDot","Cfr","Chi","CircleDot","CircleMinus","CirclePlus","CircleTimes","ClockwiseContourIntegral","CloseCurlyDoubleQuote","CloseCurlyQuote","Colon","Colone","Congruent","Conint","ContourIntegral","Copf","Coproduct","CounterClockwiseContourIntegral","Cross","Cscr","Cup","CupCap","DD","DDotrahd","DJcy","DScy","DZcy","Dagger","Darr","Dashv","Dcaron","Dcy","Del","Delta","Dfr","DiacriticalAcute","DiacriticalDot","DiacriticalDoubleAcute","DiacriticalGrave","DiacriticalTilde","Diamond","DifferentialD","Dopf","Dot","DotDot","DotEqual","DoubleContourIntegral","DoubleDot","DoubleDownArrow","DoubleLeftArrow","DoubleLeftRightArrow","DoubleLeftTee","DoubleLongLeftArrow","DoubleLongLeftRightArrow","DoubleLongRightArrow","DoubleRightArrow","DoubleRightTee","DoubleUpArrow","DoubleUpDownArrow","DoubleVerticalBar","DownArrow","DownArrowBar","DownArrowUpArrow","DownBreve","DownLeftRightVector","DownLeftTeeVector","DownLeftVector","DownLeftVectorBar","DownRightTeeVector","DownRightVector","DownRightVectorBar","DownTee","DownTeeArrow","Downarrow","Dscr","Dstrok","ENG","ETH","Eacute","Ecaron","Ecirc","Ecy","Edot","Efr","Egrave","Emacr","EmptySmallSquare","EmptyVerySmallSquare","Eogon","Eopf","Epsilon","Equal","EqualTilde","Equilibrium","Escr","Esim","Eta","Euml","Exists","ExponentialE","Fcy","Ffr","FilledSmallSquare","FilledVerySmallSquare","Fopf","ForAll","Fouriertrf","Fscr","GJcy","GT","Gamma","Gammad","Gbreve","Gcedil","Gcirc","Gcy","Gdot","Gfr","Gg","Gopf","GreaterEqual","GreaterEqualLess","GreaterFullEqual","GreaterGreater","GreaterLess","GreaterSlantEqual","GreaterTilde","Gscr","Gt","HARDcy","Hacek","Hat","Hcirc","Hfr","HilbertSpace","Hopf","HorizontalLine","Hscr","Hstrok","HumpDownHump","HumpEqual","IEcy","IJlig","IOcy","Iacute","Icirc","Icy","Idot","Ifr","Igrave","Im","Imacr","ImaginaryI","Implies","Int","Integral","Intersection","InvisibleComma","InvisibleTimes","Iogon","Iopf","Iota","Iscr","Itilde","Iukcy","Iuml","Jcirc","Jcy","Jfr","Jopf","Jscr","Jsercy","Jukcy","KHcy","KJcy","Kappa","Kcedil","Kcy","Kfr","Kopf","Kscr","LJcy","LT","Lacute","Lambda","Lang","Laplacetrf","Larr","Lcaron","Lcedil","Lcy","LeftAngleBracket","LeftArrow","LeftArrowBar","LeftArrowRightArrow","LeftCeiling","LeftDoubleBracket","LeftDownTeeVector","LeftDownVector","LeftDownVectorBar","LeftFloor","LeftRightArrow","LeftRightVector","LeftTee","LeftTeeArrow","LeftTeeVector","LeftTriangle","LeftTriangleBar","LeftTriangleEqual","LeftUpDownVector","LeftUpTeeVector","LeftUpVector","LeftUpVectorBar","LeftVector","LeftVectorBar","Leftarrow","Leftrightarrow","LessEqualGreater","LessFullEqual","LessGreater","LessLess","LessSlantEqual","LessTilde","Lfr","Ll","Lleftarrow","Lmidot","LongLeftArrow","LongLeftRightArrow","LongRightArrow","Longleftarrow","Longleftrightarrow","Longrightarrow","Lopf","LowerLeftArrow","LowerRightArrow","Lscr","Lsh","Lstrok","Lt","Map","Mcy","MediumSpace","Mellintrf","Mfr","MinusPlus","Mopf","Mscr","Mu","NJcy","Nacute","Ncaron","Ncedil","Ncy","NegativeMediumSpace","NegativeThickSpace","NegativeThinSpace","NegativeVeryThinSpace","NestedGreaterGreater","NestedLessLess","NewLine","Nfr","NoBreak","NonBreakingSpace","Nopf","Not","NotCongruent","NotCupCap","NotDoubleVerticalBar","NotElement","NotEqual","NotEqualTilde","NotExists","NotGreater","NotGreaterEqual","NotGreaterFullEqual","NotGreaterGreater","NotGreaterLess","NotGreaterSlantEqual","NotGreaterTilde","NotHumpDownHump","NotHumpEqual","NotLeftTriangle","NotLeftTriangleBar","NotLeftTriangleEqual","NotLess","NotLessEqual","NotLessGreater","NotLessLess","NotLessSlantEqual","NotLessTilde","NotNestedGreaterGreater","NotNestedLessLess","NotPrecedes","NotPrecedesEqual","NotPrecedesSlantEqual","NotReverseElement","NotRightTriangle","NotRightTriangleBar","NotRightTriangleEqual","NotSquareSubset","NotSquareSubsetEqual","NotSquareSuperset","NotSquareSupersetEqual","NotSubset","NotSubsetEqual","NotSucceeds","NotSucceedsEqual","NotSucceedsSlantEqual","NotSucceedsTilde","NotSuperset","NotSupersetEqual","NotTilde","NotTildeEqual","NotTildeFullEqual","NotTildeTilde","NotVerticalBar","Nscr","Ntilde","Nu","OElig","Oacute","Ocirc","Ocy","Odblac","Ofr","Ograve","Omacr","Omega","Omicron","Oopf","OpenCurlyDoubleQuote","OpenCurlyQuote","Or","Oscr","Oslash","Otilde","Otimes","Ouml","OverBar","OverBrace","OverBracket","OverParenthesis","PartialD","Pcy","Pfr","Phi","Pi","PlusMinus","Poincareplane","Popf","Pr","Precedes","PrecedesEqual","PrecedesSlantEqual","PrecedesTilde","Prime","Product","Proportion","Proportional","Pscr","Psi","QUOT","Qfr","Qopf","Qscr","RBarr","REG","Racute","Rang","Rarr","Rarrtl","Rcaron","Rcedil","Rcy","Re","ReverseElement","ReverseEquilibrium","ReverseUpEquilibrium","Rfr","Rho","RightAngleBracket","RightArrow","RightArrowBar","RightArrowLeftArrow","RightCeiling","RightDoubleBracket","RightDownTeeVector","RightDownVector","RightDownVectorBar","RightFloor","RightTee","RightTeeArrow","RightTeeVector","RightTriangle","RightTriangleBar","RightTriangleEqual","RightUpDownVector","RightUpTeeVector","RightUpVector","RightUpVectorBar","RightVector","RightVectorBar","Rightarrow","Ropf","RoundImplies","Rrightarrow","Rscr","Rsh","RuleDelayed","SHCHcy","SHcy","SOFTcy","Sacute","Sc","Scaron","Scedil","Scirc","Scy","Sfr","ShortDownArrow","ShortLeftArrow","ShortRightArrow","ShortUpArrow","Sigma","SmallCircle","Sopf","Sqrt","Square","SquareIntersection","SquareSubset","SquareSubsetEqual","SquareSuperset","SquareSupersetEqual","SquareUnion","Sscr","Star","Sub","Subset","SubsetEqual","Succeeds","SucceedsEqual","SucceedsSlantEqual","SucceedsTilde","SuchThat","Sum","Sup","Superset","SupersetEqual","Supset","THORN","TRADE","TSHcy","TScy","Tab","Tau","Tcaron","Tcedil","Tcy","Tfr","Therefore","Theta","ThickSpace","ThinSpace","Tilde","TildeEqual","TildeFullEqual","TildeTilde","Topf","TripleDot","Tscr","Tstrok","Uacute","Uarr","Uarrocir","Ubrcy","Ubreve","Ucirc","Ucy","Udblac","Ufr","Ugrave","Umacr","UnderBar","UnderBrace","UnderBracket","UnderParenthesis","Union","UnionPlus","Uogon","Uopf","UpArrow","UpArrowBar","UpArrowDownArrow","UpDownArrow","UpEquilibrium","UpTee","UpTeeArrow","Uparrow","Updownarrow","UpperLeftArrow","UpperRightArrow","Upsi","Upsilon","Uring","Uscr","Utilde","Uuml","VDash","Vbar","Vcy","Vdash","Vdashl","Vee","Verbar","Vert","VerticalBar","VerticalLine","VerticalSeparator","VerticalTilde","VeryThinSpace","Vfr","Vopf","Vscr","Vvdash","Wcirc","Wedge","Wfr","Wopf","Wscr","Xfr","Xi","Xopf","Xscr","YAcy","YIcy","YUcy","Yacute","Ycirc","Ycy","Yfr","Yopf","Yscr","Yuml","ZHcy","Zacute","Zcaron","Zcy","Zdot","ZeroWidthSpace","Zeta","Zfr","Zopf","Zscr","aacute","abreve","ac","acE","acd","acirc","acute","acy","aelig","af","afr","agrave","alefsym","aleph","alpha","amacr","amalg","amp","and","andand","andd","andslope","andv","ang","ange","angle","angmsd","angmsdaa","angmsdab","angmsdac","angmsdad","angmsdae","angmsdaf","angmsdag","angmsdah","angrt","angrtvb","angrtvbd","angsph","angst","angzarr","aogon","aopf","ap","apE","apacir","ape","apid","apos","approx","approxeq","aring","ascr","ast","asymp","asympeq","atilde","auml","awconint","awint","bNot","backcong","backepsilon","backprime","backsim","backsimeq","barvee","barwed","barwedge","bbrk","bbrktbrk","bcong","bcy","bdquo","becaus","because","bemptyv","bepsi","bernou","beta","beth","between","bfr","bigcap","bigcirc","bigcup","bigodot","bigoplus","bigotimes","bigsqcup","bigstar","bigtriangledown","bigtriangleup","biguplus","bigvee","bigwedge","bkarow","blacklozenge","blacksquare","blacktriangle","blacktriangledown","blacktriangleleft","blacktriangleright","blank","blk12","blk14","blk34","block","bne","bnequiv","bnot","bopf","bot","bottom","bowtie","boxDL","boxDR","boxDl","boxDr","boxH","boxHD","boxHU","boxHd","boxHu","boxUL","boxUR","boxUl","boxUr","boxV","boxVH","boxVL","boxVR","boxVh","boxVl","boxVr","boxbox","boxdL","boxdR","boxdl","boxdr","boxh","boxhD","boxhU","boxhd","boxhu","boxminus","boxplus","boxtimes","boxuL","boxuR","boxul","boxur","boxv","boxvH","boxvL","boxvR","boxvh","boxvl","boxvr","bprime","breve","brvbar","bscr","bsemi","bsim","bsime","bsol","bsolb","bsolhsub","bull","bullet","bump","bumpE","bumpe","bumpeq","cacute","cap","capand","capbrcup","capcap","capcup","capdot","caps","caret","caron","ccaps","ccaron","ccedil","ccirc","ccups","ccupssm","cdot","cedil","cemptyv","cent","centerdot","cfr","chcy","checkmark","chi","cir","cirE","circ","circeq","circlearrowleft","circlearrowright","circledR","circledS","circledast","circledcirc","circleddash","cire","cirfnint","cirmid","cirscir","clubs","clubsuit","colon","colone","coloneq","comma","commat","comp","compfn","complement","complexes","cong","congdot","conint","copf","coprod","copysr","crarr","cross","cscr","csub","csube","csup","csupe","ctdot","cudarrl","cudarrr","cuepr","cuesc","cularr","cularrp","cup","cupbrcap","cupcap","cupcup","cupdot","cupor","cups","curarr","curarrm","curlyeqprec","curlyeqsucc","curlyvee","curlywedge","curren","curvearrowleft","curvearrowright","cuvee","cuwed","cwconint","cwint","cylcty","dArr","dHar","dagger","daleth","darr","dash","dashv","dbkarow","dblac","dcaron","dcy","dd","ddagger","ddarr","ddotseq","deg","delta","demptyv","dfisht","dfr","dharl","dharr","diam","diamond","diamondsuit","diams","die","digamma","disin","div","divide","divideontimes","divonx","djcy","dlcorn","dlcrop","dollar","dopf","dot","doteq","doteqdot","dotminus","dotplus","dotsquare","doublebarwedge","downarrow","downdownarrows","downharpoonleft","downharpoonright","drbkarow","drcorn","drcrop","dscr","dscy","dsol","dstrok","dtdot","dtri","dtrif","duarr","duhar","dwangle","dzcy","dzigrarr","eDDot","eDot","eacute","easter","ecaron","ecir","ecirc","ecolon","ecy","edot","ee","efDot","efr","eg","egrave","egs","egsdot","el","elinters","ell","els","elsdot","emacr","empty","emptyset","emptyv","emsp13","emsp14","emsp","eng","ensp","eogon","eopf","epar","eparsl","eplus","epsi","epsilon","epsiv","eqcirc","eqcolon","eqsim","eqslantgtr","eqslantless","equals","equest","equiv","equivDD","eqvparsl","erDot","erarr","escr","esdot","esim","eta","eth","euml","euro","excl","exist","expectation","exponentiale","fallingdotseq","fcy","female","ffilig","fflig","ffllig","ffr","filig","fjlig","flat","fllig","fltns","fnof","fopf","forall","fork","forkv","fpartint","frac12","frac13","frac14","frac15","frac16","frac18","frac23","frac25","frac34","frac35","frac38","frac45","frac56","frac58","frac78","frasl","frown","fscr","gE","gEl","gacute","gamma","gammad","gap","gbreve","gcirc","gcy","gdot","ge","gel","geq","geqq","geqslant","ges","gescc","gesdot","gesdoto","gesdotol","gesl","gesles","gfr","gg","ggg","gimel","gjcy","gl","glE","gla","glj","gnE","gnap","gnapprox","gne","gneq","gneqq","gnsim","gopf","grave","gscr","gsim","gsime","gsiml","gt","gtcc","gtcir","gtdot","gtlPar","gtquest","gtrapprox","gtrarr","gtrdot","gtreqless","gtreqqless","gtrless","gtrsim","gvertneqq","gvnE","hArr","hairsp","half","hamilt","hardcy","harr","harrcir","harrw","hbar","hcirc","hearts","heartsuit","hellip","hercon","hfr","hksearow","hkswarow","hoarr","homtht","hookleftarrow","hookrightarrow","hopf","horbar","hscr","hslash","hstrok","hybull","hyphen","iacute","ic","icirc","icy","iecy","iexcl","iff","ifr","igrave","ii","iiiint","iiint","iinfin","iiota","ijlig","imacr","image","imagline","imagpart","imath","imof","imped","in","incare","infin","infintie","inodot","int","intcal","integers","intercal","intlarhk","intprod","iocy","iogon","iopf","iota","iprod","iquest","iscr","isin","isinE","isindot","isins","isinsv","isinv","it","itilde","iukcy","iuml","jcirc","jcy","jfr","jmath","jopf","jscr","jsercy","jukcy","kappa","kappav","kcedil","kcy","kfr","kgreen","khcy","kjcy","kopf","kscr","lAarr","lArr","lAtail","lBarr","lE","lEg","lHar","lacute","laemptyv","lagran","lambda","lang","langd","langle","lap","laquo","larr","larrb","larrbfs","larrfs","larrhk","larrlp","larrpl","larrsim","larrtl","lat","latail","late","lates","lbarr","lbbrk","lbrace","lbrack","lbrke","lbrksld","lbrkslu","lcaron","lcedil","lceil","lcub","lcy","ldca","ldquo","ldquor","ldrdhar","ldrushar","ldsh","le","leftarrow","leftarrowtail","leftharpoondown","leftharpoonup","leftleftarrows","leftrightarrow","leftrightarrows","leftrightharpoons","leftrightsquigarrow","leftthreetimes","leg","leq","leqq","leqslant","les","lescc","lesdot","lesdoto","lesdotor","lesg","lesges","lessapprox","lessdot","lesseqgtr","lesseqqgtr","lessgtr","lesssim","lfisht","lfloor","lfr","lg","lgE","lhard","lharu","lharul","lhblk","ljcy","ll","llarr","llcorner","llhard","lltri","lmidot","lmoust","lmoustache","lnE","lnap","lnapprox","lne","lneq","lneqq","lnsim","loang","loarr","lobrk","longleftarrow","longleftrightarrow","longmapsto","longrightarrow","looparrowleft","looparrowright","lopar","lopf","loplus","lotimes","lowast","lowbar","loz","lozenge","lozf","lpar","lparlt","lrarr","lrcorner","lrhar","lrhard","lrm","lrtri","lsaquo","lscr","lsh","lsim","lsime","lsimg","lsqb","lsquo","lsquor","lstrok","lt","ltcc","ltcir","ltdot","lthree","ltimes","ltlarr","ltquest","ltrPar","ltri","ltrie","ltrif","lurdshar","luruhar","lvertneqq","lvnE","mDDot","macr","male","malt","maltese","mapsto","mapstodown","mapstoleft","mapstoup","mcomma","mcy","mdash","measuredangle","mfr","mho","micro","mid","midast","midcir","middot","minus","minusb","minusd","minusdu","mlcp","mldr","mnplus","models","mopf","mp","mscr","mstpos","mu","multimap","mumap","nGg","nGt","nGtv","nLeftarrow","nLeftrightarrow","nLl","nLt","nLtv","nRightarrow","nVDash","nVdash","nabla","nacute","nang","nap","napE","napid","napos","napprox","natur","natural","naturals","nbsp","nbump","nbumpe","ncap","ncaron","ncedil","ncong","ncongdot","ncup","ncy","ndash","ne","neArr","nearhk","nearr","nearrow","nedot","nequiv","nesear","nesim","nexist","nexists","nfr","ngE","nge","ngeq","ngeqq","ngeqslant","nges","ngsim","ngt","ngtr","nhArr","nharr","nhpar","ni","nis","nisd","niv","njcy","nlArr","nlE","nlarr","nldr","nle","nleftarrow","nleftrightarrow","nleq","nleqq","nleqslant","nles","nless","nlsim","nlt","nltri","nltrie","nmid","nopf","not","notin","notinE","notindot","notinva","notinvb","notinvc","notni","notniva","notnivb","notnivc","npar","nparallel","nparsl","npart","npolint","npr","nprcue","npre","nprec","npreceq","nrArr","nrarr","nrarrc","nrarrw","nrightarrow","nrtri","nrtrie","nsc","nsccue","nsce","nscr","nshortmid","nshortparallel","nsim","nsime","nsimeq","nsmid","nspar","nsqsube","nsqsupe","nsub","nsubE","nsube","nsubset","nsubseteq","nsubseteqq","nsucc","nsucceq","nsup","nsupE","nsupe","nsupset","nsupseteq","nsupseteqq","ntgl","ntilde","ntlg","ntriangleleft","ntrianglelefteq","ntriangleright","ntrianglerighteq","nu","num","numero","numsp","nvDash","nvHarr","nvap","nvdash","nvge","nvgt","nvinfin","nvlArr","nvle","nvlt","nvltrie","nvrArr","nvrtrie","nvsim","nwArr","nwarhk","nwarr","nwarrow","nwnear","oS","oacute","oast","ocir","ocirc","ocy","odash","odblac","odiv","odot","odsold","oelig","ofcir","ofr","ogon","ograve","ogt","ohbar","ohm","oint","olarr","olcir","olcross","oline","olt","omacr","omega","omicron","omid","ominus","oopf","opar","operp","oplus","or","orarr","ord","orderof","ordf","ordm","origof","oror","orslope","orv","oscr","oslash","osol","otilde","otimes","otimesas","ouml","ovbar","par","para","parallel","parsim","parsl","pcy","percnt","period","permil","perp","pertenk","pfr","phi","phiv","phmmat","phone","pi","pitchfork","piv","planck","planckh","plankv","plus","plusacir","plusb","pluscir","plusdo","plusdu","pluse","plusmn","plussim","plustwo","pm","pointint","popf","pound","pr","prE","prap","prcue","pre","prec","precapprox","preccurlyeq","preceq","precnapprox","precneqq","precnsim","precsim","prime","primes","prnE","prnap","prnsim","prod","profalar","profline","profsurf","propto","prsim","prurel","pscr","psi","puncsp","qfr","qint","qopf","qprime","qscr","quaternions","quatint","quest","questeq","quot","rAarr","rArr","rAtail","rBarr","rHar","race","racute","radic","raemptyv","rang","rangd","range","rangle","raquo","rarr","rarrap","rarrb","rarrbfs","rarrc","rarrfs","rarrhk","rarrlp","rarrpl","rarrsim","rarrtl","rarrw","ratail","ratio","rationals","rbarr","rbbrk","rbrace","rbrack","rbrke","rbrksld","rbrkslu","rcaron","rcedil","rceil","rcub","rcy","rdca","rdldhar","rdquo","rdquor","rdsh","real","realine","realpart","reals","rect","reg","rfisht","rfloor","rfr","rhard","rharu","rharul","rho","rhov","rightarrow","rightarrowtail","rightharpoondown","rightharpoonup","rightleftarrows","rightleftharpoons","rightrightarrows","rightsquigarrow","rightthreetimes","ring","risingdotseq","rlarr","rlhar","rlm","rmoust","rmoustache","rnmid","roang","roarr","robrk","ropar","ropf","roplus","rotimes","rpar","rpargt","rppolint","rrarr","rsaquo","rscr","rsh","rsqb","rsquo","rsquor","rthree","rtimes","rtri","rtrie","rtrif","rtriltri","ruluhar","rx","sacute","sbquo","sc","scE","scap","scaron","sccue","sce","scedil","scirc","scnE","scnap","scnsim","scpolint","scsim","scy","sdot","sdotb","sdote","seArr","searhk","searr","searrow","sect","semi","seswar","setminus","setmn","sext","sfr","sfrown","sharp","shchcy","shcy","shortmid","shortparallel","shy","sigma","sigmaf","sigmav","sim","simdot","sime","simeq","simg","simgE","siml","simlE","simne","simplus","simrarr","slarr","smallsetminus","smashp","smeparsl","smid","smile","smt","smte","smtes","softcy","sol","solb","solbar","sopf","spades","spadesuit","spar","sqcap","sqcaps","sqcup","sqcups","sqsub","sqsube","sqsubset","sqsubseteq","sqsup","sqsupe","sqsupset","sqsupseteq","squ","square","squarf","squf","srarr","sscr","ssetmn","ssmile","sstarf","star","starf","straightepsilon","straightphi","strns","sub","subE","subdot","sube","subedot","submult","subnE","subne","subplus","subrarr","subset","subseteq","subseteqq","subsetneq","subsetneqq","subsim","subsub","subsup","succ","succapprox","succcurlyeq","succeq","succnapprox","succneqq","succnsim","succsim","sum","sung","sup1","sup2","sup3","sup","supE","supdot","supdsub","supe","supedot","suphsol","suphsub","suplarr","supmult","supnE","supne","supplus","supset","supseteq","supseteqq","supsetneq","supsetneqq","supsim","supsub","supsup","swArr","swarhk","swarr","swarrow","swnwar","szlig","tau","tbrk","tcaron","tcedil","tcy","tdot","telrec","tfr","there4","therefore","theta","thetasym","thetav","thickapprox","thicksim","thinsp","thkap","thksim","thorn","tilde","times","timesb","timesbar","timesd","tint","toea","top","topbot","topcir","topf","topfork","tosa","tprime","trade","triangle","triangledown","triangleleft","trianglelefteq","triangleq","triangleright","trianglerighteq","tridot","trie","triminus","triplus","trisb","tritime","trpezium","tscr","tscy","tshcy","tstrok","twixt","twoheadleftarrow","twoheadrightarrow","uArr","uHar","uacute","uarr","ubrcy","ubreve","ucirc","ucy","udarr","udblac","udhar","ufisht","ufr","ugrave","uharl","uharr","uhblk","ulcorn","ulcorner","ulcrop","ultri","umacr","uml","uogon","uopf","uparrow","updownarrow","upharpoonleft","upharpoonright","uplus","upsi","upsih","upsilon","upuparrows","urcorn","urcorner","urcrop","uring","urtri","uscr","utdot","utilde","utri","utrif","uuarr","uuml","uwangle","vArr","vBar","vBarv","vDash","vangrt","varepsilon","varkappa","varnothing","varphi","varpi","varpropto","varr","varrho","varsigma","varsubsetneq","varsubsetneqq","varsupsetneq","varsupsetneqq","vartheta","vartriangleleft","vartriangleright","vcy","vdash","vee","veebar","veeeq","vellip","verbar","vert","vfr","vltri","vnsub","vnsup","vopf","vprop","vrtri","vscr","vsubnE","vsubne","vsupnE","vsupne","vzigzag","wcirc","wedbar","wedge","wedgeq","weierp","wfr","wopf","wp","wr","wreath","wscr","xcap","xcirc","xcup","xdtri","xfr","xhArr","xharr","xi","xlArr","xlarr","xmap","xnis","xodot","xopf","xoplus","xotime","xrArr","xrarr","xscr","xsqcup","xuplus","xutri","xvee","xwedge","yacute","yacy","ycirc","ycy","yen","yfr","yicy","yopf","yscr","yucy","yuml","zacute","zcaron","zcy","zdot","zeetrf","zeta","zfr","zhcy","zigrarr","zopf","zscr","zwj","zwnj","decodeNamedCharacterReference","characterReference","numeric","characterEscape","lineEnding","labelEnd","labelStart","_balanced","_inactive","balanced","afterLabelEnd","resourceConstruct","fullReferenceConstruct","collapsedReferenceConstruct","close","media","group","insideSpan","destinationAfter","afterLabel","labelStartImage","classifyCharacter","attention","attentionMarkers","_open","_close","openingSequence","nextEvents","movePoint","autolink","schemeOrEmailAtext","emailAtext","schemeInsideOrEmailAtext","urlInside","emailAtSignOrDot","emailLabel","emailValue","htmlText","declarationOpen","instruction","tagOpen","commentOpen","cdataOpen","commentStart","commentStartDash","commentClose","atLineEnding","cdata","cdataClose","cdataEnd","instructionClose","tagClose","tagCloseBetween","tagOpenBetween","tagOpenAttributeName","tagOpenAttributeNameAfter","tagOpenAttributeValueBefore","tagOpenAttributeValueQuoted","tagOpenAttributeValueUnquoted","tagOpenAttributeValueQuotedAfter","labelStartLink","hardBreakEscape","codeText","tailExitIndex","headEnterIndex","resolveText","search","decodeNumericCharacterReference","parseInt","characterEscapeOrReference","decodeString","decode","$0","$1","$2","head","hex","fromMarkdown","config","configure","transforms","canContainEols","opener","link","autolinkProtocol","onenterdata","autolinkEmail","atxHeading","codeFlow","codeFencedFenceInfo","codeFencedFenceMeta","codeTextData","codeFlowValue","definitionDestinationString","definitionLabelString","definitionTitleString","emphasis","hardBreak","hardBreakTrailing","html","htmlFlowData","htmlTextData","listItem","listItemValue","onenterlistitemvalue","listOrdered","onenterlistordered","listUnordered","reference","onenterreference","referenceString","resourceDestinationString","resourceTitleString","setextHeading","strong","closer","atxHeadingSequence","onexitatxheadingsequence","onexitautolinkemail","onexitautolinkprotocol","characterEscapeValue","onexitdata","characterReferenceMarkerHexadecimal","onexitcharacterreferencemarker","characterReferenceMarkerNumeric","characterReferenceValue","onexitcharacterreferencevalue","onexitcodefenced","codeFencedFence","onexitcodefencedfence","onexitcodefencedfenceinfo","onexitcodefencedfencemeta","onexitcodeindented","onexitcodetext","onexitdefinitiondestinationstring","onexitdefinitionlabelstring","onexitdefinitiontitlestring","onexithardbreak","onexithtmlflow","onexithtmltext","onexitimage","onexitlabel","labelText","onexitlabeltext","onexitlineending","onexitlink","onexitreferencestring","onexitresourcedestinationstring","onexitresourcetitlestring","resource","onexitresource","onexitsetextheading","setextHeadingLineSequence","onexitsetextheadinglinesequence","setextHeadingText","onexitsetextheadingtext","mdastExtensions","tokenStack","listStack","resume","setData","getData","prepareList","handler","defaultOnError","firstBlankLineIndex","containerBalance","listSpread","tailIndex","tailEvent","_spread","errorHandler","onExitError","depth","parent","referenceType","ancestor","fragment","ordered","spread","checked","compiler","postprocess","defaultConstructs","concat","atCarriageReturn","endPosition","lastIndex","Math","ceil","preprocess","combined","remarkParse","props","convert","castFactory","typeFactory","anyFactory","propsFactory","tests","checks","visitParents","visitor","reverse","is","step","factory","parents","visit","subresult","grandparents","toResult","pointStart","pointEnd","clean","unknown","augment","handlers","passThrough","returnNode","unknownHandler","nodes","loose","properties","className","footnoteReference","footnoteOrder","id","role","revert","subtype","suffix","contents","listItemLoose","blockquote","break","delete","footnote","footnoteById","no","dangerous","imageReference","inlineCode","linkReference","listLoose","wrapped","disabled","child","root","table","rows","align","row","out","cell","toml","ignore","yaml","footnoteDefinition","allowDangerousHtml","definitions","hName","hProperties","hChildren","ctx","toHast","foot","listItems","backReference","footer","remarkRehype","bridge","mutate","Schema","normal","space","merge","Info","attribute","boolean","booleanish","overloadedBoolean","number","commaSeparated","spaceSeparated","commaOrSpaceSeparated","mustUseProperty","powers","increment","types","DefinedInfo","mask","mark","transform","attributes","xlink","xLinkActuate","xLinkArcRole","xLinkHref","xLinkRole","xLinkShow","xLinkTitle","xLinkType","xml","xmlLang","xmlBase","xmlSpace","caseSensitiveTransform","caseInsensitiveTransform","xmlns","xmlnsxlink","xmlnsXLink","aria","ariaActiveDescendant","ariaAtomic","ariaAutoComplete","ariaBusy","ariaChecked","ariaColCount","ariaColIndex","ariaColSpan","ariaControls","ariaCurrent","ariaDescribedBy","ariaDetails","ariaDisabled","ariaDropEffect","ariaErrorMessage","ariaExpanded","ariaFlowTo","ariaGrabbed","ariaHasPopup","ariaHidden","ariaInvalid","ariaKeyShortcuts","ariaLabel","ariaLabelledBy","ariaLevel","ariaLive","ariaModal","ariaMultiLine","ariaMultiSelectable","ariaOrientation","ariaOwns","ariaPlaceholder","ariaPosInSet","ariaPressed","ariaReadOnly","ariaRelevant","ariaRequired","ariaRoleDescription","ariaRowCount","ariaRowIndex","ariaRowSpan","ariaSelected","ariaSetSize","ariaSort","ariaValueMax","ariaValueMin","ariaValueNow","ariaValueText","acceptcharset","classname","htmlfor","httpequiv","abbr","accept","acceptCharset","accessKey","action","allow","allowFullScreen","allowPaymentRequest","allowUserMedia","as","async","autoCapitalize","autoComplete","autoFocus","autoPlay","capture","charSet","cite","cols","colSpan","contentEditable","controls","controlsList","coords","crossOrigin","dateTime","decoding","default","defer","dir","dirName","download","draggable","encType","enterKeyHint","form","formAction","formEncType","formMethod","formNoValidate","formTarget","headers","height","hidden","high","hrefLang","htmlFor","httpEquiv","imageSizes","imageSrcSet","inputMode","integrity","isMap","itemId","itemProp","itemRef","itemScope","itemType","language","loading","loop","low","manifest","maxLength","method","min","minLength","multiple","muted","nonce","noModule","noValidate","onAbort","onAfterPrint","onAuxClick","onBeforePrint","onBeforeUnload","onBlur","onCancel","onCanPlay","onCanPlayThrough","onChange","onClick","onClose","onContextLost","onContextMenu","onContextRestored","onCopy","onCueChange","onCut","onDblClick","onDrag","onDragEnd","onDragEnter","onDragExit","onDragLeave","onDragOver","onDragStart","onDrop","onDurationChange","onEmptied","onEnded","onError","onFocus","onFormData","onHashChange","onInput","onInvalid","onKeyDown","onKeyPress","onKeyUp","onLanguageChange","onLoad","onLoadedData","onLoadedMetadata","onLoadEnd","onLoadStart","onMessage","onMessageError","onMouseDown","onMouseEnter","onMouseLeave","onMouseMove","onMouseOut","onMouseOver","onMouseUp","onOffline","onOnline","onPageHide","onPageShow","onPaste","onPause","onPlay","onPlaying","onPopState","onProgress","onRateChange","onRejectionHandled","onReset","onResize","onScroll","onSecurityPolicyViolation","onSeeked","onSeeking","onSelect","onSlotChange","onStalled","onStorage","onSubmit","onSuspend","onTimeUpdate","onToggle","onUnhandledRejection","onUnload","onVolumeChange","onWaiting","onWheel","optimum","pattern","ping","placeholder","playsInline","poster","preload","readOnly","referrerPolicy","rel","required","reversed","rowSpan","sandbox","scope","scoped","seamless","selected","shape","sizes","slot","span","spellCheck","srcDoc","srcLang","srcSet","tabIndex","translate","typeMustMatch","useMap","width","aLink","archive","axis","background","bgColor","border","borderColor","bottomMargin","cellPadding","cellSpacing","char","charOff","classId","clear","codeBase","codeType","color","compact","declare","face","frame","frameBorder","hSpace","leftMargin","longDesc","lowSrc","marginHeight","marginWidth","noResize","noHref","noShade","noWrap","object","profile","prompt","rev","rightMargin","scheme","scrolling","standby","summary","topMargin","valueType","version","vAlign","vLink","vSpace","allowTransparency","autoCorrect","autoSave","disablePictureInPicture","disableRemotePlayback","results","security","unselectable","svg","accentHeight","alignmentBaseline","arabicForm","baselineShift","capHeight","clipPath","clipRule","colorInterpolation","colorInterpolationFilters","colorProfile","colorRendering","dataType","dominantBaseline","enableBackground","fillOpacity","fillRule","floodColor","floodOpacity","fontFamily","fontSize","fontSizeAdjust","fontStretch","fontStyle","fontVariant","fontWeight","glyphName","glyphOrientationHorizontal","glyphOrientationVertical","horizAdvX","horizOriginX","horizOriginY","imageRendering","letterSpacing","lightingColor","markerEnd","markerMid","markerStart","navDown","navDownLeft","navDownRight","navLeft","navNext","navPrev","navRight","navUp","navUpLeft","navUpRight","onActivate","onBegin","onEnd","onFocusIn","onFocusOut","onMouseWheel","onRepeat","onShow","onZoom","overlinePosition","overlineThickness","paintOrder","panose1","pointerEvents","renderingIntent","shapeRendering","stopColor","stopOpacity","strikethroughPosition","strikethroughThickness","strokeDashArray","strokeDashOffset","strokeLineCap","strokeLineJoin","strokeMiterLimit","strokeOpacity","strokeWidth","textAnchor","textDecoration","textRendering","underlinePosition","underlineThickness","unicodeBidi","unicodeRange","unitsPerEm","vAlphabetic","vHanging","vIdeographic","vMathematical","vectorEffect","vertAdvY","vertOriginX","vertOriginY","wordSpacing","writingMode","xHeight","playbackOrder","timelineBegin","about","accumulate","additive","alphabetic","amplitude","ascent","attributeName","attributeType","azimuth","bandwidth","baseFrequency","baseProfile","bbox","begin","bias","by","calcMode","clip","clipPathUnits","contentScriptType","contentStyleType","cursor","cx","cy","defaultAction","descent","diffuseConstant","direction","display","dur","divisor","dx","dy","edgeMode","editable","elevation","exponent","externalResourcesRequired","fill","filter","filterRes","filterUnits","focusable","focusHighlight","format","fr","fx","fy","g1","g2","glyphRef","gradientTransform","gradientUnits","hanging","hatchContentUnits","hatchUnits","ideographic","initialVisibility","in2","intercept","k1","k2","k3","k4","kernelMatrix","kernelUnitLength","keyPoints","keySplines","keyTimes","kerning","lengthAdjust","limitingConeAngle","local","markerHeight","markerUnits","markerWidth","maskContentUnits","maskUnits","mathematical","mediaCharacterEncoding","mediaContentEncodings","mediaSize","mediaTime","mode","numOctaves","observer","opacity","operator","orient","orientation","overflow","overlay","pathLength","patternContentUnits","patternTransform","patternUnits","phase","pitch","points","pointsAtX","pointsAtY","pointsAtZ","preserveAlpha","preserveAspectRatio","primitiveUnits","propagate","radius","refX","refY","repeatCount","repeatDur","requiredExtensions","requiredFeatures","requiredFonts","requiredFormats","restart","rotate","ry","scale","seed","side","slope","snapshotTime","specularConstant","specularExponent","spreadMethod","spacing","startOffset","stdDeviation","stemh","stemv","stitchTiles","stroke","surfaceScale","syncBehavior","syncBehaviorDefault","syncMaster","syncTolerance","syncToleranceDefault","systemLanguage","tableValues","targetX","targetY","textLength","transformBehavior","to","u1","u2","unicode","viewBox","viewTarget","visibility","widths","x1","x2","xChannelSelector","y1","y2","yChannelSelector","zoomAndPan","htmlBase","svgBase","rehypeFilter","allowedElements","disallowedElements","allowElement","parent_","unwrapDisallowed","protocols","thing","valid","kebab","camelcase","hastToReact","tableElements","Set","childrenToReact","childIndex","toReact","has","skipHtml","parentSchema","schema","addProperty","listDepth","component","components","basic","React","ReactIs","linkTarget","transformLinkUri","inline","level","transformImageUri","input","getInputElement","getElementsBeforeCount","textAlign","isHeader","sourcePos","rawSourcePos","sourcePosition","includeElementIndex","siblingCount","createElement","count","Type","rest","dashes","find","padRight","padLeft","commas","styleReplacer","parseStyle","deprecated","renderers","astPlugins","escapeHtml","allowNode","allowedTypes","disallowedTypes","includeNodeIndex","ReactMarkdown","deprecation","console","warn","remarkPlugins","rehypePlugins","hastNode","defaultProps","uri","first","propTypes","PropTypes","func","arrayOf","bool","oneOfType"],"mappings":"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","file":"static/js/0.f6fa9e37.chunk.js","sourcesContent":["\n'use strict';\n\n\nvar encodeCache = {};\n\n\n// Create a lookup array where anything but characters in `chars` string\n// and alphanumeric chars is percent-encoded.\n//\nfunction getEncodeCache(exclude) {\n  var i, ch, cache = encodeCache[exclude];\n  if (cache) { return cache; }\n\n  cache = encodeCache[exclude] = [];\n\n  for (i = 0; i < 128; i++) {\n    ch = String.fromCharCode(i);\n\n    if (/^[0-9a-z]$/i.test(ch)) {\n      // always allow unencoded alphanumeric characters\n      cache.push(ch);\n    } else {\n      cache.push('%' + ('0' + i.toString(16).toUpperCase()).slice(-2));\n    }\n  }\n\n  for (i = 0; i < exclude.length; i++) {\n    cache[exclude.charCodeAt(i)] = exclude[i];\n  }\n\n  return cache;\n}\n\n\n// Encode unsafe characters with percent-encoding, skipping already\n// encoded sequences.\n//\n//  - string       - string to encode\n//  - exclude      - list of characters to ignore (in addition to a-zA-Z0-9)\n//  - keepEscaped  - don't encode '%' in a correct escape sequence (default: true)\n//\nfunction encode(string, exclude, keepEscaped) {\n  var i, l, code, nextCode, cache,\n      result = '';\n\n  if (typeof exclude !== 'string') {\n    // encode(string, keepEscaped)\n    keepEscaped  = exclude;\n    exclude = encode.defaultChars;\n  }\n\n  if (typeof keepEscaped === 'undefined') {\n    keepEscaped = true;\n  }\n\n  cache = getEncodeCache(exclude);\n\n  for (i = 0, l = string.length; i < l; i++) {\n    code = string.charCodeAt(i);\n\n    if (keepEscaped && code === 0x25 /* % */ && i + 2 < l) {\n      if (/^[0-9a-f]{2}$/i.test(string.slice(i + 1, i + 3))) {\n        result += string.slice(i, i + 3);\n        i += 2;\n        continue;\n      }\n    }\n\n    if (code < 128) {\n      result += cache[code];\n      continue;\n    }\n\n    if (code >= 0xD800 && code <= 0xDFFF) {\n      if (code >= 0xD800 && code <= 0xDBFF && i + 1 < l) {\n        nextCode = string.charCodeAt(i + 1);\n        if (nextCode >= 0xDC00 && nextCode <= 0xDFFF) {\n          result += encodeURIComponent(string[i] + string[i + 1]);\n          i++;\n          continue;\n        }\n      }\n      result += '%EF%BF%BD';\n      continue;\n    }\n\n    result += encodeURIComponent(string[i]);\n  }\n\n  return result;\n}\n\nencode.defaultChars   = \";/?:@&=+$,-_.!~*'()#\";\nencode.componentChars = \"-_.!~*'()\";\n\n\nmodule.exports = encode;\n","/*!\n * Determine if an object is a Buffer\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n\nmodule.exports = function isBuffer (obj) {\n  return obj != null && obj.constructor != null &&\n    typeof obj.constructor.isBuffer === 'function' && obj.constructor.isBuffer(obj)\n}\n","'use strict';\n\nvar hasOwn = Object.prototype.hasOwnProperty;\nvar toStr = Object.prototype.toString;\nvar defineProperty = Object.defineProperty;\nvar gOPD = Object.getOwnPropertyDescriptor;\n\nvar isArray = function isArray(arr) {\n\tif (typeof Array.isArray === 'function') {\n\t\treturn Array.isArray(arr);\n\t}\n\n\treturn toStr.call(arr) === '[object Array]';\n};\n\nvar isPlainObject = function isPlainObject(obj) {\n\tif (!obj || toStr.call(obj) !== '[object Object]') {\n\t\treturn false;\n\t}\n\n\tvar hasOwnConstructor = hasOwn.call(obj, 'constructor');\n\tvar hasIsPrototypeOf = obj.constructor && obj.constructor.prototype && hasOwn.call(obj.constructor.prototype, 'isPrototypeOf');\n\t// Not own constructor property must be Object\n\tif (obj.constructor && !hasOwnConstructor && !hasIsPrototypeOf) {\n\t\treturn false;\n\t}\n\n\t// Own properties are enumerated firstly, so to speed up,\n\t// if last one is own, then all properties are own.\n\tvar key;\n\tfor (key in obj) { /**/ }\n\n\treturn typeof key === 'undefined' || hasOwn.call(obj, key);\n};\n\n// If name is '__proto__', and Object.defineProperty is available, define __proto__ as an own property on target\nvar setProperty = function setProperty(target, options) {\n\tif (defineProperty && options.name === '__proto__') {\n\t\tdefineProperty(target, options.name, {\n\t\t\tenumerable: true,\n\t\t\tconfigurable: true,\n\t\t\tvalue: options.newValue,\n\t\t\twritable: true\n\t\t});\n\t} else {\n\t\ttarget[options.name] = options.newValue;\n\t}\n};\n\n// Return undefined instead of __proto__ if '__proto__' is not an own property\nvar getProperty = function getProperty(obj, name) {\n\tif (name === '__proto__') {\n\t\tif (!hasOwn.call(obj, name)) {\n\t\t\treturn void 0;\n\t\t} else if (gOPD) {\n\t\t\t// In early versions of node, obj['__proto__'] is buggy when obj has\n\t\t\t// __proto__ as an own property. Object.getOwnPropertyDescriptor() works.\n\t\t\treturn gOPD(obj, name).value;\n\t\t}\n\t}\n\n\treturn obj[name];\n};\n\nmodule.exports = function extend() {\n\tvar options, name, src, copy, copyIsArray, clone;\n\tvar target = arguments[0];\n\tvar i = 1;\n\tvar length = arguments.length;\n\tvar deep = false;\n\n\t// Handle a deep copy situation\n\tif (typeof target === 'boolean') {\n\t\tdeep = target;\n\t\ttarget = arguments[1] || {};\n\t\t// skip the boolean and the target\n\t\ti = 2;\n\t}\n\tif (target == null || (typeof target !== 'object' && typeof target !== 'function')) {\n\t\ttarget = {};\n\t}\n\n\tfor (; i < length; ++i) {\n\t\toptions = arguments[i];\n\t\t// Only deal with non-null/undefined values\n\t\tif (options != null) {\n\t\t\t// Extend the base object\n\t\t\tfor (name in options) {\n\t\t\t\tsrc = getProperty(target, name);\n\t\t\t\tcopy = getProperty(options, name);\n\n\t\t\t\t// Prevent never-ending loop\n\t\t\t\tif (target !== copy) {\n\t\t\t\t\t// Recurse if we're merging plain objects or arrays\n\t\t\t\t\tif (deep && copy && (isPlainObject(copy) || (copyIsArray = isArray(copy)))) {\n\t\t\t\t\t\tif (copyIsArray) {\n\t\t\t\t\t\t\tcopyIsArray = false;\n\t\t\t\t\t\t\tclone = src && isArray(src) ? src : [];\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tclone = src && isPlainObject(src) ? src : {};\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Never move original objects, clone them\n\t\t\t\t\t\tsetProperty(target, { name: name, newValue: extend(deep, clone, copy) });\n\n\t\t\t\t\t// Don't bring in undefined values\n\t\t\t\t\t} else if (typeof copy !== 'undefined') {\n\t\t\t\t\t\tsetProperty(target, { name: name, newValue: copy });\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// Return the modified object\n\treturn target;\n};\n","/*!\n * Determine if an object is a Buffer\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n\nmodule.exports = function isBuffer (obj) {\n  return obj != null && obj.constructor != null &&\n    typeof obj.constructor.isBuffer === 'function' && obj.constructor.isBuffer(obj)\n}\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-is.production.min.js');\n} else {\n  module.exports = require('./cjs/react-is.development.js');\n}\n","/** @license React v17.0.2\n * react-is.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var b=60103,c=60106,d=60107,e=60108,f=60114,g=60109,h=60110,k=60112,l=60113,m=60120,n=60115,p=60116,q=60121,r=60122,u=60117,v=60129,w=60131;\nif(\"function\"===typeof Symbol&&Symbol.for){var x=Symbol.for;b=x(\"react.element\");c=x(\"react.portal\");d=x(\"react.fragment\");e=x(\"react.strict_mode\");f=x(\"react.profiler\");g=x(\"react.provider\");h=x(\"react.context\");k=x(\"react.forward_ref\");l=x(\"react.suspense\");m=x(\"react.suspense_list\");n=x(\"react.memo\");p=x(\"react.lazy\");q=x(\"react.block\");r=x(\"react.server.block\");u=x(\"react.fundamental\");v=x(\"react.debug_trace_mode\");w=x(\"react.legacy_hidden\")}\nfunction y(a){if(\"object\"===typeof a&&null!==a){var t=a.$$typeof;switch(t){case b:switch(a=a.type,a){case d:case f:case e:case l:case m:return a;default:switch(a=a&&a.$$typeof,a){case h:case k:case p:case n:case g:return a;default:return t}}case c:return t}}}var z=g,A=b,B=k,C=d,D=p,E=n,F=c,G=f,H=e,I=l;exports.ContextConsumer=h;exports.ContextProvider=z;exports.Element=A;exports.ForwardRef=B;exports.Fragment=C;exports.Lazy=D;exports.Memo=E;exports.Portal=F;exports.Profiler=G;exports.StrictMode=H;\nexports.Suspense=I;exports.isAsyncMode=function(){return!1};exports.isConcurrentMode=function(){return!1};exports.isContextConsumer=function(a){return y(a)===h};exports.isContextProvider=function(a){return y(a)===g};exports.isElement=function(a){return\"object\"===typeof a&&null!==a&&a.$$typeof===b};exports.isForwardRef=function(a){return y(a)===k};exports.isFragment=function(a){return y(a)===d};exports.isLazy=function(a){return y(a)===p};exports.isMemo=function(a){return y(a)===n};\nexports.isPortal=function(a){return y(a)===c};exports.isProfiler=function(a){return y(a)===f};exports.isStrictMode=function(a){return y(a)===e};exports.isSuspense=function(a){return y(a)===l};exports.isValidElementType=function(a){return\"string\"===typeof a||\"function\"===typeof a||a===d||a===f||a===v||a===e||a===l||a===m||a===w||\"object\"===typeof a&&null!==a&&(a.$$typeof===p||a.$$typeof===n||a.$$typeof===g||a.$$typeof===h||a.$$typeof===k||a.$$typeof===u||a.$$typeof===q||a[0]===r)?!0:!1};\nexports.typeOf=y;\n","var parse = require('inline-style-parser');\n\n/**\n * Parses inline style to object.\n *\n * @example\n * // returns { 'line-height': '42' }\n * StyleToObject('line-height: 42;');\n *\n * @param  {String}      style      - The inline style.\n * @param  {Function}    [iterator] - The iterator function.\n * @return {null|Object}\n */\nfunction StyleToObject(style, iterator) {\n  var output = null;\n  if (!style || typeof style !== 'string') {\n    return output;\n  }\n\n  var declaration;\n  var declarations = parse(style);\n  var hasIterator = typeof iterator === 'function';\n  var property;\n  var value;\n\n  for (var i = 0, len = declarations.length; i < len; i++) {\n    declaration = declarations[i];\n    property = declaration.property;\n    value = declaration.value;\n\n    if (hasIterator) {\n      iterator(property, value, declaration);\n    } else if (value) {\n      output || (output = {});\n      output[property] = value;\n    }\n  }\n\n  return output;\n}\n\nmodule.exports = StyleToObject;\n","// http://www.w3.org/TR/CSS21/grammar.html\n// https://github.com/visionmedia/css-parse/pull/49#issuecomment-30088027\nvar COMMENT_REGEX = /\\/\\*[^*]*\\*+([^/*][^*]*\\*+)*\\//g;\n\nvar NEWLINE_REGEX = /\\n/g;\nvar WHITESPACE_REGEX = /^\\s*/;\n\n// declaration\nvar PROPERTY_REGEX = /^(\\*?[-#/*\\\\\\w]+(\\[[0-9a-z_-]+\\])?)\\s*/;\nvar COLON_REGEX = /^:\\s*/;\nvar VALUE_REGEX = /^((?:'(?:\\\\'|.)*?'|\"(?:\\\\\"|.)*?\"|\\([^)]*?\\)|[^};])+)/;\nvar SEMICOLON_REGEX = /^[;\\s]*/;\n\n// https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/String/Trim#Polyfill\nvar TRIM_REGEX = /^\\s+|\\s+$/g;\n\n// strings\nvar NEWLINE = '\\n';\nvar FORWARD_SLASH = '/';\nvar ASTERISK = '*';\nvar EMPTY_STRING = '';\n\n// types\nvar TYPE_COMMENT = 'comment';\nvar TYPE_DECLARATION = 'declaration';\n\n/**\n * @param {String} style\n * @param {Object} [options]\n * @return {Object[]}\n * @throws {TypeError}\n * @throws {Error}\n */\nmodule.exports = function(style, options) {\n  if (typeof style !== 'string') {\n    throw new TypeError('First argument must be a string');\n  }\n\n  if (!style) return [];\n\n  options = options || {};\n\n  /**\n   * Positional.\n   */\n  var lineno = 1;\n  var column = 1;\n\n  /**\n   * Update lineno and column based on `str`.\n   *\n   * @param {String} str\n   */\n  function updatePosition(str) {\n    var lines = str.match(NEWLINE_REGEX);\n    if (lines) lineno += lines.length;\n    var i = str.lastIndexOf(NEWLINE);\n    column = ~i ? str.length - i : column + str.length;\n  }\n\n  /**\n   * Mark position and patch `node.position`.\n   *\n   * @return {Function}\n   */\n  function position() {\n    var start = { line: lineno, column: column };\n    return function(node) {\n      node.position = new Position(start);\n      whitespace();\n      return node;\n    };\n  }\n\n  /**\n   * Store position information for a node.\n   *\n   * @constructor\n   * @property {Object} start\n   * @property {Object} end\n   * @property {undefined|String} source\n   */\n  function Position(start) {\n    this.start = start;\n    this.end = { line: lineno, column: column };\n    this.source = options.source;\n  }\n\n  /**\n   * Non-enumerable source string.\n   */\n  Position.prototype.content = style;\n\n  var errorsList = [];\n\n  /**\n   * Error `msg`.\n   *\n   * @param {String} msg\n   * @throws {Error}\n   */\n  function error(msg) {\n    var err = new Error(\n      options.source + ':' + lineno + ':' + column + ': ' + msg\n    );\n    err.reason = msg;\n    err.filename = options.source;\n    err.line = lineno;\n    err.column = column;\n    err.source = style;\n\n    if (options.silent) {\n      errorsList.push(err);\n    } else {\n      throw err;\n    }\n  }\n\n  /**\n   * Match `re` and return captures.\n   *\n   * @param {RegExp} re\n   * @return {undefined|Array}\n   */\n  function match(re) {\n    var m = re.exec(style);\n    if (!m) return;\n    var str = m[0];\n    updatePosition(str);\n    style = style.slice(str.length);\n    return m;\n  }\n\n  /**\n   * Parse whitespace.\n   */\n  function whitespace() {\n    match(WHITESPACE_REGEX);\n  }\n\n  /**\n   * Parse comments.\n   *\n   * @param {Object[]} [rules]\n   * @return {Object[]}\n   */\n  function comments(rules) {\n    var c;\n    rules = rules || [];\n    while ((c = comment())) {\n      if (c !== false) {\n        rules.push(c);\n      }\n    }\n    return rules;\n  }\n\n  /**\n   * Parse comment.\n   *\n   * @return {Object}\n   * @throws {Error}\n   */\n  function comment() {\n    var pos = position();\n    if (FORWARD_SLASH != style.charAt(0) || ASTERISK != style.charAt(1)) return;\n\n    var i = 2;\n    while (\n      EMPTY_STRING != style.charAt(i) &&\n      (ASTERISK != style.charAt(i) || FORWARD_SLASH != style.charAt(i + 1))\n    ) {\n      ++i;\n    }\n    i += 2;\n\n    if (EMPTY_STRING === style.charAt(i - 1)) {\n      return error('End of comment missing');\n    }\n\n    var str = style.slice(2, i - 2);\n    column += 2;\n    updatePosition(str);\n    style = style.slice(i);\n    column += 2;\n\n    return pos({\n      type: TYPE_COMMENT,\n      comment: str\n    });\n  }\n\n  /**\n   * Parse declaration.\n   *\n   * @return {Object}\n   * @throws {Error}\n   */\n  function declaration() {\n    var pos = position();\n\n    // prop\n    var prop = match(PROPERTY_REGEX);\n    if (!prop) return;\n    comment();\n\n    // :\n    if (!match(COLON_REGEX)) return error(\"property missing ':'\");\n\n    // val\n    var val = match(VALUE_REGEX);\n\n    var ret = pos({\n      type: TYPE_DECLARATION,\n      property: trim(prop[0].replace(COMMENT_REGEX, EMPTY_STRING)),\n      value: val\n        ? trim(val[0].replace(COMMENT_REGEX, EMPTY_STRING))\n        : EMPTY_STRING\n    });\n\n    // ;\n    match(SEMICOLON_REGEX);\n\n    return ret;\n  }\n\n  /**\n   * Parse declarations.\n   *\n   * @return {Object[]}\n   */\n  function declarations() {\n    var decls = [];\n\n    comments(decls);\n\n    // declarations\n    var decl;\n    while ((decl = declaration())) {\n      if (decl !== false) {\n        decls.push(decl);\n        comments(decls);\n      }\n    }\n\n    return decls;\n  }\n\n  whitespace();\n  return declarations();\n};\n\n/**\n * Trim `str`.\n *\n * @param {String} str\n * @return {String}\n */\nfunction trim(str) {\n  return str ? str.replace(TRIM_REGEX, EMPTY_STRING) : EMPTY_STRING;\n}\n","/**\n * @typedef {import('unist').Point} Point\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Position} Position\n * @typedef {object & {type: string, position?: Position|undefined}} NodeLike\n */\n\n/**\n * Stringify one point, a position (start and end points), or a node’s\n * positional information.\n *\n * @param {Node|NodeLike|Position|Point|null} [value]\n * @returns {string}\n */\nexport function stringifyPosition(value) {\n  // Nothing.\n  if (!value || typeof value !== 'object') {\n    return ''\n  }\n\n  // Node.\n  if ('position' in value || 'type' in value) {\n    return position(value.position)\n  }\n\n  // Position.\n  if ('start' in value || 'end' in value) {\n    return position(value)\n  }\n\n  // Point.\n  if ('line' in value || 'column' in value) {\n    return point(value)\n  }\n\n  // ?\n  return ''\n}\n\n/**\n * @param {Point|undefined} point\n * @returns {string}\n */\nfunction point(point) {\n  return index(point && point.line) + ':' + index(point && point.column)\n}\n\n/**\n * @param {Position|undefined} pos\n * @returns {string}\n */\nfunction position(pos) {\n  return point(pos && pos.start) + '-' + point(pos && pos.end)\n}\n\n/**\n * @param {number|undefined} value\n * @returns {number}\n */\nfunction index(value) {\n  return value && typeof value === 'number' ? value : 1\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Position} Position\n * @typedef {import('unist').Point} Point\n * @typedef {object & {type: string, position?: Position|undefined}} NodeLike\n */\n\nimport {stringifyPosition} from 'unist-util-stringify-position'\n\nexport class VFileMessage extends Error {\n  /**\n   * Constructor of a message for `reason` at `place` from `origin`.\n   * When an error is passed in as `reason`, copies the `stack`.\n   *\n   * @param {string|Error} reason Reason for message (`string` or `Error`). Uses the stack and message of the error if given.\n   * @param {Node|NodeLike|Position|Point} [place] Place at which the message occurred in a file (`Node`, `Position`, or `Point`, optional).\n   * @param {string} [origin] Place in code the message originates from (`string`, optional).\n   */\n  constructor(reason, place, origin) {\n    /** @type {[string|null, string|null]} */\n    const parts = [null, null]\n    /** @type {Position} */\n    let position = {\n      // @ts-expect-error: we always follows the structure of `position`.\n      start: {line: null, column: null},\n      // @ts-expect-error: \"\n      end: {line: null, column: null}\n    }\n\n    super()\n\n    if (typeof place === 'string') {\n      origin = place\n      place = undefined\n    }\n\n    if (typeof origin === 'string') {\n      const index = origin.indexOf(':')\n\n      if (index === -1) {\n        parts[1] = origin\n      } else {\n        parts[0] = origin.slice(0, index)\n        parts[1] = origin.slice(index + 1)\n      }\n    }\n\n    if (place) {\n      // Node.\n      if ('type' in place || 'position' in place) {\n        if (place.position) {\n          position = place.position\n        }\n      }\n      // Position.\n      else if ('start' in place || 'end' in place) {\n        position = place\n      }\n      // Point.\n      else if ('line' in place || 'column' in place) {\n        position.start = place\n      }\n    }\n\n    // Fields from `Error`\n    this.name = stringifyPosition(place) || '1:1'\n    this.message = typeof reason === 'object' ? reason.message : reason\n    this.stack = typeof reason === 'object' ? reason.stack : ''\n\n    /**\n     * Reason for message.\n     * @type {string}\n     */\n    this.reason = this.message\n    /**\n     * If true, marks associated file as no longer processable.\n     * @type {boolean?}\n     */\n    // eslint-disable-next-line no-unused-expressions\n    this.fatal\n    /**\n     * Starting line of error.\n     * @type {number?}\n     */\n    this.line = position.start.line\n    /**\n     * Starting column of error.\n     * @type {number?}\n     */\n    this.column = position.start.column\n    /**\n     * Namespace of warning.\n     * @type {string?}\n     */\n    this.source = parts[0]\n    /**\n     * Category of message.\n     * @type {string?}\n     */\n    this.ruleId = parts[1]\n    /**\n     * Full range information, when available.\n     * Has start and end properties, both set to an object with line and column, set to number?.\n     * @type {Position?}\n     */\n    this.position = position\n\n    // The following fields are “well known”.\n    // Not standard.\n    // Feel free to add other non-standard fields to your messages.\n\n    /* eslint-disable no-unused-expressions */\n    /**\n     * You can use this to specify the source value that’s being reported, which\n     * is deemed incorrect.\n     * @type {string?}\n     */\n    this.actual\n    /**\n     * You can use this to suggest values that should be used instead of\n     * `actual`, one or more values that are deemed as acceptable.\n     * @type {Array<string>?}\n     */\n    this.expected\n    /**\n     * You may add a file property with a path of a file (used throughout the VFile ecosystem).\n     * @type {string?}\n     */\n    this.file\n    /**\n     * You may add a url property with a link to documentation for the message.\n     * @type {string?}\n     */\n    this.url\n    /**\n     * You may add a note property with a long form description of the message (supported by vfile-reporter).\n     * @type {string?}\n     */\n    this.note\n    /* eslint-enable no-unused-expressions */\n  }\n}\n\nVFileMessage.prototype.file = ''\nVFileMessage.prototype.name = ''\nVFileMessage.prototype.reason = ''\nVFileMessage.prototype.message = ''\nVFileMessage.prototype.stack = ''\nVFileMessage.prototype.fatal = null\nVFileMessage.prototype.column = null\nVFileMessage.prototype.line = null\nVFileMessage.prototype.source = null\nVFileMessage.prototype.ruleId = null\nVFileMessage.prototype.position = null\n","// A derivative work based on:\n// <https://github.com/browserify/path-browserify>.\n// Which is licensed:\n//\n// MIT License\n//\n// Copyright (c) 2013 James Halliday\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy of\n// this software and associated documentation files (the \"Software\"), to deal in\n// the Software without restriction, including without limitation the rights to\n// use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n// the Software, and to permit persons to whom the Software is furnished to do so,\n// subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\n// FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\n// COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\n// IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n// CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n// A derivative work based on:\n//\n// Parts of that are extracted from Node’s internal `path` module:\n// <https://github.com/nodejs/node/blob/master/lib/path.js>.\n// Which is licensed:\n//\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nexport const path = {basename, dirname, extname, join, sep: '/'}\n\n/* eslint-disable max-depth, complexity */\n\n/**\n * @param {string} path\n * @param {string} [ext]\n * @returns {string}\n */\nfunction basename(path, ext) {\n  if (ext !== undefined && typeof ext !== 'string') {\n    throw new TypeError('\"ext\" argument must be a string')\n  }\n\n  assertPath(path)\n  let start = 0\n  let end = -1\n  let index = path.length\n  /** @type {boolean|undefined} */\n  let seenNonSlash\n\n  if (ext === undefined || ext.length === 0 || ext.length > path.length) {\n    while (index--) {\n      if (path.charCodeAt(index) === 47 /* `/` */) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string, stop now.\n        if (seenNonSlash) {\n          start = index + 1\n          break\n        }\n      } else if (end < 0) {\n        // We saw the first non-path separator, mark this as the end of our\n        // path component.\n        seenNonSlash = true\n        end = index + 1\n      }\n    }\n\n    return end < 0 ? '' : path.slice(start, end)\n  }\n\n  if (ext === path) {\n    return ''\n  }\n\n  let firstNonSlashEnd = -1\n  let extIndex = ext.length - 1\n\n  while (index--) {\n    if (path.charCodeAt(index) === 47 /* `/` */) {\n      // If we reached a path separator that was not part of a set of path\n      // separators at the end of the string, stop now.\n      if (seenNonSlash) {\n        start = index + 1\n        break\n      }\n    } else {\n      if (firstNonSlashEnd < 0) {\n        // We saw the first non-path separator, remember this index in case\n        // we need it if the extension ends up not matching.\n        seenNonSlash = true\n        firstNonSlashEnd = index + 1\n      }\n\n      if (extIndex > -1) {\n        // Try to match the explicit extension.\n        if (path.charCodeAt(index) === ext.charCodeAt(extIndex--)) {\n          if (extIndex < 0) {\n            // We matched the extension, so mark this as the end of our path\n            // component\n            end = index\n          }\n        } else {\n          // Extension does not match, so our result is the entire path\n          // component\n          extIndex = -1\n          end = firstNonSlashEnd\n        }\n      }\n    }\n  }\n\n  if (start === end) {\n    end = firstNonSlashEnd\n  } else if (end < 0) {\n    end = path.length\n  }\n\n  return path.slice(start, end)\n}\n\n/**\n * @param {string} path\n * @returns {string}\n */\nfunction dirname(path) {\n  assertPath(path)\n\n  if (path.length === 0) {\n    return '.'\n  }\n\n  let end = -1\n  let index = path.length\n  /** @type {boolean|undefined} */\n  let unmatchedSlash\n\n  // Prefix `--` is important to not run on `0`.\n  while (--index) {\n    if (path.charCodeAt(index) === 47 /* `/` */) {\n      if (unmatchedSlash) {\n        end = index\n        break\n      }\n    } else if (!unmatchedSlash) {\n      // We saw the first non-path separator\n      unmatchedSlash = true\n    }\n  }\n\n  return end < 0\n    ? path.charCodeAt(0) === 47 /* `/` */\n      ? '/'\n      : '.'\n    : end === 1 && path.charCodeAt(0) === 47 /* `/` */\n    ? '//'\n    : path.slice(0, end)\n}\n\n/**\n * @param {string} path\n * @returns {string}\n */\nfunction extname(path) {\n  assertPath(path)\n\n  let index = path.length\n\n  let end = -1\n  let startPart = 0\n  let startDot = -1\n  // Track the state of characters (if any) we see before our first dot and\n  // after any path separator we find.\n  let preDotState = 0\n  /** @type {boolean|undefined} */\n  let unmatchedSlash\n\n  while (index--) {\n    const code = path.charCodeAt(index)\n\n    if (code === 47 /* `/` */) {\n      // If we reached a path separator that was not part of a set of path\n      // separators at the end of the string, stop now.\n      if (unmatchedSlash) {\n        startPart = index + 1\n        break\n      }\n\n      continue\n    }\n\n    if (end < 0) {\n      // We saw the first non-path separator, mark this as the end of our\n      // extension.\n      unmatchedSlash = true\n      end = index + 1\n    }\n\n    if (code === 46 /* `.` */) {\n      // If this is our first dot, mark it as the start of our extension.\n      if (startDot < 0) {\n        startDot = index\n      } else if (preDotState !== 1) {\n        preDotState = 1\n      }\n    } else if (startDot > -1) {\n      // We saw a non-dot and non-path separator before our dot, so we should\n      // have a good chance at having a non-empty extension.\n      preDotState = -1\n    }\n  }\n\n  if (\n    startDot < 0 ||\n    end < 0 ||\n    // We saw a non-dot character immediately before the dot.\n    preDotState === 0 ||\n    // The (right-most) trimmed path component is exactly `..`.\n    (preDotState === 1 && startDot === end - 1 && startDot === startPart + 1)\n  ) {\n    return ''\n  }\n\n  return path.slice(startDot, end)\n}\n\n/**\n * @param {Array<string>} segments\n * @returns {string}\n */\nfunction join(...segments) {\n  let index = -1\n  /** @type {string|undefined} */\n  let joined\n\n  while (++index < segments.length) {\n    assertPath(segments[index])\n\n    if (segments[index]) {\n      joined =\n        joined === undefined ? segments[index] : joined + '/' + segments[index]\n    }\n  }\n\n  return joined === undefined ? '.' : normalize(joined)\n}\n\n/**\n * Note: `normalize` is not exposed as `path.normalize`, so some code is\n * manually removed from it.\n *\n * @param {string} path\n * @returns {string}\n */\nfunction normalize(path) {\n  assertPath(path)\n\n  const absolute = path.charCodeAt(0) === 47 /* `/` */\n\n  // Normalize the path according to POSIX rules.\n  let value = normalizeString(path, !absolute)\n\n  if (value.length === 0 && !absolute) {\n    value = '.'\n  }\n\n  if (value.length > 0 && path.charCodeAt(path.length - 1) === 47 /* / */) {\n    value += '/'\n  }\n\n  return absolute ? '/' + value : value\n}\n\n/**\n * Resolve `.` and `..` elements in a path with directory names.\n *\n * @param {string} path\n * @param {boolean} allowAboveRoot\n * @returns {string}\n */\nfunction normalizeString(path, allowAboveRoot) {\n  let result = ''\n  let lastSegmentLength = 0\n  let lastSlash = -1\n  let dots = 0\n  let index = -1\n  /** @type {number|undefined} */\n  let code\n  /** @type {number} */\n  let lastSlashIndex\n\n  while (++index <= path.length) {\n    if (index < path.length) {\n      code = path.charCodeAt(index)\n    } else if (code === 47 /* `/` */) {\n      break\n    } else {\n      code = 47 /* `/` */\n    }\n\n    if (code === 47 /* `/` */) {\n      if (lastSlash === index - 1 || dots === 1) {\n        // Empty.\n      } else if (lastSlash !== index - 1 && dots === 2) {\n        if (\n          result.length < 2 ||\n          lastSegmentLength !== 2 ||\n          result.charCodeAt(result.length - 1) !== 46 /* `.` */ ||\n          result.charCodeAt(result.length - 2) !== 46 /* `.` */\n        ) {\n          if (result.length > 2) {\n            lastSlashIndex = result.lastIndexOf('/')\n\n            if (lastSlashIndex !== result.length - 1) {\n              if (lastSlashIndex < 0) {\n                result = ''\n                lastSegmentLength = 0\n              } else {\n                result = result.slice(0, lastSlashIndex)\n                lastSegmentLength = result.length - 1 - result.lastIndexOf('/')\n              }\n\n              lastSlash = index\n              dots = 0\n              continue\n            }\n          } else if (result.length > 0) {\n            result = ''\n            lastSegmentLength = 0\n            lastSlash = index\n            dots = 0\n            continue\n          }\n        }\n\n        if (allowAboveRoot) {\n          result = result.length > 0 ? result + '/..' : '..'\n          lastSegmentLength = 2\n        }\n      } else {\n        if (result.length > 0) {\n          result += '/' + path.slice(lastSlash + 1, index)\n        } else {\n          result = path.slice(lastSlash + 1, index)\n        }\n\n        lastSegmentLength = index - lastSlash - 1\n      }\n\n      lastSlash = index\n      dots = 0\n    } else if (code === 46 /* `.` */ && dots > -1) {\n      dots++\n    } else {\n      dots = -1\n    }\n  }\n\n  return result\n}\n\n/**\n * @param {string} path\n */\nfunction assertPath(path) {\n  if (typeof path !== 'string') {\n    throw new TypeError(\n      'Path must be a string. Received ' + JSON.stringify(path)\n    )\n  }\n}\n\n/* eslint-enable max-depth, complexity */\n","// Somewhat based on:\n// <https://github.com/defunctzombie/node-process/blob/master/browser.js>.\n// But I don’t think one tiny line of code can be copyrighted. 😅\nexport const proc = {cwd}\n\nfunction cwd() {\n  return '/'\n}\n","/**\n * @typedef URL\n * @property {string} hash\n * @property {string} host\n * @property {string} hostname\n * @property {string} href\n * @property {string} origin\n * @property {string} password\n * @property {string} pathname\n * @property {string} port\n * @property {string} protocol\n * @property {string} search\n * @property {any} searchParams\n * @property {string} username\n * @property {() => string} toString\n * @property {() => string} toJSON\n */\n\n/**\n * @param {unknown} fileURLOrPath\n * @returns {fileURLOrPath is URL}\n */\n// From: <https://github.com/nodejs/node/blob/fcf8ba4/lib/internal/url.js#L1501>\nexport function isUrl(fileURLOrPath) {\n  return (\n    fileURLOrPath !== null &&\n    typeof fileURLOrPath === 'object' &&\n    // @ts-expect-error: indexable.\n    fileURLOrPath.href &&\n    // @ts-expect-error: indexable.\n    fileURLOrPath.origin\n  )\n}\n","/// <reference lib=\"dom\" />\n\nimport {isUrl} from './minurl.shared.js'\n\n// See: <https://github.com/nodejs/node/blob/fcf8ba4/lib/internal/url.js>\n\n/**\n * @param {string|URL} path\n */\nexport function urlToPath(path) {\n  if (typeof path === 'string') {\n    path = new URL(path)\n  } else if (!isUrl(path)) {\n    /** @type {NodeJS.ErrnoException} */\n    const error = new TypeError(\n      'The \"path\" argument must be of type string or an instance of URL. Received `' +\n        path +\n        '`'\n    )\n    error.code = 'ERR_INVALID_ARG_TYPE'\n    throw error\n  }\n\n  if (path.protocol !== 'file:') {\n    /** @type {NodeJS.ErrnoException} */\n    const error = new TypeError('The URL must be of scheme file')\n    error.code = 'ERR_INVALID_URL_SCHEME'\n    throw error\n  }\n\n  return getPathFromURLPosix(path)\n}\n\n/**\n * @param {URL} url\n */\nfunction getPathFromURLPosix(url) {\n  if (url.hostname !== '') {\n    /** @type {NodeJS.ErrnoException} */\n    const error = new TypeError(\n      'File URL host must be \"localhost\" or empty on darwin'\n    )\n    error.code = 'ERR_INVALID_FILE_URL_HOST'\n    throw error\n  }\n\n  const pathname = url.pathname\n  let index = -1\n\n  while (++index < pathname.length) {\n    if (\n      pathname.charCodeAt(index) === 37 /* `%` */ &&\n      pathname.charCodeAt(index + 1) === 50 /* `2` */\n    ) {\n      const third = pathname.charCodeAt(index + 2)\n      if (third === 70 /* `F` */ || third === 102 /* `f` */) {\n        /** @type {NodeJS.ErrnoException} */\n        const error = new TypeError(\n          'File URL path must not include encoded / characters'\n        )\n        error.code = 'ERR_INVALID_FILE_URL_PATH'\n        throw error\n      }\n    }\n  }\n\n  return decodeURIComponent(pathname)\n}\n\nexport {isUrl} from './minurl.shared.js'\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Position} Position\n * @typedef {import('unist').Point} Point\n * @typedef {Record<string, unknown> & {type: string, position?: Position|undefined}} NodeLike\n * @typedef {import('./minurl.shared.js').URL} URL\n * @typedef {import('../index.js').Data} Data\n * @typedef {import('../index.js').Value} Value\n *\n * @typedef {'ascii'|'utf8'|'utf-8'|'utf16le'|'ucs2'|'ucs-2'|'base64'|'base64url'|'latin1'|'binary'|'hex'} BufferEncoding\n *   Encodings supported by the buffer class.\n *   This is a copy of the typing from Node, copied to prevent Node globals from\n *   being needed.\n *   Copied from: <https://github.com/DefinitelyTyped/DefinitelyTyped/blob/90a4ec8/types/node/buffer.d.ts#L170>\n *\n * @typedef {Value|Options|VFile|URL} Compatible\n *   Things that can be passed to the constructor.\n *\n * @typedef VFileCoreOptions\n * @property {Value} [value]\n * @property {string} [cwd]\n * @property {Array<string>} [history]\n * @property {string|URL} [path]\n * @property {string} [basename]\n * @property {string} [stem]\n * @property {string} [extname]\n * @property {string} [dirname]\n * @property {Data} [data]\n *\n * @typedef Map\n *   Raw source map, see:\n *   <https://github.com/mozilla/source-map/blob/58819f0/source-map.d.ts#L15-L23>.\n * @property {number} version\n * @property {Array<string>} sources\n * @property {Array<string>} names\n * @property {string|undefined} [sourceRoot]\n * @property {Array<string>|undefined} [sourcesContent]\n * @property {string} mappings\n * @property {string} file\n *\n * @typedef {{[key: string]: unknown} & VFileCoreOptions} Options\n *   Configuration: a bunch of keys that will be shallow copied over to the new\n *   file.\n *\n * @typedef {Record<string, unknown>} ReporterSettings\n * @typedef {<T = ReporterSettings>(files: Array<VFile>, options: T) => string} Reporter\n */\n\nimport buffer from 'is-buffer'\nimport {VFileMessage} from 'vfile-message'\nimport {path} from './minpath.js'\nimport {proc} from './minproc.js'\nimport {urlToPath, isUrl} from './minurl.js'\n\n// Order of setting (least specific to most), we need this because otherwise\n// `{stem: 'a', path: '~/b.js'}` would throw, as a path is needed before a\n// stem can be set.\nconst order = ['history', 'path', 'basename', 'stem', 'extname', 'dirname']\n\nexport class VFile {\n  /**\n   * Create a new virtual file.\n   *\n   * If `options` is `string` or `Buffer`, it’s treated as `{value: options}`.\n   * If `options` is a `URL`, it’s treated as `{path: options}`.\n   * If `options` is a `VFile`, shallow copies its data over to the new file.\n   * All fields in `options` are set on the newly created `VFile`.\n   *\n   * Path related fields are set in the following order (least specific to\n   * most specific): `history`, `path`, `basename`, `stem`, `extname`,\n   * `dirname`.\n   *\n   * It’s not possible to set either `dirname` or `extname` without setting\n   * either `history`, `path`, `basename`, or `stem` as well.\n   *\n   * @param {Compatible} [value]\n   */\n  constructor(value) {\n    /** @type {Options} */\n    let options\n\n    if (!value) {\n      options = {}\n    } else if (typeof value === 'string' || buffer(value)) {\n      // @ts-expect-error Looks like a buffer.\n      options = {value}\n    } else if (isUrl(value)) {\n      options = {path: value}\n    } else {\n      // @ts-expect-error Looks like file or options.\n      options = value\n    }\n\n    /**\n     * Place to store custom information (default: `{}`).\n     * It’s OK to store custom data directly on the file but moving it to\n     * `data` is recommended.\n     * @type {Data}\n     */\n    this.data = {}\n\n    /**\n     * List of messages associated with the file.\n     * @type {Array<VFileMessage>}\n     */\n    this.messages = []\n\n    /**\n     * List of filepaths the file moved between.\n     * The first is the original path and the last is the current path.\n     * @type {Array<string>}\n     */\n    this.history = []\n\n    /**\n     * Base of `path` (default: `process.cwd()` or `'/'` in browsers).\n     * @type {string}\n     */\n    this.cwd = proc.cwd()\n\n    /* eslint-disable no-unused-expressions */\n    /**\n     * Raw value.\n     * @type {Value}\n     */\n    this.value\n\n    // The below are non-standard, they are “well-known”.\n    // As in, used in several tools.\n\n    /**\n     * Whether a file was saved to disk.\n     * This is used by vfile reporters.\n     * @type {boolean}\n     */\n    this.stored\n\n    /**\n     * Sometimes files have a non-string, compiled, representation.\n     * This can be stored in the `result` field.\n     * One example is when turning markdown into React nodes.\n     * This is used by unified to store non-string results.\n     * @type {unknown}\n     */\n    this.result\n\n    /**\n     * Sometimes files have a source map associated with them.\n     * This can be stored in the `map` field.\n     * This should be a `Map` type, which is equivalent to the `RawSourceMap`\n     * type from the `source-map` module.\n     * @type {Map|undefined}\n     */\n    this.map\n    /* eslint-enable no-unused-expressions */\n\n    // Set path related properties in the correct order.\n    let index = -1\n\n    while (++index < order.length) {\n      const prop = order[index]\n\n      // Note: we specifically use `in` instead of `hasOwnProperty` to accept\n      // `vfile`s too.\n      if (prop in options && options[prop] !== undefined) {\n        // @ts-expect-error: TS is confused by the different types for `history`.\n        this[prop] = prop === 'history' ? [...options[prop]] : options[prop]\n      }\n    }\n\n    /** @type {string} */\n    let prop\n\n    // Set non-path related properties.\n    for (prop in options) {\n      // @ts-expect-error: fine to set other things.\n      if (!order.includes(prop)) this[prop] = options[prop]\n    }\n  }\n\n  /**\n   * Get the full path (example: `'~/index.min.js'`).\n   * @returns {string}\n   */\n  get path() {\n    return this.history[this.history.length - 1]\n  }\n\n  /**\n   * Set the full path (example: `'~/index.min.js'`).\n   * Cannot be nullified.\n   * You can set a file URL (a `URL` object with a `file:` protocol) which will\n   * be turned into a path with `url.fileURLToPath`.\n   * @param {string|URL} path\n   */\n  set path(path) {\n    if (isUrl(path)) {\n      path = urlToPath(path)\n    }\n\n    assertNonEmpty(path, 'path')\n\n    if (this.path !== path) {\n      this.history.push(path)\n    }\n  }\n\n  /**\n   * Get the parent path (example: `'~'`).\n   */\n  get dirname() {\n    return typeof this.path === 'string' ? path.dirname(this.path) : undefined\n  }\n\n  /**\n   * Set the parent path (example: `'~'`).\n   * Cannot be set if there’s no `path` yet.\n   */\n  set dirname(dirname) {\n    assertPath(this.basename, 'dirname')\n    this.path = path.join(dirname || '', this.basename)\n  }\n\n  /**\n   * Get the basename (including extname) (example: `'index.min.js'`).\n   */\n  get basename() {\n    return typeof this.path === 'string' ? path.basename(this.path) : undefined\n  }\n\n  /**\n   * Set basename (including extname) (`'index.min.js'`).\n   * Cannot contain path separators (`'/'` on unix, macOS, and browsers, `'\\'`\n   * on windows).\n   * Cannot be nullified (use `file.path = file.dirname` instead).\n   */\n  set basename(basename) {\n    assertNonEmpty(basename, 'basename')\n    assertPart(basename, 'basename')\n    this.path = path.join(this.dirname || '', basename)\n  }\n\n  /**\n   * Get the extname (including dot) (example: `'.js'`).\n   */\n  get extname() {\n    return typeof this.path === 'string' ? path.extname(this.path) : undefined\n  }\n\n  /**\n   * Set the extname (including dot) (example: `'.js'`).\n   * Cannot contain path separators (`'/'` on unix, macOS, and browsers, `'\\'`\n   * on windows).\n   * Cannot be set if there’s no `path` yet.\n   */\n  set extname(extname) {\n    assertPart(extname, 'extname')\n    assertPath(this.dirname, 'extname')\n\n    if (extname) {\n      if (extname.charCodeAt(0) !== 46 /* `.` */) {\n        throw new Error('`extname` must start with `.`')\n      }\n\n      if (extname.includes('.', 1)) {\n        throw new Error('`extname` cannot contain multiple dots')\n      }\n    }\n\n    this.path = path.join(this.dirname, this.stem + (extname || ''))\n  }\n\n  /**\n   * Get the stem (basename w/o extname) (example: `'index.min'`).\n   */\n  get stem() {\n    return typeof this.path === 'string'\n      ? path.basename(this.path, this.extname)\n      : undefined\n  }\n\n  /**\n   * Set the stem (basename w/o extname) (example: `'index.min'`).\n   * Cannot contain path separators (`'/'` on unix, macOS, and browsers, `'\\'`\n   * on windows).\n   * Cannot be nullified (use `file.path = file.dirname` instead).\n   */\n  set stem(stem) {\n    assertNonEmpty(stem, 'stem')\n    assertPart(stem, 'stem')\n    this.path = path.join(this.dirname || '', stem + (this.extname || ''))\n  }\n\n  /**\n   * Serialize the file.\n   *\n   * @param {BufferEncoding} [encoding='utf8']\n   *   When `value` is a `Buffer`, `encoding` is a character encoding to\n   *   understand it as (default: `'utf8'`).\n   * @returns {string}\n   *   Serialized file.\n   */\n  toString(encoding) {\n    return (this.value || '').toString(encoding)\n  }\n\n  /**\n   * Constructs a new `VFileMessage`, where `fatal` is set to `false`, and\n   * associates it with the file by adding it to `vfile.messages` and setting\n   * `message.file` to the current filepath.\n   *\n   * @param {string|Error} reason\n   *   Human readable reason for the message, uses the stack and message of the error if given.\n   * @param {Node|NodeLike|Position|Point} [place]\n   *   Place where the message occurred in the file.\n   * @param {string} [origin]\n   *   Computer readable reason for the message\n   * @returns {VFileMessage}\n   *   Message.\n   */\n  message(reason, place, origin) {\n    const message = new VFileMessage(reason, place, origin)\n\n    if (this.path) {\n      message.name = this.path + ':' + message.name\n      message.file = this.path\n    }\n\n    message.fatal = false\n\n    this.messages.push(message)\n\n    return message\n  }\n\n  /**\n   * Like `VFile#message()`, but associates an informational message where\n   * `fatal` is set to `null`.\n   *\n   * @param {string|Error} reason\n   *   Human readable reason for the message, uses the stack and message of the error if given.\n   * @param {Node|NodeLike|Position|Point} [place]\n   *   Place where the message occurred in the file.\n   * @param {string} [origin]\n   *   Computer readable reason for the message\n   * @returns {VFileMessage}\n   *   Message.\n   */\n  info(reason, place, origin) {\n    const message = this.message(reason, place, origin)\n\n    message.fatal = null\n\n    return message\n  }\n\n  /**\n   * Like `VFile#message()`, but associates a fatal message where `fatal` is\n   * set to `true`, and then immediately throws it.\n   *\n   * > 👉 **Note**: a fatal error means that a file is no longer processable.\n   *\n   * @param {string|Error} reason\n   *   Human readable reason for the message, uses the stack and message of the error if given.\n   * @param {Node|NodeLike|Position|Point} [place]\n   *   Place where the message occurred in the file.\n   * @param {string} [origin]\n   *   Computer readable reason for the message\n   * @returns {never}\n   *   Message.\n   */\n  fail(reason, place, origin) {\n    const message = this.message(reason, place, origin)\n\n    message.fatal = true\n\n    throw message\n  }\n}\n\n/**\n * Assert that `part` is not a path (as in, does not contain `path.sep`).\n *\n * @param {string|undefined} part\n * @param {string} name\n * @returns {void}\n */\nfunction assertPart(part, name) {\n  if (part && part.includes(path.sep)) {\n    throw new Error(\n      '`' + name + '` cannot be a path: did not expect `' + path.sep + '`'\n    )\n  }\n}\n\n/**\n * Assert that `part` is not empty.\n *\n * @param {string|undefined} part\n * @param {string} name\n * @returns {asserts part is string}\n */\nfunction assertNonEmpty(part, name) {\n  if (!part) {\n    throw new Error('`' + name + '` cannot be empty')\n  }\n}\n\n/**\n * Assert `path` exists.\n *\n * @param {string|undefined} path\n * @param {string} name\n * @returns {asserts path is string}\n */\nfunction assertPath(path, name) {\n  if (!path) {\n    throw new Error('Setting `' + name + '` requires `path` to be set too')\n  }\n}\n","import arrayWithHoles from \"./arrayWithHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableRest from \"./nonIterableRest.js\";\nexport default function _toArray(arr) {\n  return arrayWithHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableRest();\n}","/**\n * Throw a given error.\n *\n * @param {Error|null|undefined} [error]\n *   Maybe error.\n * @returns {asserts error is null|undefined}\n */\nexport function bail(error) {\n  if (error) {\n    throw error\n  }\n}\n","export default function isPlainObject(value) {\n\tif (typeof value !== 'object' || value === null) {\n\t\treturn false;\n\t}\n\n\tconst prototype = Object.getPrototypeOf(value);\n\treturn (prototype === null || prototype === Object.prototype || Object.getPrototypeOf(prototype) === null) && !(Symbol.toStringTag in value) && !(Symbol.iterator in value);\n}\n","/**\n * @typedef {(error?: Error|null|undefined, ...output: Array<any>) => void} Callback\n * @typedef {(...input: Array<any>) => any} Middleware\n *\n * @typedef {(...input: Array<any>) => void} Run\n *   Call all middleware.\n * @typedef {(fn: Middleware) => Pipeline} Use\n *   Add `fn` (middleware) to the list.\n * @typedef {{run: Run, use: Use}} Pipeline\n *   Middleware.\n */\n\n/**\n * Create new middleware.\n *\n * @returns {Pipeline}\n */\nexport function trough() {\n  /** @type {Array<Middleware>} */\n  const fns = []\n  /** @type {Pipeline} */\n  const pipeline = {run, use}\n\n  return pipeline\n\n  /** @type {Run} */\n  function run(...values) {\n    let middlewareIndex = -1\n    /** @type {Callback} */\n    const callback = values.pop()\n\n    if (typeof callback !== 'function') {\n      throw new TypeError('Expected function as last argument, not ' + callback)\n    }\n\n    next(null, ...values)\n\n    /**\n     * Run the next `fn`, or we’re done.\n     *\n     * @param {Error|null|undefined} error\n     * @param {Array<any>} output\n     */\n    function next(error, ...output) {\n      const fn = fns[++middlewareIndex]\n      let index = -1\n\n      if (error) {\n        callback(error)\n        return\n      }\n\n      // Copy non-nullish input into values.\n      while (++index < values.length) {\n        if (output[index] === null || output[index] === undefined) {\n          output[index] = values[index]\n        }\n      }\n\n      // Save the newly created `output` for the next call.\n      values = output\n\n      // Next or done.\n      if (fn) {\n        wrap(fn, next)(...output)\n      } else {\n        callback(null, ...output)\n      }\n    }\n  }\n\n  /** @type {Use} */\n  function use(middelware) {\n    if (typeof middelware !== 'function') {\n      throw new TypeError(\n        'Expected `middelware` to be a function, not ' + middelware\n      )\n    }\n\n    fns.push(middelware)\n    return pipeline\n  }\n}\n\n/**\n * Wrap `middleware`.\n * Can be sync or async; return a promise, receive a callback, or return new\n * values and errors.\n *\n * @param {Middleware} middleware\n * @param {Callback} callback\n */\nexport function wrap(middleware, callback) {\n  /** @type {boolean} */\n  let called\n\n  return wrapped\n\n  /**\n   * Call `middleware`.\n   * @this {any}\n   * @param {Array<any>} parameters\n   * @returns {void}\n   */\n  function wrapped(...parameters) {\n    const fnExpectsCallback = middleware.length > parameters.length\n    /** @type {any} */\n    let result\n\n    if (fnExpectsCallback) {\n      parameters.push(done)\n    }\n\n    try {\n      result = middleware.apply(this, parameters)\n    } catch (error) {\n      const exception = /** @type {Error} */ (error)\n\n      // Well, this is quite the pickle.\n      // `middleware` received a callback and called it synchronously, but that\n      // threw an error.\n      // The only thing left to do is to throw the thing instead.\n      if (fnExpectsCallback && called) {\n        throw exception\n      }\n\n      return done(exception)\n    }\n\n    if (!fnExpectsCallback) {\n      if (result instanceof Promise) {\n        result.then(then, done)\n      } else if (result instanceof Error) {\n        done(result)\n      } else {\n        then(result)\n      }\n    }\n  }\n\n  /**\n   * Call `callback`, only once.\n   * @type {Callback}\n   */\n  function done(error, ...output) {\n    if (!called) {\n      called = true\n      callback(error, ...output)\n    }\n  }\n\n  /**\n   * Call `done` with one value.\n   *\n   * @param {any} [value]\n   */\n  function then(value) {\n    done(null, value)\n  }\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('vfile').VFileCompatible} VFileCompatible\n * @typedef {import('vfile').VFileValue} VFileValue\n * @typedef {import('..').Processor} Processor\n * @typedef {import('..').Plugin} Plugin\n * @typedef {import('..').Preset} Preset\n * @typedef {import('..').Pluggable} Pluggable\n * @typedef {import('..').PluggableList} PluggableList\n * @typedef {import('..').Transformer} Transformer\n * @typedef {import('..').Parser} Parser\n * @typedef {import('..').Compiler} Compiler\n * @typedef {import('..').RunCallback} RunCallback\n * @typedef {import('..').ProcessCallback} ProcessCallback\n *\n * @typedef Context\n * @property {Node} tree\n * @property {VFile} file\n */\n\nimport {bail} from 'bail'\nimport isBuffer from 'is-buffer'\nimport extend from 'extend'\nimport isPlainObj from 'is-plain-obj'\nimport {trough} from 'trough'\nimport {VFile} from 'vfile'\n\n// Expose a frozen processor.\nexport const unified = base().freeze()\n\nconst own = {}.hasOwnProperty\n\n// Function to create the first processor.\n/**\n * @returns {Processor}\n */\nfunction base() {\n  const transformers = trough()\n  /** @type {Processor['attachers']} */\n  const attachers = []\n  /** @type {Record<string, unknown>} */\n  let namespace = {}\n  /** @type {boolean|undefined} */\n  let frozen\n  let freezeIndex = -1\n\n  // Data management.\n  // @ts-expect-error: overloads are handled.\n  processor.data = data\n  processor.Parser = undefined\n  processor.Compiler = undefined\n\n  // Lock.\n  processor.freeze = freeze\n\n  // Plugins.\n  processor.attachers = attachers\n  // @ts-expect-error: overloads are handled.\n  processor.use = use\n\n  // API.\n  processor.parse = parse\n  processor.stringify = stringify\n  // @ts-expect-error: overloads are handled.\n  processor.run = run\n  processor.runSync = runSync\n  // @ts-expect-error: overloads are handled.\n  processor.process = process\n  processor.processSync = processSync\n\n  // Expose.\n  return processor\n\n  // Create a new processor based on the processor in the current scope.\n  /** @type {Processor} */\n  function processor() {\n    const destination = base()\n    let index = -1\n\n    while (++index < attachers.length) {\n      destination.use(...attachers[index])\n    }\n\n    destination.data(extend(true, {}, namespace))\n\n    return destination\n  }\n\n  /**\n   * @param {string|Record<string, unknown>} [key]\n   * @param {unknown} [value]\n   * @returns {unknown}\n   */\n  function data(key, value) {\n    if (typeof key === 'string') {\n      // Set `key`.\n      if (arguments.length === 2) {\n        assertUnfrozen('data', frozen)\n        namespace[key] = value\n        return processor\n      }\n\n      // Get `key`.\n      return (own.call(namespace, key) && namespace[key]) || null\n    }\n\n    // Set space.\n    if (key) {\n      assertUnfrozen('data', frozen)\n      namespace = key\n      return processor\n    }\n\n    // Get space.\n    return namespace\n  }\n\n  /** @type {Processor['freeze']} */\n  function freeze() {\n    if (frozen) {\n      return processor\n    }\n\n    while (++freezeIndex < attachers.length) {\n      const [attacher, ...options] = attachers[freezeIndex]\n\n      if (options[0] === false) {\n        continue\n      }\n\n      if (options[0] === true) {\n        options[0] = undefined\n      }\n\n      /** @type {Transformer|void} */\n      const transformer = attacher.call(processor, ...options)\n\n      if (typeof transformer === 'function') {\n        transformers.use(transformer)\n      }\n    }\n\n    frozen = true\n    freezeIndex = Number.POSITIVE_INFINITY\n\n    return processor\n  }\n\n  /**\n   * @param {Pluggable|null|undefined} [value]\n   * @param {...unknown} options\n   * @returns {Processor}\n   */\n  function use(value, ...options) {\n    /** @type {Record<string, unknown>|undefined} */\n    let settings\n\n    assertUnfrozen('use', frozen)\n\n    if (value === null || value === undefined) {\n      // Empty.\n    } else if (typeof value === 'function') {\n      addPlugin(value, ...options)\n    } else if (typeof value === 'object') {\n      if (Array.isArray(value)) {\n        addList(value)\n      } else {\n        addPreset(value)\n      }\n    } else {\n      throw new TypeError('Expected usable value, not `' + value + '`')\n    }\n\n    if (settings) {\n      namespace.settings = Object.assign(namespace.settings || {}, settings)\n    }\n\n    return processor\n\n    /**\n     * @param {import('..').Pluggable<unknown[]>} value\n     * @returns {void}\n     */\n    function add(value) {\n      if (typeof value === 'function') {\n        addPlugin(value)\n      } else if (typeof value === 'object') {\n        if (Array.isArray(value)) {\n          const [plugin, ...options] = value\n          addPlugin(plugin, ...options)\n        } else {\n          addPreset(value)\n        }\n      } else {\n        throw new TypeError('Expected usable value, not `' + value + '`')\n      }\n    }\n\n    /**\n     * @param {Preset} result\n     * @returns {void}\n     */\n    function addPreset(result) {\n      addList(result.plugins)\n\n      if (result.settings) {\n        settings = Object.assign(settings || {}, result.settings)\n      }\n    }\n\n    /**\n     * @param {PluggableList|null|undefined} [plugins]\n     * @returns {void}\n     */\n    function addList(plugins) {\n      let index = -1\n\n      if (plugins === null || plugins === undefined) {\n        // Empty.\n      } else if (Array.isArray(plugins)) {\n        while (++index < plugins.length) {\n          const thing = plugins[index]\n          add(thing)\n        }\n      } else {\n        throw new TypeError('Expected a list of plugins, not `' + plugins + '`')\n      }\n    }\n\n    /**\n     * @param {Plugin} plugin\n     * @param {...unknown} [value]\n     * @returns {void}\n     */\n    function addPlugin(plugin, value) {\n      let index = -1\n      /** @type {Processor['attachers'][number]|undefined} */\n      let entry\n\n      while (++index < attachers.length) {\n        if (attachers[index][0] === plugin) {\n          entry = attachers[index]\n          break\n        }\n      }\n\n      if (entry) {\n        if (isPlainObj(entry[1]) && isPlainObj(value)) {\n          value = extend(true, entry[1], value)\n        }\n\n        entry[1] = value\n      } else {\n        // @ts-expect-error: fine.\n        attachers.push([...arguments])\n      }\n    }\n  }\n\n  /** @type {Processor['parse']} */\n  function parse(doc) {\n    processor.freeze()\n    const file = vfile(doc)\n    const Parser = processor.Parser\n    assertParser('parse', Parser)\n\n    if (newable(Parser, 'parse')) {\n      // @ts-expect-error: `newable` checks this.\n      return new Parser(String(file), file).parse()\n    }\n\n    // @ts-expect-error: `newable` checks this.\n    return Parser(String(file), file) // eslint-disable-line new-cap\n  }\n\n  /** @type {Processor['stringify']} */\n  function stringify(node, doc) {\n    processor.freeze()\n    const file = vfile(doc)\n    const Compiler = processor.Compiler\n    assertCompiler('stringify', Compiler)\n    assertNode(node)\n\n    if (newable(Compiler, 'compile')) {\n      // @ts-expect-error: `newable` checks this.\n      return new Compiler(node, file).compile()\n    }\n\n    // @ts-expect-error: `newable` checks this.\n    return Compiler(node, file) // eslint-disable-line new-cap\n  }\n\n  /**\n   * @param {Node} node\n   * @param {VFileCompatible|RunCallback} [doc]\n   * @param {RunCallback} [callback]\n   * @returns {Promise<Node>|void}\n   */\n  function run(node, doc, callback) {\n    assertNode(node)\n    processor.freeze()\n\n    if (!callback && typeof doc === 'function') {\n      callback = doc\n      doc = undefined\n    }\n\n    if (!callback) {\n      return new Promise(executor)\n    }\n\n    executor(null, callback)\n\n    /**\n     * @param {null|((node: Node) => void)} resolve\n     * @param {(error: Error) => void} reject\n     * @returns {void}\n     */\n    function executor(resolve, reject) {\n      // @ts-expect-error: `doc` can’t be a callback anymore, we checked.\n      transformers.run(node, vfile(doc), done)\n\n      /**\n       * @param {Error|null} error\n       * @param {Node} tree\n       * @param {VFile} file\n       * @returns {void}\n       */\n      function done(error, tree, file) {\n        tree = tree || node\n        if (error) {\n          reject(error)\n        } else if (resolve) {\n          resolve(tree)\n        } else {\n          // @ts-expect-error: `callback` is defined if `resolve` is not.\n          callback(null, tree, file)\n        }\n      }\n    }\n  }\n\n  /** @type {Processor['runSync']} */\n  function runSync(node, file) {\n    /** @type {Node|undefined} */\n    let result\n    /** @type {boolean|undefined} */\n    let complete\n\n    processor.run(node, file, done)\n\n    assertDone('runSync', 'run', complete)\n\n    // @ts-expect-error: we either bailed on an error or have a tree.\n    return result\n\n    /**\n     * @param {Error|null} [error]\n     * @param {Node} [tree]\n     * @returns {void}\n     */\n    function done(error, tree) {\n      bail(error)\n      result = tree\n      complete = true\n    }\n  }\n\n  /**\n   * @param {VFileCompatible} doc\n   * @param {ProcessCallback} [callback]\n   * @returns {Promise<VFile>|undefined}\n   */\n  function process(doc, callback) {\n    processor.freeze()\n    assertParser('process', processor.Parser)\n    assertCompiler('process', processor.Compiler)\n\n    if (!callback) {\n      return new Promise(executor)\n    }\n\n    executor(null, callback)\n\n    /**\n     * @param {null|((file: VFile) => void)} resolve\n     * @param {(error?: Error|null|undefined) => void} reject\n     * @returns {void}\n     */\n    function executor(resolve, reject) {\n      const file = vfile(doc)\n\n      processor.run(processor.parse(file), file, (error, tree, file) => {\n        if (error || !tree || !file) {\n          done(error)\n        } else {\n          /** @type {unknown} */\n          const result = processor.stringify(tree, file)\n\n          if (result === undefined || result === null) {\n            // Empty.\n          } else if (looksLikeAVFileValue(result)) {\n            file.value = result\n          } else {\n            file.result = result\n          }\n\n          done(error, file)\n        }\n      })\n\n      /**\n       * @param {Error|null|undefined} [error]\n       * @param {VFile|undefined} [file]\n       * @returns {void}\n       */\n      function done(error, file) {\n        if (error || !file) {\n          reject(error)\n        } else if (resolve) {\n          resolve(file)\n        } else {\n          // @ts-expect-error: `callback` is defined if `resolve` is not.\n          callback(null, file)\n        }\n      }\n    }\n  }\n\n  /** @type {Processor['processSync']} */\n  function processSync(doc) {\n    /** @type {boolean|undefined} */\n    let complete\n\n    processor.freeze()\n    assertParser('processSync', processor.Parser)\n    assertCompiler('processSync', processor.Compiler)\n\n    const file = vfile(doc)\n\n    processor.process(file, done)\n\n    assertDone('processSync', 'process', complete)\n\n    return file\n\n    /**\n     * @param {Error|null|undefined} [error]\n     * @returns {void}\n     */\n    function done(error) {\n      complete = true\n      bail(error)\n    }\n  }\n}\n\n/**\n * Check if `value` is a constructor.\n *\n * @param {unknown} value\n * @param {string} name\n * @returns {boolean}\n */\nfunction newable(value, name) {\n  return (\n    typeof value === 'function' &&\n    // Prototypes do exist.\n    // type-coverage:ignore-next-line\n    value.prototype &&\n    // A function with keys in its prototype is probably a constructor.\n    // Classes’ prototype methods are not enumerable, so we check if some value\n    // exists in the prototype.\n    // type-coverage:ignore-next-line\n    (keys(value.prototype) || name in value.prototype)\n  )\n}\n\n/**\n * Check if `value` is an object with keys.\n *\n * @param {Record<string, unknown>} value\n * @returns {boolean}\n */\nfunction keys(value) {\n  /** @type {string} */\n  let key\n\n  for (key in value) {\n    if (own.call(value, key)) {\n      return true\n    }\n  }\n\n  return false\n}\n\n/**\n * Assert a parser is available.\n *\n * @param {string} name\n * @param {unknown} value\n * @returns {asserts value is Parser}\n */\nfunction assertParser(name, value) {\n  if (typeof value !== 'function') {\n    throw new TypeError('Cannot `' + name + '` without `Parser`')\n  }\n}\n\n/**\n * Assert a compiler is available.\n *\n * @param {string} name\n * @param {unknown} value\n * @returns {asserts value is Compiler}\n */\nfunction assertCompiler(name, value) {\n  if (typeof value !== 'function') {\n    throw new TypeError('Cannot `' + name + '` without `Compiler`')\n  }\n}\n\n/**\n * Assert the processor is not frozen.\n *\n * @param {string} name\n * @param {unknown} frozen\n * @returns {asserts frozen is false}\n */\nfunction assertUnfrozen(name, frozen) {\n  if (frozen) {\n    throw new Error(\n      'Cannot call `' +\n        name +\n        '` on a frozen processor.\\nCreate a new processor first, by calling it: use `processor()` instead of `processor`.'\n    )\n  }\n}\n\n/**\n * Assert `node` is a unist node.\n *\n * @param {unknown} node\n * @returns {asserts node is Node}\n */\nfunction assertNode(node) {\n  // `isPlainObj` unfortunately uses `any` instead of `unknown`.\n  // type-coverage:ignore-next-line\n  if (!isPlainObj(node) || typeof node.type !== 'string') {\n    throw new TypeError('Expected node, got `' + node + '`')\n    // Fine.\n  }\n}\n\n/**\n * Assert that `complete` is `true`.\n *\n * @param {string} name\n * @param {string} asyncName\n * @param {unknown} complete\n * @returns {asserts complete is true}\n */\nfunction assertDone(name, asyncName, complete) {\n  if (!complete) {\n    throw new Error(\n      '`' + name + '` finished async. Use `' + asyncName + '` instead'\n    )\n  }\n}\n\n/**\n * @param {VFileCompatible} [value]\n * @returns {VFile}\n */\nfunction vfile(value) {\n  return looksLikeAVFile(value) ? value : new VFile(value)\n}\n\n/**\n * @param {VFileCompatible} [value]\n * @returns {value is VFile}\n */\nfunction looksLikeAVFile(value) {\n  return Boolean(\n    value &&\n      typeof value === 'object' &&\n      'message' in value &&\n      'messages' in value\n  )\n}\n\n/**\n * @param {unknown} [value]\n * @returns {value is VFileValue}\n */\nfunction looksLikeAVFileValue(value) {\n  return typeof value === 'string' || isBuffer(value)\n}\n","/**\n * @typedef Options\n * @property {boolean} [includeImageAlt=true]\n */\n\n/**\n * Get the text content of a node.\n * Prefer the node’s plain-text fields, otherwise serialize its children,\n * and if the given value is an array, serialize the nodes in it.\n *\n * @param {unknown} node\n * @param {Options} [options]\n * @returns {string}\n */\nexport function toString(node, options) {\n  var {includeImageAlt = true} = options || {}\n  return one(node, includeImageAlt)\n}\n\n/**\n * @param {unknown} node\n * @param {boolean} includeImageAlt\n * @returns {string}\n */\nfunction one(node, includeImageAlt) {\n  return (\n    (node &&\n      typeof node === 'object' &&\n      // @ts-ignore looks like a literal.\n      (node.value ||\n        // @ts-ignore looks like an image.\n        (includeImageAlt ? node.alt : '') ||\n        // @ts-ignore looks like a parent.\n        ('children' in node && all(node.children, includeImageAlt)) ||\n        (Array.isArray(node) && all(node, includeImageAlt)))) ||\n    ''\n  )\n}\n\n/**\n * @param {Array.<unknown>} values\n * @param {boolean} includeImageAlt\n * @returns {string}\n */\nfunction all(values, includeImageAlt) {\n  /** @type {Array.<string>} */\n  var result = []\n  var index = -1\n\n  while (++index < values.length) {\n    result[index] = one(values[index], includeImageAlt)\n  }\n\n  return result.join('')\n}\n","/**\n * Like `Array#splice`, but smarter for giant arrays.\n *\n * `Array#splice` takes all items to be inserted as individual argument which\n * causes a stack overflow in V8 when trying to insert 100k items for instance.\n *\n * Otherwise, this does not return the removed items, and takes `items` as an\n * array instead of rest parameters.\n *\n * @template {unknown} T\n * @param {T[]} list\n * @param {number} start\n * @param {number} remove\n * @param {T[]} items\n * @returns {void}\n */\nexport function splice(list, start, remove, items) {\n  const end = list.length\n  let chunkStart = 0\n  /** @type {unknown[]} */\n\n  let parameters // Make start between zero and `end` (included).\n\n  if (start < 0) {\n    start = -start > end ? 0 : end + start\n  } else {\n    start = start > end ? end : start\n  }\n\n  remove = remove > 0 ? remove : 0 // No need to chunk the items if there’s only a couple (10k) items.\n\n  if (items.length < 10000) {\n    parameters = Array.from(items)\n    parameters.unshift(start, remove) // @ts-expect-error Hush, it’s fine.\n    ;[].splice.apply(list, parameters)\n  } else {\n    // Delete `remove` items starting from `start`\n    if (remove) [].splice.apply(list, [start, remove]) // Insert the items in chunks to not cause stack overflows.\n\n    while (chunkStart < items.length) {\n      parameters = items.slice(chunkStart, chunkStart + 10000)\n      parameters.unshift(start, 0) // @ts-expect-error Hush, it’s fine.\n      ;[].splice.apply(list, parameters)\n      chunkStart += 10000\n      start += 10000\n    }\n  }\n}\n/**\n * Append `items` (an array) at the end of `list` (another array).\n * When `list` was empty, returns `items` instead.\n *\n * This prevents a potentially expensive operation when `list` is empty,\n * and adds items in batches to prevent V8 from hanging.\n *\n * @template {unknown} T\n * @param {T[]} list\n * @param {T[]} items\n * @returns {T[]}\n */\n\nexport function push(list, items) {\n  if (list.length > 0) {\n    splice(list, list.length, 0, items)\n    return list\n  }\n\n  return items\n}\n","/**\n * @typedef {import('micromark-util-types').NormalizedExtension} NormalizedExtension\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').HtmlExtension} HtmlExtension\n */\n\nimport {splice} from 'micromark-util-chunked'\n\nconst hasOwnProperty = {}.hasOwnProperty\n\n/**\n * Combine several syntax extensions into one.\n *\n * @param {Extension[]} extensions List of syntax extensions.\n * @returns {NormalizedExtension} A single combined extension.\n */\nexport function combineExtensions(extensions) {\n  /** @type {NormalizedExtension} */\n  const all = {}\n  let index = -1\n\n  while (++index < extensions.length) {\n    syntaxExtension(all, extensions[index])\n  }\n\n  return all\n}\n\n/**\n * Merge `extension` into `all`.\n *\n * @param {NormalizedExtension} all Extension to merge into.\n * @param {Extension} extension Extension to merge.\n * @returns {void}\n */\nfunction syntaxExtension(all, extension) {\n  /** @type {string} */\n  let hook\n\n  for (hook in extension) {\n    const maybe = hasOwnProperty.call(all, hook) ? all[hook] : undefined\n    const left = maybe || (all[hook] = {})\n    const right = extension[hook]\n    /** @type {string} */\n    let code\n\n    for (code in right) {\n      if (!hasOwnProperty.call(left, code)) left[code] = []\n      const value = right[code]\n      constructs(\n        // @ts-expect-error Looks like a list.\n        left[code],\n        Array.isArray(value) ? value : value ? [value] : []\n      )\n    }\n  }\n}\n\n/**\n * Merge `list` into `existing` (both lists of constructs).\n * Mutates `existing`.\n *\n * @param {unknown[]} existing\n * @param {unknown[]} list\n * @returns {void}\n */\nfunction constructs(existing, list) {\n  let index = -1\n  /** @type {unknown[]} */\n  const before = []\n\n  while (++index < list.length) {\n    // @ts-expect-error Looks like an object.\n    ;(list[index].add === 'after' ? existing : before).push(list[index])\n  }\n\n  splice(existing, 0, 0, before)\n}\n\n/**\n * Combine several HTML extensions into one.\n *\n * @param {HtmlExtension[]} htmlExtensions List of HTML extensions.\n * @returns {HtmlExtension} A single combined extension.\n */\nexport function combineHtmlExtensions(htmlExtensions) {\n  /** @type {HtmlExtension} */\n  const handlers = {}\n  let index = -1\n\n  while (++index < htmlExtensions.length) {\n    htmlExtension(handlers, htmlExtensions[index])\n  }\n\n  return handlers\n}\n\n/**\n * Merge `extension` into `all`.\n *\n * @param {HtmlExtension} all Extension to merge into.\n * @param {HtmlExtension} extension Extension to merge.\n * @returns {void}\n */\nfunction htmlExtension(all, extension) {\n  /** @type {string} */\n  let hook\n\n  for (hook in extension) {\n    const maybe = hasOwnProperty.call(all, hook) ? all[hook] : undefined\n    const left = maybe || (all[hook] = {})\n    const right = extension[hook]\n    /** @type {string} */\n    let type\n\n    if (right) {\n      for (type in right) {\n        left[type] = right[type]\n      }\n    }\n  }\n}\n","// This module is generated by `script/`.\n//\n// CommonMark handles attention (emphasis, strong) markers based on what comes\n// before or after them.\n// One such difference is if those characters are Unicode punctuation.\n// This script is generated from the Unicode data.\nexport const unicodePunctuationRegex =\n  /[!-/:-@[-`{-~\\u00A1\\u00A7\\u00AB\\u00B6\\u00B7\\u00BB\\u00BF\\u037E\\u0387\\u055A-\\u055F\\u0589\\u058A\\u05BE\\u05C0\\u05C3\\u05C6\\u05F3\\u05F4\\u0609\\u060A\\u060C\\u060D\\u061B\\u061E\\u061F\\u066A-\\u066D\\u06D4\\u0700-\\u070D\\u07F7-\\u07F9\\u0830-\\u083E\\u085E\\u0964\\u0965\\u0970\\u09FD\\u0A76\\u0AF0\\u0C77\\u0C84\\u0DF4\\u0E4F\\u0E5A\\u0E5B\\u0F04-\\u0F12\\u0F14\\u0F3A-\\u0F3D\\u0F85\\u0FD0-\\u0FD4\\u0FD9\\u0FDA\\u104A-\\u104F\\u10FB\\u1360-\\u1368\\u1400\\u166E\\u169B\\u169C\\u16EB-\\u16ED\\u1735\\u1736\\u17D4-\\u17D6\\u17D8-\\u17DA\\u1800-\\u180A\\u1944\\u1945\\u1A1E\\u1A1F\\u1AA0-\\u1AA6\\u1AA8-\\u1AAD\\u1B5A-\\u1B60\\u1BFC-\\u1BFF\\u1C3B-\\u1C3F\\u1C7E\\u1C7F\\u1CC0-\\u1CC7\\u1CD3\\u2010-\\u2027\\u2030-\\u2043\\u2045-\\u2051\\u2053-\\u205E\\u207D\\u207E\\u208D\\u208E\\u2308-\\u230B\\u2329\\u232A\\u2768-\\u2775\\u27C5\\u27C6\\u27E6-\\u27EF\\u2983-\\u2998\\u29D8-\\u29DB\\u29FC\\u29FD\\u2CF9-\\u2CFC\\u2CFE\\u2CFF\\u2D70\\u2E00-\\u2E2E\\u2E30-\\u2E4F\\u2E52\\u3001-\\u3003\\u3008-\\u3011\\u3014-\\u301F\\u3030\\u303D\\u30A0\\u30FB\\uA4FE\\uA4FF\\uA60D-\\uA60F\\uA673\\uA67E\\uA6F2-\\uA6F7\\uA874-\\uA877\\uA8CE\\uA8CF\\uA8F8-\\uA8FA\\uA8FC\\uA92E\\uA92F\\uA95F\\uA9C1-\\uA9CD\\uA9DE\\uA9DF\\uAA5C-\\uAA5F\\uAADE\\uAADF\\uAAF0\\uAAF1\\uABEB\\uFD3E\\uFD3F\\uFE10-\\uFE19\\uFE30-\\uFE52\\uFE54-\\uFE61\\uFE63\\uFE68\\uFE6A\\uFE6B\\uFF01-\\uFF03\\uFF05-\\uFF0A\\uFF0C-\\uFF0F\\uFF1A\\uFF1B\\uFF1F\\uFF20\\uFF3B-\\uFF3D\\uFF3F\\uFF5B\\uFF5D\\uFF5F-\\uFF65]/\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {unicodePunctuationRegex} from './lib/unicode-punctuation-regex.js'\n/**\n * Check whether the character code represents an ASCII alpha (`a` through `z`,\n * case insensitive).\n *\n * An **ASCII alpha** is an ASCII upper alpha or ASCII lower alpha.\n *\n * An **ASCII upper alpha** is a character in the inclusive range U+0041 (`A`)\n * to U+005A (`Z`).\n *\n * An **ASCII lower alpha** is a character in the inclusive range U+0061 (`a`)\n * to U+007A (`z`).\n */\n\nexport const asciiAlpha = regexCheck(/[A-Za-z]/)\n/**\n * Check whether the character code represents an ASCII digit (`0` through `9`).\n *\n * An **ASCII digit** is a character in the inclusive range U+0030 (`0`) to\n * U+0039 (`9`).\n */\n\nexport const asciiDigit = regexCheck(/\\d/)\n/**\n * Check whether the character code represents an ASCII hex digit (`a` through\n * `f`, case insensitive, or `0` through `9`).\n *\n * An **ASCII hex digit** is an ASCII digit (see `asciiDigit`), ASCII upper hex\n * digit, or an ASCII lower hex digit.\n *\n * An **ASCII upper hex digit** is a character in the inclusive range U+0041\n * (`A`) to U+0046 (`F`).\n *\n * An **ASCII lower hex digit** is a character in the inclusive range U+0061\n * (`a`) to U+0066 (`f`).\n */\n\nexport const asciiHexDigit = regexCheck(/[\\dA-Fa-f]/)\n/**\n * Check whether the character code represents an ASCII alphanumeric (`a`\n * through `z`, case insensitive, or `0` through `9`).\n *\n * An **ASCII alphanumeric** is an ASCII digit (see `asciiDigit`) or ASCII alpha\n * (see `asciiAlpha`).\n */\n\nexport const asciiAlphanumeric = regexCheck(/[\\dA-Za-z]/)\n/**\n * Check whether the character code represents ASCII punctuation.\n *\n * An **ASCII punctuation** is a character in the inclusive ranges U+0021\n * EXCLAMATION MARK (`!`) to U+002F SLASH (`/`), U+003A COLON (`:`) to U+0040 AT\n * SIGN (`@`), U+005B LEFT SQUARE BRACKET (`[`) to U+0060 GRAVE ACCENT\n * (`` ` ``), or U+007B LEFT CURLY BRACE (`{`) to U+007E TILDE (`~`).\n */\n\nexport const asciiPunctuation = regexCheck(/[!-/:-@[-`{-~]/)\n/**\n * Check whether the character code represents an ASCII atext.\n *\n * atext is an ASCII alphanumeric (see `asciiAlphanumeric`), or a character in\n * the inclusive ranges U+0023 NUMBER SIGN (`#`) to U+0027 APOSTROPHE (`'`),\n * U+002A ASTERISK (`*`), U+002B PLUS SIGN (`+`), U+002D DASH (`-`), U+002F\n * SLASH (`/`), U+003D EQUALS TO (`=`), U+003F QUESTION MARK (`?`), U+005E\n * CARET (`^`) to U+0060 GRAVE ACCENT (`` ` ``), or U+007B LEFT CURLY BRACE\n * (`{`) to U+007E TILDE (`~`).\n *\n * See:\n * **\\[RFC5322]**:\n * [Internet Message Format](https://tools.ietf.org/html/rfc5322).\n * P. Resnick.\n * IETF.\n */\n\nexport const asciiAtext = regexCheck(/[#-'*+\\--9=?A-Z^-~]/)\n/**\n * Check whether a character code is an ASCII control character.\n *\n * An **ASCII control** is a character in the inclusive range U+0000 NULL (NUL)\n * to U+001F (US), or U+007F (DEL).\n *\n * @param {Code} code\n * @returns {code is number}\n */\n\nexport function asciiControl(code) {\n  return (\n    // Special whitespace codes (which have negative values), C0 and Control\n    // character DEL\n    code !== null && (code < 32 || code === 127)\n  )\n}\n/**\n * Check whether a character code is a markdown line ending (see\n * `markdownLineEnding`) or markdown space (see `markdownSpace`).\n *\n * @param {Code} code\n * @returns {code is number}\n */\n\nexport function markdownLineEndingOrSpace(code) {\n  return code !== null && (code < 0 || code === 32)\n}\n/**\n * Check whether a character code is a markdown line ending.\n *\n * A **markdown line ending** is the virtual characters M-0003 CARRIAGE RETURN\n * LINE FEED (CRLF), M-0004 LINE FEED (LF) and M-0005 CARRIAGE RETURN (CR).\n *\n * In micromark, the actual character U+000A LINE FEED (LF) and U+000D CARRIAGE\n * RETURN (CR) are replaced by these virtual characters depending on whether\n * they occurred together.\n *\n * @param {Code} code\n * @returns {code is number}\n */\n\nexport function markdownLineEnding(code) {\n  return code !== null && code < -2\n}\n/**\n * Check whether a character code is a markdown space.\n *\n * A **markdown space** is the concrete character U+0020 SPACE (SP) and the\n * virtual characters M-0001 VIRTUAL SPACE (VS) and M-0002 HORIZONTAL TAB (HT).\n *\n * In micromark, the actual character U+0009 CHARACTER TABULATION (HT) is\n * replaced by one M-0002 HORIZONTAL TAB (HT) and between 0 and 3 M-0001 VIRTUAL\n * SPACE (VS) characters, depending on the column at which the tab occurred.\n *\n * @param {Code} code\n * @returns {code is number}\n */\n\nexport function markdownSpace(code) {\n  return code === -2 || code === -1 || code === 32\n}\n/**\n * Check whether the character code represents Unicode whitespace.\n *\n * Note that this does handle micromark specific markdown whitespace characters.\n * See `markdownLineEndingOrSpace` to check that.\n *\n * A **Unicode whitespace** is a character in the Unicode `Zs` (Separator,\n * Space) category, or U+0009 CHARACTER TABULATION (HT), U+000A LINE FEED (LF),\n * U+000C (FF), or U+000D CARRIAGE RETURN (CR) (**\\[UNICODE]**).\n *\n * See:\n * **\\[UNICODE]**:\n * [The Unicode Standard](https://www.unicode.org/versions/).\n * Unicode Consortium.\n */\n\nexport const unicodeWhitespace = regexCheck(/\\s/)\n/**\n * Check whether the character code represents Unicode punctuation.\n *\n * A **Unicode punctuation** is a character in the Unicode `Pc` (Punctuation,\n * Connector), `Pd` (Punctuation, Dash), `Pe` (Punctuation, Close), `Pf`\n * (Punctuation, Final quote), `Pi` (Punctuation, Initial quote), `Po`\n * (Punctuation, Other), or `Ps` (Punctuation, Open) categories, or an ASCII\n * punctuation (see `asciiPunctuation`).\n *\n * See:\n * **\\[UNICODE]**:\n * [The Unicode Standard](https://www.unicode.org/versions/).\n * Unicode Consortium.\n */\n// Size note: removing ASCII from the regex and using `asciiPunctuation` here\n// In fact adds to the bundle size.\n\nexport const unicodePunctuation = regexCheck(unicodePunctuationRegex)\n/**\n * Create a code check from a regex.\n *\n * @param {RegExp} regex\n * @returns {(code: Code) => code is number}\n */\n\nfunction regexCheck(regex) {\n  return check\n  /**\n   * Check whether a code matches the bound regex.\n   *\n   * @param {Code} code Character code\n   * @returns {code is number} Whether the character code matches the bound regex\n   */\n\n  function check(code) {\n    return code !== null && regex.test(String.fromCharCode(code))\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n */\nimport {markdownSpace} from 'micromark-util-character'\n/**\n * @param {Effects} effects\n * @param {State} ok\n * @param {string} type\n * @param {number} [max=Infinity]\n * @returns {State}\n */\n\nexport function factorySpace(effects, ok, type, max) {\n  const limit = max ? max - 1 : Number.POSITIVE_INFINITY\n  let size = 0\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (markdownSpace(code)) {\n      effects.enter(type)\n      return prefix(code)\n    }\n\n    return ok(code)\n  }\n  /** @type {State} */\n\n  function prefix(code) {\n    if (markdownSpace(code) && size++ < limit) {\n      effects.consume(code)\n      return prefix\n    }\n\n    effects.exit(type)\n    return ok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').Initializer} Initializer\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {InitialConstruct} */\nexport const content = {\n  tokenize: initializeContent\n}\n/** @type {Initializer} */\n\nfunction initializeContent(effects) {\n  const contentStart = effects.attempt(\n    this.parser.constructs.contentInitial,\n    afterContentStartConstruct,\n    paragraphInitial\n  )\n  /** @type {Token} */\n\n  let previous\n  return contentStart\n  /** @type {State} */\n\n  function afterContentStartConstruct(code) {\n    if (code === null) {\n      effects.consume(code)\n      return\n    }\n\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return factorySpace(effects, contentStart, 'linePrefix')\n  }\n  /** @type {State} */\n\n  function paragraphInitial(code) {\n    effects.enter('paragraph')\n    return lineStart(code)\n  }\n  /** @type {State} */\n\n  function lineStart(code) {\n    const token = effects.enter('chunkText', {\n      contentType: 'text',\n      previous\n    })\n\n    if (previous) {\n      previous.next = token\n    }\n\n    previous = token\n    return data(code)\n  }\n  /** @type {State} */\n\n  function data(code) {\n    if (code === null) {\n      effects.exit('chunkText')\n      effects.exit('paragraph')\n      effects.consume(code)\n      return\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.consume(code)\n      effects.exit('chunkText')\n      return lineStart\n    } // Data.\n\n    effects.consume(code)\n    return data\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').Initializer} Initializer\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Point} Point\n */\n\n/**\n * @typedef {Record<string, unknown>} StackState\n * @typedef {[Construct, StackState]} StackItem\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\nimport {splice} from 'micromark-util-chunked'\n/** @type {InitialConstruct} */\n\nexport const document = {\n  tokenize: initializeDocument\n}\n/** @type {Construct} */\n\nconst containerConstruct = {\n  tokenize: tokenizeContainer\n}\n/** @type {Initializer} */\n\nfunction initializeDocument(effects) {\n  const self = this\n  /** @type {StackItem[]} */\n\n  const stack = []\n  let continued = 0\n  /** @type {TokenizeContext|undefined} */\n\n  let childFlow\n  /** @type {Token|undefined} */\n\n  let childToken\n  /** @type {number} */\n\n  let lineStartOffset\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    // First we iterate through the open blocks, starting with the root\n    // document, and descending through last children down to the last open\n    // block.\n    // Each block imposes a condition that the line must satisfy if the block is\n    // to remain open.\n    // For example, a block quote requires a `>` character.\n    // A paragraph requires a non-blank line.\n    // In this phase we may match all or just some of the open blocks.\n    // But we cannot close unmatched blocks yet, because we may have a lazy\n    // continuation line.\n    if (continued < stack.length) {\n      const item = stack[continued]\n      self.containerState = item[1]\n      return effects.attempt(\n        item[0].continuation,\n        documentContinue,\n        checkNewContainers\n      )(code)\n    } // Done.\n\n    return checkNewContainers(code)\n  }\n  /** @type {State} */\n\n  function documentContinue(code) {\n    continued++ // Note: this field is called `_closeFlow` but it also closes containers.\n    // Perhaps a good idea to rename it but it’s already used in the wild by\n    // extensions.\n\n    if (self.containerState._closeFlow) {\n      self.containerState._closeFlow = undefined\n\n      if (childFlow) {\n        closeFlow()\n      } // Note: this algorithm for moving events around is similar to the\n      // algorithm when dealing with lazy lines in `writeToChild`.\n\n      const indexBeforeExits = self.events.length\n      let indexBeforeFlow = indexBeforeExits\n      /** @type {Point|undefined} */\n\n      let point // Find the flow chunk.\n\n      while (indexBeforeFlow--) {\n        if (\n          self.events[indexBeforeFlow][0] === 'exit' &&\n          self.events[indexBeforeFlow][1].type === 'chunkFlow'\n        ) {\n          point = self.events[indexBeforeFlow][1].end\n          break\n        }\n      }\n\n      exitContainers(continued) // Fix positions.\n\n      let index = indexBeforeExits\n\n      while (index < self.events.length) {\n        self.events[index][1].end = Object.assign({}, point)\n        index++\n      } // Inject the exits earlier (they’re still also at the end).\n\n      splice(\n        self.events,\n        indexBeforeFlow + 1,\n        0,\n        self.events.slice(indexBeforeExits)\n      ) // Discard the duplicate exits.\n\n      self.events.length = index\n      return checkNewContainers(code)\n    }\n\n    return start(code)\n  }\n  /** @type {State} */\n\n  function checkNewContainers(code) {\n    // Next, after consuming the continuation markers for existing blocks, we\n    // look for new block starts (e.g. `>` for a block quote).\n    // If we encounter a new block start, we close any blocks unmatched in\n    // step 1 before creating the new block as a child of the last matched\n    // block.\n    if (continued === stack.length) {\n      // No need to `check` whether there’s a container, of `exitContainers`\n      // would be moot.\n      // We can instead immediately `attempt` to parse one.\n      if (!childFlow) {\n        return documentContinued(code)\n      } // If we have concrete content, such as block HTML or fenced code,\n      // we can’t have containers “pierce” into them, so we can immediately\n      // start.\n\n      if (childFlow.currentConstruct && childFlow.currentConstruct.concrete) {\n        return flowStart(code)\n      } // If we do have flow, it could still be a blank line,\n      // but we’d be interrupting it w/ a new container if there’s a current\n      // construct.\n\n      self.interrupt = Boolean(\n        childFlow.currentConstruct && !childFlow._gfmTableDynamicInterruptHack\n      )\n    } // Check if there is a new container.\n\n    self.containerState = {}\n    return effects.check(\n      containerConstruct,\n      thereIsANewContainer,\n      thereIsNoNewContainer\n    )(code)\n  }\n  /** @type {State} */\n\n  function thereIsANewContainer(code) {\n    if (childFlow) closeFlow()\n    exitContainers(continued)\n    return documentContinued(code)\n  }\n  /** @type {State} */\n\n  function thereIsNoNewContainer(code) {\n    self.parser.lazy[self.now().line] = continued !== stack.length\n    lineStartOffset = self.now().offset\n    return flowStart(code)\n  }\n  /** @type {State} */\n\n  function documentContinued(code) {\n    // Try new containers.\n    self.containerState = {}\n    return effects.attempt(\n      containerConstruct,\n      containerContinue,\n      flowStart\n    )(code)\n  }\n  /** @type {State} */\n\n  function containerContinue(code) {\n    continued++\n    stack.push([self.currentConstruct, self.containerState]) // Try another.\n\n    return documentContinued(code)\n  }\n  /** @type {State} */\n\n  function flowStart(code) {\n    if (code === null) {\n      if (childFlow) closeFlow()\n      exitContainers(0)\n      effects.consume(code)\n      return\n    }\n\n    childFlow = childFlow || self.parser.flow(self.now())\n    effects.enter('chunkFlow', {\n      contentType: 'flow',\n      previous: childToken,\n      _tokenizer: childFlow\n    })\n    return flowContinue(code)\n  }\n  /** @type {State} */\n\n  function flowContinue(code) {\n    if (code === null) {\n      writeToChild(effects.exit('chunkFlow'), true)\n      exitContainers(0)\n      effects.consume(code)\n      return\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.consume(code)\n      writeToChild(effects.exit('chunkFlow')) // Get ready for the next line.\n\n      continued = 0\n      self.interrupt = undefined\n      return start\n    }\n\n    effects.consume(code)\n    return flowContinue\n  }\n  /**\n   * @param {Token} token\n   * @param {boolean} [eof]\n   * @returns {void}\n   */\n\n  function writeToChild(token, eof) {\n    const stream = self.sliceStream(token)\n    if (eof) stream.push(null)\n    token.previous = childToken\n    if (childToken) childToken.next = token\n    childToken = token\n    childFlow.defineSkip(token.start)\n    childFlow.write(stream) // Alright, so we just added a lazy line:\n    //\n    // ```markdown\n    // > a\n    // b.\n    //\n    // Or:\n    //\n    // > ~~~c\n    // d\n    //\n    // Or:\n    //\n    // > | e |\n    // f\n    // ```\n    //\n    // The construct in the second example (fenced code) does not accept lazy\n    // lines, so it marked itself as done at the end of its first line, and\n    // then the content construct parses `d`.\n    // Most constructs in markdown match on the first line: if the first line\n    // forms a construct, a non-lazy line can’t “unmake” it.\n    //\n    // The construct in the third example is potentially a GFM table, and\n    // those are *weird*.\n    // It *could* be a table, from the first line, if the following line\n    // matches a condition.\n    // In this case, that second line is lazy, which “unmakes” the first line\n    // and turns the whole into one content block.\n    //\n    // We’ve now parsed the non-lazy and the lazy line, and can figure out\n    // whether the lazy line started a new flow block.\n    // If it did, we exit the current containers between the two flow blocks.\n\n    if (self.parser.lazy[token.start.line]) {\n      let index = childFlow.events.length\n\n      while (index--) {\n        if (\n          // The token starts before the line ending…\n          childFlow.events[index][1].start.offset < lineStartOffset && // …and either is not ended yet…\n          (!childFlow.events[index][1].end || // …or ends after it.\n            childFlow.events[index][1].end.offset > lineStartOffset)\n        ) {\n          // Exit: there’s still something open, which means it’s a lazy line\n          // part of something.\n          return\n        }\n      } // Note: this algorithm for moving events around is similar to the\n      // algorithm when closing flow in `documentContinue`.\n\n      const indexBeforeExits = self.events.length\n      let indexBeforeFlow = indexBeforeExits\n      /** @type {boolean|undefined} */\n\n      let seen\n      /** @type {Point|undefined} */\n\n      let point // Find the previous chunk (the one before the lazy line).\n\n      while (indexBeforeFlow--) {\n        if (\n          self.events[indexBeforeFlow][0] === 'exit' &&\n          self.events[indexBeforeFlow][1].type === 'chunkFlow'\n        ) {\n          if (seen) {\n            point = self.events[indexBeforeFlow][1].end\n            break\n          }\n\n          seen = true\n        }\n      }\n\n      exitContainers(continued) // Fix positions.\n\n      index = indexBeforeExits\n\n      while (index < self.events.length) {\n        self.events[index][1].end = Object.assign({}, point)\n        index++\n      } // Inject the exits earlier (they’re still also at the end).\n\n      splice(\n        self.events,\n        indexBeforeFlow + 1,\n        0,\n        self.events.slice(indexBeforeExits)\n      ) // Discard the duplicate exits.\n\n      self.events.length = index\n    }\n  }\n  /**\n   * @param {number} size\n   * @returns {void}\n   */\n\n  function exitContainers(size) {\n    let index = stack.length // Exit open containers.\n\n    while (index-- > size) {\n      const entry = stack[index]\n      self.containerState = entry[1]\n      entry[0].exit.call(self, effects)\n    }\n\n    stack.length = size\n  }\n\n  function closeFlow() {\n    childFlow.write([null])\n    childToken = undefined\n    childFlow = undefined\n    self.containerState._closeFlow = undefined\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeContainer(effects, ok, nok) {\n  return factorySpace(\n    effects,\n    effects.attempt(this.parser.constructs.document, ok, nok),\n    'linePrefix',\n    this.parser.constructs.disable.null.includes('codeIndented') ? undefined : 4\n  )\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const blankLine = {\n  tokenize: tokenizeBlankLine,\n  partial: true\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeBlankLine(effects, ok, nok) {\n  return factorySpace(effects, afterWhitespace, 'linePrefix')\n  /** @type {State} */\n\n  function afterWhitespace(code) {\n    return code === null || markdownLineEnding(code) ? ok(code) : nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').Chunk} Chunk\n * @typedef {import('micromark-util-types').Event} Event\n */\nimport {splice} from 'micromark-util-chunked'\n\n/**\n * Tokenize subcontent.\n *\n * @param {Event[]} events\n * @returns {boolean}\n */\nexport function subtokenize(events) {\n  /** @type {Record<string, number>} */\n  const jumps = {}\n  let index = -1\n  /** @type {Event} */\n\n  let event\n  /** @type {number|undefined} */\n\n  let lineIndex\n  /** @type {number} */\n\n  let otherIndex\n  /** @type {Event} */\n\n  let otherEvent\n  /** @type {Event[]} */\n\n  let parameters\n  /** @type {Event[]} */\n\n  let subevents\n  /** @type {boolean|undefined} */\n\n  let more\n\n  while (++index < events.length) {\n    while (index in jumps) {\n      index = jumps[index]\n    }\n\n    event = events[index] // Add a hook for the GFM tasklist extension, which needs to know if text\n    // is in the first content of a list item.\n\n    if (\n      index &&\n      event[1].type === 'chunkFlow' &&\n      events[index - 1][1].type === 'listItemPrefix'\n    ) {\n      subevents = event[1]._tokenizer.events\n      otherIndex = 0\n\n      if (\n        otherIndex < subevents.length &&\n        subevents[otherIndex][1].type === 'lineEndingBlank'\n      ) {\n        otherIndex += 2\n      }\n\n      if (\n        otherIndex < subevents.length &&\n        subevents[otherIndex][1].type === 'content'\n      ) {\n        while (++otherIndex < subevents.length) {\n          if (subevents[otherIndex][1].type === 'content') {\n            break\n          }\n\n          if (subevents[otherIndex][1].type === 'chunkText') {\n            subevents[otherIndex][1]._isInFirstContentOfListItem = true\n            otherIndex++\n          }\n        }\n      }\n    } // Enter.\n\n    if (event[0] === 'enter') {\n      if (event[1].contentType) {\n        Object.assign(jumps, subcontent(events, index))\n        index = jumps[index]\n        more = true\n      }\n    } // Exit.\n    else if (event[1]._container) {\n      otherIndex = index\n      lineIndex = undefined\n\n      while (otherIndex--) {\n        otherEvent = events[otherIndex]\n\n        if (\n          otherEvent[1].type === 'lineEnding' ||\n          otherEvent[1].type === 'lineEndingBlank'\n        ) {\n          if (otherEvent[0] === 'enter') {\n            if (lineIndex) {\n              events[lineIndex][1].type = 'lineEndingBlank'\n            }\n\n            otherEvent[1].type = 'lineEnding'\n            lineIndex = otherIndex\n          }\n        } else {\n          break\n        }\n      }\n\n      if (lineIndex) {\n        // Fix position.\n        event[1].end = Object.assign({}, events[lineIndex][1].start) // Switch container exit w/ line endings.\n\n        parameters = events.slice(lineIndex, index)\n        parameters.unshift(event)\n        splice(events, lineIndex, index - lineIndex + 1, parameters)\n      }\n    }\n  }\n\n  return !more\n}\n/**\n * Tokenize embedded tokens.\n *\n * @param {Event[]} events\n * @param {number} eventIndex\n * @returns {Record<string, number>}\n */\n\nfunction subcontent(events, eventIndex) {\n  const token = events[eventIndex][1]\n  const context = events[eventIndex][2]\n  let startPosition = eventIndex - 1\n  /** @type {number[]} */\n\n  const startPositions = []\n  const tokenizer =\n    token._tokenizer || context.parser[token.contentType](token.start)\n  const childEvents = tokenizer.events\n  /** @type {[number, number][]} */\n\n  const jumps = []\n  /** @type {Record<string, number>} */\n\n  const gaps = {}\n  /** @type {Chunk[]} */\n\n  let stream\n  /** @type {Token|undefined} */\n\n  let previous\n  let index = -1\n  /** @type {Token|undefined} */\n\n  let current = token\n  let adjust = 0\n  let start = 0\n  const breaks = [start] // Loop forward through the linked tokens to pass them in order to the\n  // subtokenizer.\n\n  while (current) {\n    // Find the position of the event for this token.\n    while (events[++startPosition][1] !== current) {\n      // Empty.\n    }\n\n    startPositions.push(startPosition)\n\n    if (!current._tokenizer) {\n      stream = context.sliceStream(current)\n\n      if (!current.next) {\n        stream.push(null)\n      }\n\n      if (previous) {\n        tokenizer.defineSkip(current.start)\n      }\n\n      if (current._isInFirstContentOfListItem) {\n        tokenizer._gfmTasklistFirstContentOfListItem = true\n      }\n\n      tokenizer.write(stream)\n\n      if (current._isInFirstContentOfListItem) {\n        tokenizer._gfmTasklistFirstContentOfListItem = undefined\n      }\n    } // Unravel the next token.\n\n    previous = current\n    current = current.next\n  } // Now, loop back through all events (and linked tokens), to figure out which\n  // parts belong where.\n\n  current = token\n\n  while (++index < childEvents.length) {\n    if (\n      // Find a void token that includes a break.\n      childEvents[index][0] === 'exit' &&\n      childEvents[index - 1][0] === 'enter' &&\n      childEvents[index][1].type === childEvents[index - 1][1].type &&\n      childEvents[index][1].start.line !== childEvents[index][1].end.line\n    ) {\n      start = index + 1\n      breaks.push(start) // Help GC.\n\n      current._tokenizer = undefined\n      current.previous = undefined\n      current = current.next\n    }\n  } // Help GC.\n\n  tokenizer.events = [] // If there’s one more token (which is the cases for lines that end in an\n  // EOF), that’s perfect: the last point we found starts it.\n  // If there isn’t then make sure any remaining content is added to it.\n\n  if (current) {\n    // Help GC.\n    current._tokenizer = undefined\n    current.previous = undefined\n  } else {\n    breaks.pop()\n  } // Now splice the events from the subtokenizer into the current events,\n  // moving back to front so that splice indices aren’t affected.\n\n  index = breaks.length\n\n  while (index--) {\n    const slice = childEvents.slice(breaks[index], breaks[index + 1])\n    const start = startPositions.pop()\n    jumps.unshift([start, start + slice.length - 1])\n    splice(events, start, 2, slice)\n  }\n\n  index = -1\n\n  while (++index < jumps.length) {\n    gaps[adjust + jumps[index][0]] = adjust + jumps[index][1]\n    adjust += jumps[index][1] - jumps[index][0] - 1\n  }\n\n  return gaps\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\nimport {subtokenize} from 'micromark-util-subtokenize'\n\n/**\n * No name because it must not be turned off.\n * @type {Construct}\n */\nexport const content = {\n  tokenize: tokenizeContent,\n  resolve: resolveContent\n}\n/** @type {Construct} */\n\nconst continuationConstruct = {\n  tokenize: tokenizeContinuation,\n  partial: true\n}\n/**\n * Content is transparent: it’s parsed right now. That way, definitions are also\n * parsed right now: before text in paragraphs (specifically, media) are parsed.\n *\n * @type {Resolver}\n */\n\nfunction resolveContent(events) {\n  subtokenize(events)\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeContent(effects, ok) {\n  /** @type {Token} */\n  let previous\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('content')\n    previous = effects.enter('chunkContent', {\n      contentType: 'content'\n    })\n    return data(code)\n  }\n  /** @type {State} */\n\n  function data(code) {\n    if (code === null) {\n      return contentEnd(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      return effects.check(\n        continuationConstruct,\n        contentContinue,\n        contentEnd\n      )(code)\n    } // Data.\n\n    effects.consume(code)\n    return data\n  }\n  /** @type {State} */\n\n  function contentEnd(code) {\n    effects.exit('chunkContent')\n    effects.exit('content')\n    return ok(code)\n  }\n  /** @type {State} */\n\n  function contentContinue(code) {\n    effects.consume(code)\n    effects.exit('chunkContent')\n    previous.next = effects.enter('chunkContent', {\n      contentType: 'content',\n      previous\n    })\n    previous = previous.next\n    return data\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeContinuation(effects, ok, nok) {\n  const self = this\n  return startLookahead\n  /** @type {State} */\n\n  function startLookahead(code) {\n    effects.exit('chunkContent')\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return factorySpace(effects, prefixed, 'linePrefix')\n  }\n  /** @type {State} */\n\n  function prefixed(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return nok(code)\n    }\n\n    const tail = self.events[self.events.length - 1]\n\n    if (\n      !self.parser.constructs.disable.null.includes('codeIndented') &&\n      tail &&\n      tail[1].type === 'linePrefix' &&\n      tail[2].sliceSerialize(tail[1], true).length >= 4\n    ) {\n      return ok(code)\n    }\n\n    return effects.interrupt(self.parser.constructs.flow, nok, ok)(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').Initializer} Initializer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {blankLine, content} from 'micromark-core-commonmark'\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {InitialConstruct} */\nexport const flow = {\n  tokenize: initializeFlow\n}\n/** @type {Initializer} */\n\nfunction initializeFlow(effects) {\n  const self = this\n  const initial = effects.attempt(\n    // Try to parse a blank line.\n    blankLine,\n    atBlankEnding, // Try to parse initial flow (essentially, only code).\n    effects.attempt(\n      this.parser.constructs.flowInitial,\n      afterConstruct,\n      factorySpace(\n        effects,\n        effects.attempt(\n          this.parser.constructs.flow,\n          afterConstruct,\n          effects.attempt(content, afterConstruct)\n        ),\n        'linePrefix'\n      )\n    )\n  )\n  return initial\n  /** @type {State} */\n\n  function atBlankEnding(code) {\n    if (code === null) {\n      effects.consume(code)\n      return\n    }\n\n    effects.enter('lineEndingBlank')\n    effects.consume(code)\n    effects.exit('lineEndingBlank')\n    self.currentConstruct = undefined\n    return initial\n  }\n  /** @type {State} */\n\n  function afterConstruct(code) {\n    if (code === null) {\n      effects.consume(code)\n      return\n    }\n\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    self.currentConstruct = undefined\n    return initial\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Initializer} Initializer\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nexport const resolver = {\n  resolveAll: createResolver()\n}\nexport const string = initializeFactory('string')\nexport const text = initializeFactory('text')\n/**\n * @param {'string'|'text'} field\n * @returns {InitialConstruct}\n */\n\nfunction initializeFactory(field) {\n  return {\n    tokenize: initializeText,\n    resolveAll: createResolver(\n      field === 'text' ? resolveAllLineSuffixes : undefined\n    )\n  }\n  /** @type {Initializer} */\n\n  function initializeText(effects) {\n    const self = this\n    const constructs = this.parser.constructs[field]\n    const text = effects.attempt(constructs, start, notText)\n    return start\n    /** @type {State} */\n\n    function start(code) {\n      return atBreak(code) ? text(code) : notText(code)\n    }\n    /** @type {State} */\n\n    function notText(code) {\n      if (code === null) {\n        effects.consume(code)\n        return\n      }\n\n      effects.enter('data')\n      effects.consume(code)\n      return data\n    }\n    /** @type {State} */\n\n    function data(code) {\n      if (atBreak(code)) {\n        effects.exit('data')\n        return text(code)\n      } // Data.\n\n      effects.consume(code)\n      return data\n    }\n    /**\n     * @param {Code} code\n     * @returns {boolean}\n     */\n\n    function atBreak(code) {\n      if (code === null) {\n        return true\n      }\n\n      const list = constructs[code]\n      let index = -1\n\n      if (list) {\n        while (++index < list.length) {\n          const item = list[index]\n\n          if (!item.previous || item.previous.call(self, self.previous)) {\n            return true\n          }\n        }\n      }\n\n      return false\n    }\n  }\n}\n/**\n * @param {Resolver} [extraResolver]\n * @returns {Resolver}\n */\n\nfunction createResolver(extraResolver) {\n  return resolveAllText\n  /** @type {Resolver} */\n\n  function resolveAllText(events, context) {\n    let index = -1\n    /** @type {number|undefined} */\n\n    let enter // A rather boring computation (to merge adjacent `data` events) which\n    // improves mm performance by 29%.\n\n    while (++index <= events.length) {\n      if (enter === undefined) {\n        if (events[index] && events[index][1].type === 'data') {\n          enter = index\n          index++\n        }\n      } else if (!events[index] || events[index][1].type !== 'data') {\n        // Don’t do anything if there is one data token.\n        if (index !== enter + 2) {\n          events[enter][1].end = events[index - 1][1].end\n          events.splice(enter + 2, index - enter - 2)\n          index = enter + 2\n        }\n\n        enter = undefined\n      }\n    }\n\n    return extraResolver ? extraResolver(events, context) : events\n  }\n}\n/**\n * A rather ugly set of instructions which again looks at chunks in the input\n * stream.\n * The reason to do this here is that it is *much* faster to parse in reverse.\n * And that we can’t hook into `null` to split the line suffix before an EOF.\n * To do: figure out if we can make this into a clean utility, or even in core.\n * As it will be useful for GFMs literal autolink extension (and maybe even\n * tables?)\n *\n * @type {Resolver}\n */\n\nfunction resolveAllLineSuffixes(events, context) {\n  let eventIndex = 0 // Skip first.\n\n  while (++eventIndex <= events.length) {\n    if (\n      (eventIndex === events.length ||\n        events[eventIndex][1].type === 'lineEnding') &&\n      events[eventIndex - 1][1].type === 'data'\n    ) {\n      const data = events[eventIndex - 1][1]\n      const chunks = context.sliceStream(data)\n      let index = chunks.length\n      let bufferIndex = -1\n      let size = 0\n      /** @type {boolean|undefined} */\n\n      let tabs\n\n      while (index--) {\n        const chunk = chunks[index]\n\n        if (typeof chunk === 'string') {\n          bufferIndex = chunk.length\n\n          while (chunk.charCodeAt(bufferIndex - 1) === 32) {\n            size++\n            bufferIndex--\n          }\n\n          if (bufferIndex) break\n          bufferIndex = -1\n        } // Number\n        else if (chunk === -2) {\n          tabs = true\n          size++\n        } else if (chunk === -1) {\n          // Empty\n        } else {\n          // Replacement character, exit.\n          index++\n          break\n        }\n      }\n\n      if (size) {\n        const token = {\n          type:\n            eventIndex === events.length || tabs || size < 2\n              ? 'lineSuffix'\n              : 'hardBreakTrailing',\n          start: {\n            line: data.end.line,\n            column: data.end.column - size,\n            offset: data.end.offset - size,\n            _index: data.start._index + index,\n            _bufferIndex: index\n              ? bufferIndex\n              : data.start._bufferIndex + bufferIndex\n          },\n          end: Object.assign({}, data.end)\n        }\n        data.end = Object.assign({}, token.start)\n\n        if (data.start.offset === data.end.offset) {\n          Object.assign(data, token)\n        } else {\n          events.splice(\n            eventIndex,\n            0,\n            ['enter', token, context],\n            ['exit', token, context]\n          )\n          eventIndex += 2\n        }\n      }\n\n      eventIndex++\n    }\n  }\n\n  return events\n}\n","/**\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Resolver} Resolver\n */\n\n/**\n * Call all `resolveAll`s.\n *\n * @param {{resolveAll?: Resolver}[]} constructs\n * @param {Event[]} events\n * @param {TokenizeContext} context\n * @returns {Event[]}\n */\nexport function resolveAll(constructs, events, context) {\n  /** @type {Resolver[]} */\n  const called = []\n  let index = -1\n\n  while (++index < constructs.length) {\n    const resolve = constructs[index].resolveAll\n\n    if (resolve && !called.includes(resolve)) {\n      events = resolve(events, context)\n      called.push(resolve)\n    }\n  }\n\n  return events\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Chunk} Chunk\n * @typedef {import('micromark-util-types').Point} Point\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').ConstructRecord} ConstructRecord\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').ParseContext} ParseContext\n */\n\n/**\n * @typedef Info\n * @property {() => void} restore\n * @property {number} from\n *\n * @callback ReturnHandle\n *   Handle a successful run.\n * @param {Construct} construct\n * @param {Info} info\n * @returns {void}\n */\nimport {markdownLineEnding} from 'micromark-util-character'\nimport {push, splice} from 'micromark-util-chunked'\nimport {resolveAll} from 'micromark-util-resolve-all'\n\n/**\n * Create a tokenizer.\n * Tokenizers deal with one type of data (e.g., containers, flow, text).\n * The parser is the object dealing with it all.\n * `initialize` works like other constructs, except that only its `tokenize`\n * function is used, in which case it doesn’t receive an `ok` or `nok`.\n * `from` can be given to set the point before the first character, although\n * when further lines are indented, they must be set with `defineSkip`.\n *\n * @param {ParseContext} parser\n * @param {InitialConstruct} initialize\n * @param {Omit<Point, '_index'|'_bufferIndex'>} [from]\n * @returns {TokenizeContext}\n */\nexport function createTokenizer(parser, initialize, from) {\n  /** @type {Point} */\n  let point = Object.assign(\n    from\n      ? Object.assign({}, from)\n      : {\n          line: 1,\n          column: 1,\n          offset: 0\n        },\n    {\n      _index: 0,\n      _bufferIndex: -1\n    }\n  )\n  /** @type {Record<string, number>} */\n\n  const columnStart = {}\n  /** @type {Construct[]} */\n\n  const resolveAllConstructs = []\n  /** @type {Chunk[]} */\n\n  let chunks = []\n  /** @type {Token[]} */\n\n  let stack = []\n  /** @type {boolean|undefined} */\n\n  let consumed = true\n  /**\n   * Tools used for tokenizing.\n   *\n   * @type {Effects}\n   */\n\n  const effects = {\n    consume,\n    enter,\n    exit,\n    attempt: constructFactory(onsuccessfulconstruct),\n    check: constructFactory(onsuccessfulcheck),\n    interrupt: constructFactory(onsuccessfulcheck, {\n      interrupt: true\n    })\n  }\n  /**\n   * State and tools for resolving and serializing.\n   *\n   * @type {TokenizeContext}\n   */\n\n  const context = {\n    previous: null,\n    code: null,\n    containerState: {},\n    events: [],\n    parser,\n    sliceStream,\n    sliceSerialize,\n    now,\n    defineSkip,\n    write\n  }\n  /**\n   * The state function.\n   *\n   * @type {State|void}\n   */\n\n  let state = initialize.tokenize.call(context, effects)\n  /**\n   * Track which character we expect to be consumed, to catch bugs.\n   *\n   * @type {Code}\n   */\n\n  let expectedCode\n\n  if (initialize.resolveAll) {\n    resolveAllConstructs.push(initialize)\n  }\n\n  return context\n  /** @type {TokenizeContext['write']} */\n\n  function write(slice) {\n    chunks = push(chunks, slice)\n    main() // Exit if we’re not done, resolve might change stuff.\n\n    if (chunks[chunks.length - 1] !== null) {\n      return []\n    }\n\n    addResult(initialize, 0) // Otherwise, resolve, and exit.\n\n    context.events = resolveAll(resolveAllConstructs, context.events, context)\n    return context.events\n  } //\n  // Tools.\n  //\n\n  /** @type {TokenizeContext['sliceSerialize']} */\n\n  function sliceSerialize(token, expandTabs) {\n    return serializeChunks(sliceStream(token), expandTabs)\n  }\n  /** @type {TokenizeContext['sliceStream']} */\n\n  function sliceStream(token) {\n    return sliceChunks(chunks, token)\n  }\n  /** @type {TokenizeContext['now']} */\n\n  function now() {\n    return Object.assign({}, point)\n  }\n  /** @type {TokenizeContext['defineSkip']} */\n\n  function defineSkip(value) {\n    columnStart[value.line] = value.column\n    accountForPotentialSkip()\n  } //\n  // State management.\n  //\n\n  /**\n   * Main loop (note that `_index` and `_bufferIndex` in `point` are modified by\n   * `consume`).\n   * Here is where we walk through the chunks, which either include strings of\n   * several characters, or numerical character codes.\n   * The reason to do this in a loop instead of a call is so the stack can\n   * drain.\n   *\n   * @returns {void}\n   */\n\n  function main() {\n    /** @type {number} */\n    let chunkIndex\n\n    while (point._index < chunks.length) {\n      const chunk = chunks[point._index] // If we’re in a buffer chunk, loop through it.\n\n      if (typeof chunk === 'string') {\n        chunkIndex = point._index\n\n        if (point._bufferIndex < 0) {\n          point._bufferIndex = 0\n        }\n\n        while (\n          point._index === chunkIndex &&\n          point._bufferIndex < chunk.length\n        ) {\n          go(chunk.charCodeAt(point._bufferIndex))\n        }\n      } else {\n        go(chunk)\n      }\n    }\n  }\n  /**\n   * Deal with one code.\n   *\n   * @param {Code} code\n   * @returns {void}\n   */\n\n  function go(code) {\n    consumed = undefined\n    expectedCode = code\n    state = state(code)\n  }\n  /** @type {Effects['consume']} */\n\n  function consume(code) {\n    if (markdownLineEnding(code)) {\n      point.line++\n      point.column = 1\n      point.offset += code === -3 ? 2 : 1\n      accountForPotentialSkip()\n    } else if (code !== -1) {\n      point.column++\n      point.offset++\n    } // Not in a string chunk.\n\n    if (point._bufferIndex < 0) {\n      point._index++\n    } else {\n      point._bufferIndex++ // At end of string chunk.\n      // @ts-expect-error Points w/ non-negative `_bufferIndex` reference\n      // strings.\n\n      if (point._bufferIndex === chunks[point._index].length) {\n        point._bufferIndex = -1\n        point._index++\n      }\n    } // Expose the previous character.\n\n    context.previous = code // Mark as consumed.\n\n    consumed = true\n  }\n  /** @type {Effects['enter']} */\n\n  function enter(type, fields) {\n    /** @type {Token} */\n    // @ts-expect-error Patch instead of assign required fields to help GC.\n    const token = fields || {}\n    token.type = type\n    token.start = now()\n    context.events.push(['enter', token, context])\n    stack.push(token)\n    return token\n  }\n  /** @type {Effects['exit']} */\n\n  function exit(type) {\n    const token = stack.pop()\n    token.end = now()\n    context.events.push(['exit', token, context])\n    return token\n  }\n  /**\n   * Use results.\n   *\n   * @type {ReturnHandle}\n   */\n\n  function onsuccessfulconstruct(construct, info) {\n    addResult(construct, info.from)\n  }\n  /**\n   * Discard results.\n   *\n   * @type {ReturnHandle}\n   */\n\n  function onsuccessfulcheck(_, info) {\n    info.restore()\n  }\n  /**\n   * Factory to attempt/check/interrupt.\n   *\n   * @param {ReturnHandle} onreturn\n   * @param {Record<string, unknown>} [fields]\n   */\n\n  function constructFactory(onreturn, fields) {\n    return hook\n    /**\n     * Handle either an object mapping codes to constructs, a list of\n     * constructs, or a single construct.\n     *\n     * @param {Construct|Construct[]|ConstructRecord} constructs\n     * @param {State} returnState\n     * @param {State} [bogusState]\n     * @returns {State}\n     */\n\n    function hook(constructs, returnState, bogusState) {\n      /** @type {Construct[]} */\n      let listOfConstructs\n      /** @type {number} */\n\n      let constructIndex\n      /** @type {Construct} */\n\n      let currentConstruct\n      /** @type {Info} */\n\n      let info\n      return Array.isArray(constructs)\n        ? /* c8 ignore next 1 */\n          handleListOfConstructs(constructs)\n        : 'tokenize' in constructs // @ts-expect-error Looks like a construct.\n        ? handleListOfConstructs([constructs])\n        : handleMapOfConstructs(constructs)\n      /**\n       * Handle a list of construct.\n       *\n       * @param {ConstructRecord} map\n       * @returns {State}\n       */\n\n      function handleMapOfConstructs(map) {\n        return start\n        /** @type {State} */\n\n        function start(code) {\n          const def = code !== null && map[code]\n          const all = code !== null && map.null\n          const list = [\n            // To do: add more extension tests.\n\n            /* c8 ignore next 2 */\n            ...(Array.isArray(def) ? def : def ? [def] : []),\n            ...(Array.isArray(all) ? all : all ? [all] : [])\n          ]\n          return handleListOfConstructs(list)(code)\n        }\n      }\n      /**\n       * Handle a list of construct.\n       *\n       * @param {Construct[]} list\n       * @returns {State}\n       */\n\n      function handleListOfConstructs(list) {\n        listOfConstructs = list\n        constructIndex = 0\n\n        if (list.length === 0) {\n          return bogusState\n        }\n\n        return handleConstruct(list[constructIndex])\n      }\n      /**\n       * Handle a single construct.\n       *\n       * @param {Construct} construct\n       * @returns {State}\n       */\n\n      function handleConstruct(construct) {\n        return start\n        /** @type {State} */\n\n        function start(code) {\n          // To do: not needed to store if there is no bogus state, probably?\n          // Currently doesn’t work because `inspect` in document does a check\n          // w/o a bogus, which doesn’t make sense. But it does seem to help perf\n          // by not storing.\n          info = store()\n          currentConstruct = construct\n\n          if (!construct.partial) {\n            context.currentConstruct = construct\n          }\n\n          if (\n            construct.name &&\n            context.parser.constructs.disable.null.includes(construct.name)\n          ) {\n            return nok(code)\n          }\n\n          return construct.tokenize.call(\n            // If we do have fields, create an object w/ `context` as its\n            // prototype.\n            // This allows a “live binding”, which is needed for `interrupt`.\n            fields ? Object.assign(Object.create(context), fields) : context,\n            effects,\n            ok,\n            nok\n          )(code)\n        }\n      }\n      /** @type {State} */\n\n      function ok(code) {\n        consumed = true\n        onreturn(currentConstruct, info)\n        return returnState\n      }\n      /** @type {State} */\n\n      function nok(code) {\n        consumed = true\n        info.restore()\n\n        if (++constructIndex < listOfConstructs.length) {\n          return handleConstruct(listOfConstructs[constructIndex])\n        }\n\n        return bogusState\n      }\n    }\n  }\n  /**\n   * @param {Construct} construct\n   * @param {number} from\n   * @returns {void}\n   */\n\n  function addResult(construct, from) {\n    if (construct.resolveAll && !resolveAllConstructs.includes(construct)) {\n      resolveAllConstructs.push(construct)\n    }\n\n    if (construct.resolve) {\n      splice(\n        context.events,\n        from,\n        context.events.length - from,\n        construct.resolve(context.events.slice(from), context)\n      )\n    }\n\n    if (construct.resolveTo) {\n      context.events = construct.resolveTo(context.events, context)\n    }\n  }\n  /**\n   * Store state.\n   *\n   * @returns {Info}\n   */\n\n  function store() {\n    const startPoint = now()\n    const startPrevious = context.previous\n    const startCurrentConstruct = context.currentConstruct\n    const startEventsIndex = context.events.length\n    const startStack = Array.from(stack)\n    return {\n      restore,\n      from: startEventsIndex\n    }\n    /**\n     * Restore state.\n     *\n     * @returns {void}\n     */\n\n    function restore() {\n      point = startPoint\n      context.previous = startPrevious\n      context.currentConstruct = startCurrentConstruct\n      context.events.length = startEventsIndex\n      stack = startStack\n      accountForPotentialSkip()\n    }\n  }\n  /**\n   * Move the current point a bit forward in the line when it’s on a column\n   * skip.\n   *\n   * @returns {void}\n   */\n\n  function accountForPotentialSkip() {\n    if (point.line in columnStart && point.column < 2) {\n      point.column = columnStart[point.line]\n      point.offset += columnStart[point.line] - 1\n    }\n  }\n}\n/**\n * Get the chunks from a slice of chunks in the range of a token.\n *\n * @param {Chunk[]} chunks\n * @param {Pick<Token, 'start'|'end'>} token\n * @returns {Chunk[]}\n */\n\nfunction sliceChunks(chunks, token) {\n  const startIndex = token.start._index\n  const startBufferIndex = token.start._bufferIndex\n  const endIndex = token.end._index\n  const endBufferIndex = token.end._bufferIndex\n  /** @type {Chunk[]} */\n\n  let view\n\n  if (startIndex === endIndex) {\n    // @ts-expect-error `_bufferIndex` is used on string chunks.\n    view = [chunks[startIndex].slice(startBufferIndex, endBufferIndex)]\n  } else {\n    view = chunks.slice(startIndex, endIndex)\n\n    if (startBufferIndex > -1) {\n      // @ts-expect-error `_bufferIndex` is used on string chunks.\n      view[0] = view[0].slice(startBufferIndex)\n    }\n\n    if (endBufferIndex > 0) {\n      // @ts-expect-error `_bufferIndex` is used on string chunks.\n      view.push(chunks[endIndex].slice(0, endBufferIndex))\n    }\n  }\n\n  return view\n}\n/**\n * Get the string value of a slice of chunks.\n *\n * @param {Chunk[]} chunks\n * @param {boolean} [expandTabs=false]\n * @returns {string}\n */\n\nfunction serializeChunks(chunks, expandTabs) {\n  let index = -1\n  /** @type {string[]} */\n\n  const result = []\n  /** @type {boolean|undefined} */\n\n  let atTab\n\n  while (++index < chunks.length) {\n    const chunk = chunks[index]\n    /** @type {string} */\n\n    let value\n\n    if (typeof chunk === 'string') {\n      value = chunk\n    } else\n      switch (chunk) {\n        case -5: {\n          value = '\\r'\n          break\n        }\n\n        case -4: {\n          value = '\\n'\n          break\n        }\n\n        case -3: {\n          value = '\\r' + '\\n'\n          break\n        }\n\n        case -2: {\n          value = expandTabs ? ' ' : '\\t'\n          break\n        }\n\n        case -1: {\n          if (!expandTabs && atTab) continue\n          value = ' '\n          break\n        }\n\n        default: {\n          // Currently only replacement character.\n          value = String.fromCharCode(chunk)\n        }\n      }\n\n    atTab = chunk === -2\n    result.push(value)\n  }\n\n  return result.join('')\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const thematicBreak = {\n  name: 'thematicBreak',\n  tokenize: tokenizeThematicBreak\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeThematicBreak(effects, ok, nok) {\n  let size = 0\n  /** @type {NonNullable<Code>} */\n\n  let marker\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('thematicBreak')\n    marker = code\n    return atBreak(code)\n  }\n  /** @type {State} */\n\n  function atBreak(code) {\n    if (code === marker) {\n      effects.enter('thematicBreakSequence')\n      return sequence(code)\n    }\n\n    if (markdownSpace(code)) {\n      return factorySpace(effects, atBreak, 'whitespace')(code)\n    }\n\n    if (size < 3 || (code !== null && !markdownLineEnding(code))) {\n      return nok(code)\n    }\n\n    effects.exit('thematicBreak')\n    return ok(code)\n  }\n  /** @type {State} */\n\n  function sequence(code) {\n    if (code === marker) {\n      effects.consume(code)\n      size++\n      return sequence\n    }\n\n    effects.exit('thematicBreakSequence')\n    return atBreak(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Exiter} Exiter\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\n\n/**\n * @typedef {Record<string, unknown> & {marker: Code, type: string, size: number}} ListContainerState\n * @typedef {TokenizeContext & {containerState: ListContainerState}} TokenizeContextWithState\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {asciiDigit, markdownSpace} from 'micromark-util-character'\nimport {blankLine} from './blank-line.js'\nimport {thematicBreak} from './thematic-break.js'\n/** @type {Construct} */\n\nexport const list = {\n  name: 'list',\n  tokenize: tokenizeListStart,\n  continuation: {\n    tokenize: tokenizeListContinuation\n  },\n  exit: tokenizeListEnd\n}\n/** @type {Construct} */\n\nconst listItemPrefixWhitespaceConstruct = {\n  tokenize: tokenizeListItemPrefixWhitespace,\n  partial: true\n}\n/** @type {Construct} */\n\nconst indentConstruct = {\n  tokenize: tokenizeIndent,\n  partial: true\n}\n/**\n * @type {Tokenizer}\n * @this {TokenizeContextWithState}\n */\n\nfunction tokenizeListStart(effects, ok, nok) {\n  const self = this\n  const tail = self.events[self.events.length - 1]\n  let initialSize =\n    tail && tail[1].type === 'linePrefix'\n      ? tail[2].sliceSerialize(tail[1], true).length\n      : 0\n  let size = 0\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    const kind =\n      self.containerState.type ||\n      (code === 42 || code === 43 || code === 45\n        ? 'listUnordered'\n        : 'listOrdered')\n\n    if (\n      kind === 'listUnordered'\n        ? !self.containerState.marker || code === self.containerState.marker\n        : asciiDigit(code)\n    ) {\n      if (!self.containerState.type) {\n        self.containerState.type = kind\n        effects.enter(kind, {\n          _container: true\n        })\n      }\n\n      if (kind === 'listUnordered') {\n        effects.enter('listItemPrefix')\n        return code === 42 || code === 45\n          ? effects.check(thematicBreak, nok, atMarker)(code)\n          : atMarker(code)\n      }\n\n      if (!self.interrupt || code === 49) {\n        effects.enter('listItemPrefix')\n        effects.enter('listItemValue')\n        return inside(code)\n      }\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function inside(code) {\n    if (asciiDigit(code) && ++size < 10) {\n      effects.consume(code)\n      return inside\n    }\n\n    if (\n      (!self.interrupt || size < 2) &&\n      (self.containerState.marker\n        ? code === self.containerState.marker\n        : code === 41 || code === 46)\n    ) {\n      effects.exit('listItemValue')\n      return atMarker(code)\n    }\n\n    return nok(code)\n  }\n  /**\n   * @type {State}\n   **/\n\n  function atMarker(code) {\n    effects.enter('listItemMarker')\n    effects.consume(code)\n    effects.exit('listItemMarker')\n    self.containerState.marker = self.containerState.marker || code\n    return effects.check(\n      blankLine, // Can’t be empty when interrupting.\n      self.interrupt ? nok : onBlank,\n      effects.attempt(\n        listItemPrefixWhitespaceConstruct,\n        endOfPrefix,\n        otherPrefix\n      )\n    )\n  }\n  /** @type {State} */\n\n  function onBlank(code) {\n    self.containerState.initialBlankLine = true\n    initialSize++\n    return endOfPrefix(code)\n  }\n  /** @type {State} */\n\n  function otherPrefix(code) {\n    if (markdownSpace(code)) {\n      effects.enter('listItemPrefixWhitespace')\n      effects.consume(code)\n      effects.exit('listItemPrefixWhitespace')\n      return endOfPrefix\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function endOfPrefix(code) {\n    self.containerState.size =\n      initialSize +\n      self.sliceSerialize(effects.exit('listItemPrefix'), true).length\n    return ok(code)\n  }\n}\n/**\n * @type {Tokenizer}\n * @this {TokenizeContextWithState}\n */\n\nfunction tokenizeListContinuation(effects, ok, nok) {\n  const self = this\n  self.containerState._closeFlow = undefined\n  return effects.check(blankLine, onBlank, notBlank)\n  /** @type {State} */\n\n  function onBlank(code) {\n    self.containerState.furtherBlankLines =\n      self.containerState.furtherBlankLines ||\n      self.containerState.initialBlankLine // We have a blank line.\n    // Still, try to consume at most the items size.\n\n    return factorySpace(\n      effects,\n      ok,\n      'listItemIndent',\n      self.containerState.size + 1\n    )(code)\n  }\n  /** @type {State} */\n\n  function notBlank(code) {\n    if (self.containerState.furtherBlankLines || !markdownSpace(code)) {\n      self.containerState.furtherBlankLines = undefined\n      self.containerState.initialBlankLine = undefined\n      return notInCurrentItem(code)\n    }\n\n    self.containerState.furtherBlankLines = undefined\n    self.containerState.initialBlankLine = undefined\n    return effects.attempt(indentConstruct, ok, notInCurrentItem)(code)\n  }\n  /** @type {State} */\n\n  function notInCurrentItem(code) {\n    // While we do continue, we signal that the flow should be closed.\n    self.containerState._closeFlow = true // As we’re closing flow, we’re no longer interrupting.\n\n    self.interrupt = undefined\n    return factorySpace(\n      effects,\n      effects.attempt(list, ok, nok),\n      'linePrefix',\n      self.parser.constructs.disable.null.includes('codeIndented')\n        ? undefined\n        : 4\n    )(code)\n  }\n}\n/**\n * @type {Tokenizer}\n * @this {TokenizeContextWithState}\n */\n\nfunction tokenizeIndent(effects, ok, nok) {\n  const self = this\n  return factorySpace(\n    effects,\n    afterPrefix,\n    'listItemIndent',\n    self.containerState.size + 1\n  )\n  /** @type {State} */\n\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return tail &&\n      tail[1].type === 'listItemIndent' &&\n      tail[2].sliceSerialize(tail[1], true).length === self.containerState.size\n      ? ok(code)\n      : nok(code)\n  }\n}\n/**\n * @type {Exiter}\n * @this {TokenizeContextWithState}\n */\n\nfunction tokenizeListEnd(effects) {\n  effects.exit(this.containerState.type)\n}\n/**\n * @type {Tokenizer}\n * @this {TokenizeContextWithState}\n */\n\nfunction tokenizeListItemPrefixWhitespace(effects, ok, nok) {\n  const self = this\n  return factorySpace(\n    effects,\n    afterPrefix,\n    'listItemPrefixWhitespace',\n    self.parser.constructs.disable.null.includes('codeIndented')\n      ? undefined\n      : 4 + 1\n  )\n  /** @type {State} */\n\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return !markdownSpace(code) &&\n      tail &&\n      tail[1].type === 'listItemPrefixWhitespace'\n      ? ok(code)\n      : nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Exiter} Exiter\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownSpace} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const blockQuote = {\n  name: 'blockQuote',\n  tokenize: tokenizeBlockQuoteStart,\n  continuation: {\n    tokenize: tokenizeBlockQuoteContinuation\n  },\n  exit\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeBlockQuoteStart(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (code === 62) {\n      const state = self.containerState\n\n      if (!state.open) {\n        effects.enter('blockQuote', {\n          _container: true\n        })\n        state.open = true\n      }\n\n      effects.enter('blockQuotePrefix')\n      effects.enter('blockQuoteMarker')\n      effects.consume(code)\n      effects.exit('blockQuoteMarker')\n      return after\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function after(code) {\n    if (markdownSpace(code)) {\n      effects.enter('blockQuotePrefixWhitespace')\n      effects.consume(code)\n      effects.exit('blockQuotePrefixWhitespace')\n      effects.exit('blockQuotePrefix')\n      return ok\n    }\n\n    effects.exit('blockQuotePrefix')\n    return ok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeBlockQuoteContinuation(effects, ok, nok) {\n  return factorySpace(\n    effects,\n    effects.attempt(blockQuote, ok, nok),\n    'linePrefix',\n    this.parser.constructs.disable.null.includes('codeIndented') ? undefined : 4\n  )\n}\n/** @type {Exiter} */\n\nfunction exit(effects) {\n  effects.exit('blockQuote')\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n */\nimport {\n  asciiControl,\n  markdownLineEndingOrSpace,\n  markdownLineEnding\n} from 'micromark-util-character'\n\n/**\n * @param {Effects} effects\n * @param {State} ok\n * @param {State} nok\n * @param {string} type\n * @param {string} literalType\n * @param {string} literalMarkerType\n * @param {string} rawType\n * @param {string} stringType\n * @param {number} [max=Infinity]\n * @returns {State}\n */\n// eslint-disable-next-line max-params\nexport function factoryDestination(\n  effects,\n  ok,\n  nok,\n  type,\n  literalType,\n  literalMarkerType,\n  rawType,\n  stringType,\n  max\n) {\n  const limit = max || Number.POSITIVE_INFINITY\n  let balance = 0\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (code === 60) {\n      effects.enter(type)\n      effects.enter(literalType)\n      effects.enter(literalMarkerType)\n      effects.consume(code)\n      effects.exit(literalMarkerType)\n      return destinationEnclosedBefore\n    }\n\n    if (code === null || code === 41 || asciiControl(code)) {\n      return nok(code)\n    }\n\n    effects.enter(type)\n    effects.enter(rawType)\n    effects.enter(stringType)\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return destinationRaw(code)\n  }\n  /** @type {State} */\n\n  function destinationEnclosedBefore(code) {\n    if (code === 62) {\n      effects.enter(literalMarkerType)\n      effects.consume(code)\n      effects.exit(literalMarkerType)\n      effects.exit(literalType)\n      effects.exit(type)\n      return ok\n    }\n\n    effects.enter(stringType)\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return destinationEnclosed(code)\n  }\n  /** @type {State} */\n\n  function destinationEnclosed(code) {\n    if (code === 62) {\n      effects.exit('chunkString')\n      effects.exit(stringType)\n      return destinationEnclosedBefore(code)\n    }\n\n    if (code === null || code === 60 || markdownLineEnding(code)) {\n      return nok(code)\n    }\n\n    effects.consume(code)\n    return code === 92 ? destinationEnclosedEscape : destinationEnclosed\n  }\n  /** @type {State} */\n\n  function destinationEnclosedEscape(code) {\n    if (code === 60 || code === 62 || code === 92) {\n      effects.consume(code)\n      return destinationEnclosed\n    }\n\n    return destinationEnclosed(code)\n  }\n  /** @type {State} */\n\n  function destinationRaw(code) {\n    if (code === 40) {\n      if (++balance > limit) return nok(code)\n      effects.consume(code)\n      return destinationRaw\n    }\n\n    if (code === 41) {\n      if (!balance--) {\n        effects.exit('chunkString')\n        effects.exit(stringType)\n        effects.exit(rawType)\n        effects.exit(type)\n        return ok(code)\n      }\n\n      effects.consume(code)\n      return destinationRaw\n    }\n\n    if (code === null || markdownLineEndingOrSpace(code)) {\n      if (balance) return nok(code)\n      effects.exit('chunkString')\n      effects.exit(stringType)\n      effects.exit(rawType)\n      effects.exit(type)\n      return ok(code)\n    }\n\n    if (asciiControl(code)) return nok(code)\n    effects.consume(code)\n    return code === 92 ? destinationRawEscape : destinationRaw\n  }\n  /** @type {State} */\n\n  function destinationRawEscape(code) {\n    if (code === 40 || code === 41 || code === 92) {\n      effects.consume(code)\n      return destinationRaw\n    }\n\n    return destinationRaw(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').State} State\n */\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\n\n/**\n * @this {TokenizeContext}\n * @param {Effects} effects\n * @param {State} ok\n * @param {State} nok\n * @param {string} type\n * @param {string} markerType\n * @param {string} stringType\n * @returns {State}\n */\n// eslint-disable-next-line max-params\nexport function factoryLabel(effects, ok, nok, type, markerType, stringType) {\n  const self = this\n  let size = 0\n  /** @type {boolean} */\n\n  let data\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter(type)\n    effects.enter(markerType)\n    effects.consume(code)\n    effects.exit(markerType)\n    effects.enter(stringType)\n    return atBreak\n  }\n  /** @type {State} */\n\n  function atBreak(code) {\n    if (\n      code === null ||\n      code === 91 ||\n      (code === 93 && !data) ||\n      /* To do: remove in the future once we’ve switched from\n       * `micromark-extension-footnote` to `micromark-extension-gfm-footnote`,\n       * which doesn’t need this */\n\n      /* Hidden footnotes hook */\n\n      /* c8 ignore next 3 */\n      (code === 94 &&\n        !size &&\n        '_hiddenFootnoteSupport' in self.parser.constructs) ||\n      size > 999\n    ) {\n      return nok(code)\n    }\n\n    if (code === 93) {\n      effects.exit(stringType)\n      effects.enter(markerType)\n      effects.consume(code)\n      effects.exit(markerType)\n      effects.exit(type)\n      return ok\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return atBreak\n    }\n\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return label(code)\n  }\n  /** @type {State} */\n\n  function label(code) {\n    if (\n      code === null ||\n      code === 91 ||\n      code === 93 ||\n      markdownLineEnding(code) ||\n      size++ > 999\n    ) {\n      effects.exit('chunkString')\n      return atBreak(code)\n    }\n\n    effects.consume(code)\n    data = data || !markdownSpace(code)\n    return code === 92 ? labelEscape : label\n  }\n  /** @type {State} */\n\n  function labelEscape(code) {\n    if (code === 91 || code === 92 || code === 93) {\n      effects.consume(code)\n      size++\n      return label\n    }\n\n    return label(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/**\n * @param {Effects} effects\n * @param {State} ok\n * @param {State} nok\n * @param {string} type\n * @param {string} markerType\n * @param {string} stringType\n * @returns {State}\n */\n// eslint-disable-next-line max-params\nexport function factoryTitle(effects, ok, nok, type, markerType, stringType) {\n  /** @type {NonNullable<Code>} */\n  let marker\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter(type)\n    effects.enter(markerType)\n    effects.consume(code)\n    effects.exit(markerType)\n    marker = code === 40 ? 41 : code\n    return atFirstTitleBreak\n  }\n  /** @type {State} */\n\n  function atFirstTitleBreak(code) {\n    if (code === marker) {\n      effects.enter(markerType)\n      effects.consume(code)\n      effects.exit(markerType)\n      effects.exit(type)\n      return ok\n    }\n\n    effects.enter(stringType)\n    return atTitleBreak(code)\n  }\n  /** @type {State} */\n\n  function atTitleBreak(code) {\n    if (code === marker) {\n      effects.exit(stringType)\n      return atFirstTitleBreak(marker)\n    }\n\n    if (code === null) {\n      return nok(code)\n    } // Note: blank lines can’t exist in content.\n\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return factorySpace(effects, atTitleBreak, 'linePrefix')\n    }\n\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return title(code)\n  }\n  /** @type {State} */\n\n  function title(code) {\n    if (code === marker || code === null || markdownLineEnding(code)) {\n      effects.exit('chunkString')\n      return atTitleBreak(code)\n    }\n\n    effects.consume(code)\n    return code === 92 ? titleEscape : title\n  }\n  /** @type {State} */\n\n  function titleEscape(code) {\n    if (code === marker || code === 92) {\n      effects.consume(code)\n      return title\n    }\n\n    return title(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\n\n/**\n * @param {Effects} effects\n * @param {State} ok\n */\nexport function factoryWhitespace(effects, ok) {\n  /** @type {boolean} */\n  let seen\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      seen = true\n      return start\n    }\n\n    if (markdownSpace(code)) {\n      return factorySpace(\n        effects,\n        start,\n        seen ? 'linePrefix' : 'lineSuffix'\n      )(code)\n    }\n\n    return ok(code)\n  }\n}\n","/**\n * Normalize an identifier (such as used in definitions).\n *\n * @param {string} value\n * @returns {string}\n */\nexport function normalizeIdentifier(value) {\n  return (\n    value // Collapse Markdown whitespace.\n      .replace(/[\\t\\n\\r ]+/g, ' ') // Trim.\n      .replace(/^ | $/g, '') // Some characters are considered “uppercase”, but if their lowercase\n      // counterpart is uppercased will result in a different uppercase\n      // character.\n      // Hence, to get that form, we perform both lower- and uppercase.\n      // Upper case makes sure keys will not interact with default prototypal\n      // methods: no method is uppercase.\n      .toLowerCase()\n      .toUpperCase()\n  )\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factoryDestination} from 'micromark-factory-destination'\nimport {factoryLabel} from 'micromark-factory-label'\nimport {factorySpace} from 'micromark-factory-space'\nimport {factoryTitle} from 'micromark-factory-title'\nimport {factoryWhitespace} from 'micromark-factory-whitespace'\nimport {normalizeIdentifier} from 'micromark-util-normalize-identifier'\nimport {\n  markdownLineEnding,\n  markdownLineEndingOrSpace\n} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const definition = {\n  name: 'definition',\n  tokenize: tokenizeDefinition\n}\n/** @type {Construct} */\n\nconst titleConstruct = {\n  tokenize: tokenizeTitle,\n  partial: true\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeDefinition(effects, ok, nok) {\n  const self = this\n  /** @type {string} */\n\n  let identifier\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('definition')\n    return factoryLabel.call(\n      self,\n      effects,\n      labelAfter,\n      nok,\n      'definitionLabel',\n      'definitionLabelMarker',\n      'definitionLabelString'\n    )(code)\n  }\n  /** @type {State} */\n\n  function labelAfter(code) {\n    identifier = normalizeIdentifier(\n      self.sliceSerialize(self.events[self.events.length - 1][1]).slice(1, -1)\n    )\n\n    if (code === 58) {\n      effects.enter('definitionMarker')\n      effects.consume(code)\n      effects.exit('definitionMarker') // Note: blank lines can’t exist in content.\n\n      return factoryWhitespace(\n        effects,\n        factoryDestination(\n          effects,\n          effects.attempt(\n            titleConstruct,\n            factorySpace(effects, after, 'whitespace'),\n            factorySpace(effects, after, 'whitespace')\n          ),\n          nok,\n          'definitionDestination',\n          'definitionDestinationLiteral',\n          'definitionDestinationLiteralMarker',\n          'definitionDestinationRaw',\n          'definitionDestinationString'\n        )\n      )\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function after(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('definition')\n\n      if (!self.parser.defined.includes(identifier)) {\n        self.parser.defined.push(identifier)\n      }\n\n      return ok(code)\n    }\n\n    return nok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeTitle(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    return markdownLineEndingOrSpace(code)\n      ? factoryWhitespace(effects, before)(code)\n      : nok(code)\n  }\n  /** @type {State} */\n\n  function before(code) {\n    if (code === 34 || code === 39 || code === 40) {\n      return factoryTitle(\n        effects,\n        factorySpace(effects, after, 'whitespace'),\n        nok,\n        'definitionTitle',\n        'definitionTitleMarker',\n        'definitionTitleString'\n      )(code)\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function after(code) {\n    return code === null || markdownLineEnding(code) ? ok(code) : nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const codeIndented = {\n  name: 'codeIndented',\n  tokenize: tokenizeCodeIndented\n}\n/** @type {Construct} */\n\nconst indentedContent = {\n  tokenize: tokenizeIndentedContent,\n  partial: true\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeCodeIndented(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('codeIndented')\n    return factorySpace(effects, afterStartPrefix, 'linePrefix', 4 + 1)(code)\n  }\n  /** @type {State} */\n\n  function afterStartPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return tail &&\n      tail[1].type === 'linePrefix' &&\n      tail[2].sliceSerialize(tail[1], true).length >= 4\n      ? afterPrefix(code)\n      : nok(code)\n  }\n  /** @type {State} */\n\n  function afterPrefix(code) {\n    if (code === null) {\n      return after(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      return effects.attempt(indentedContent, afterPrefix, after)(code)\n    }\n\n    effects.enter('codeFlowValue')\n    return content(code)\n  }\n  /** @type {State} */\n\n  function content(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('codeFlowValue')\n      return afterPrefix(code)\n    }\n\n    effects.consume(code)\n    return content\n  }\n  /** @type {State} */\n\n  function after(code) {\n    effects.exit('codeIndented')\n    return ok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeIndentedContent(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    // If this is a lazy line, it can’t be code.\n    if (self.parser.lazy[self.now().line]) {\n      return nok(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return start\n    }\n\n    return factorySpace(effects, afterPrefix, 'linePrefix', 4 + 1)(code)\n  }\n  /** @type {State} */\n\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return tail &&\n      tail[1].type === 'linePrefix' &&\n      tail[2].sliceSerialize(tail[1], true).length >= 4\n      ? ok(code)\n      : markdownLineEnding(code)\n      ? start(code)\n      : nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {\n  markdownLineEnding,\n  markdownLineEndingOrSpace,\n  markdownSpace\n} from 'micromark-util-character'\nimport {splice} from 'micromark-util-chunked'\n\n/** @type {Construct} */\nexport const headingAtx = {\n  name: 'headingAtx',\n  tokenize: tokenizeHeadingAtx,\n  resolve: resolveHeadingAtx\n}\n/** @type {Resolver} */\n\nfunction resolveHeadingAtx(events, context) {\n  let contentEnd = events.length - 2\n  let contentStart = 3\n  /** @type {Token} */\n\n  let content\n  /** @type {Token} */\n\n  let text // Prefix whitespace, part of the opening.\n\n  if (events[contentStart][1].type === 'whitespace') {\n    contentStart += 2\n  } // Suffix whitespace, part of the closing.\n\n  if (\n    contentEnd - 2 > contentStart &&\n    events[contentEnd][1].type === 'whitespace'\n  ) {\n    contentEnd -= 2\n  }\n\n  if (\n    events[contentEnd][1].type === 'atxHeadingSequence' &&\n    (contentStart === contentEnd - 1 ||\n      (contentEnd - 4 > contentStart &&\n        events[contentEnd - 2][1].type === 'whitespace'))\n  ) {\n    contentEnd -= contentStart + 1 === contentEnd ? 2 : 4\n  }\n\n  if (contentEnd > contentStart) {\n    content = {\n      type: 'atxHeadingText',\n      start: events[contentStart][1].start,\n      end: events[contentEnd][1].end\n    }\n    text = {\n      type: 'chunkText',\n      start: events[contentStart][1].start,\n      end: events[contentEnd][1].end,\n      // @ts-expect-error Constants are fine to assign.\n      contentType: 'text'\n    }\n    splice(events, contentStart, contentEnd - contentStart + 1, [\n      ['enter', content, context],\n      ['enter', text, context],\n      ['exit', text, context],\n      ['exit', content, context]\n    ])\n  }\n\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeHeadingAtx(effects, ok, nok) {\n  const self = this\n  let size = 0\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('atxHeading')\n    effects.enter('atxHeadingSequence')\n    return fenceOpenInside(code)\n  }\n  /** @type {State} */\n\n  function fenceOpenInside(code) {\n    if (code === 35 && size++ < 6) {\n      effects.consume(code)\n      return fenceOpenInside\n    }\n\n    if (code === null || markdownLineEndingOrSpace(code)) {\n      effects.exit('atxHeadingSequence')\n      return self.interrupt ? ok(code) : headingBreak(code)\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function headingBreak(code) {\n    if (code === 35) {\n      effects.enter('atxHeadingSequence')\n      return sequence(code)\n    }\n\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('atxHeading')\n      return ok(code)\n    }\n\n    if (markdownSpace(code)) {\n      return factorySpace(effects, headingBreak, 'whitespace')(code)\n    }\n\n    effects.enter('atxHeadingText')\n    return data(code)\n  }\n  /** @type {State} */\n\n  function sequence(code) {\n    if (code === 35) {\n      effects.consume(code)\n      return sequence\n    }\n\n    effects.exit('atxHeadingSequence')\n    return headingBreak(code)\n  }\n  /** @type {State} */\n\n  function data(code) {\n    if (code === null || code === 35 || markdownLineEndingOrSpace(code)) {\n      effects.exit('atxHeadingText')\n      return headingBreak(code)\n    }\n\n    effects.consume(code)\n    return data\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const setextUnderline = {\n  name: 'setextUnderline',\n  tokenize: tokenizeSetextUnderline,\n  resolveTo: resolveToSetextUnderline\n}\n/** @type {Resolver} */\n\nfunction resolveToSetextUnderline(events, context) {\n  let index = events.length\n  /** @type {number|undefined} */\n\n  let content\n  /** @type {number|undefined} */\n\n  let text\n  /** @type {number|undefined} */\n\n  let definition // Find the opening of the content.\n  // It’ll always exist: we don’t tokenize if it isn’t there.\n\n  while (index--) {\n    if (events[index][0] === 'enter') {\n      if (events[index][1].type === 'content') {\n        content = index\n        break\n      }\n\n      if (events[index][1].type === 'paragraph') {\n        text = index\n      }\n    } // Exit\n    else {\n      if (events[index][1].type === 'content') {\n        // Remove the content end (if needed we’ll add it later)\n        events.splice(index, 1)\n      }\n\n      if (!definition && events[index][1].type === 'definition') {\n        definition = index\n      }\n    }\n  }\n\n  const heading = {\n    type: 'setextHeading',\n    start: Object.assign({}, events[text][1].start),\n    end: Object.assign({}, events[events.length - 1][1].end)\n  } // Change the paragraph to setext heading text.\n\n  events[text][1].type = 'setextHeadingText' // If we have definitions in the content, we’ll keep on having content,\n  // but we need move it.\n\n  if (definition) {\n    events.splice(text, 0, ['enter', heading, context])\n    events.splice(definition + 1, 0, ['exit', events[content][1], context])\n    events[content][1].end = Object.assign({}, events[definition][1].end)\n  } else {\n    events[content][1] = heading\n  } // Add the heading exit at the end.\n\n  events.push(['exit', heading, context])\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeSetextUnderline(effects, ok, nok) {\n  const self = this\n  let index = self.events.length\n  /** @type {NonNullable<Code>} */\n\n  let marker\n  /** @type {boolean} */\n\n  let paragraph // Find an opening.\n\n  while (index--) {\n    // Skip enter/exit of line ending, line prefix, and content.\n    // We can now either have a definition or a paragraph.\n    if (\n      self.events[index][1].type !== 'lineEnding' &&\n      self.events[index][1].type !== 'linePrefix' &&\n      self.events[index][1].type !== 'content'\n    ) {\n      paragraph = self.events[index][1].type === 'paragraph'\n      break\n    }\n  }\n\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (!self.parser.lazy[self.now().line] && (self.interrupt || paragraph)) {\n      effects.enter('setextHeadingLine')\n      effects.enter('setextHeadingLineSequence')\n      marker = code\n      return closingSequence(code)\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function closingSequence(code) {\n    if (code === marker) {\n      effects.consume(code)\n      return closingSequence\n    }\n\n    effects.exit('setextHeadingLineSequence')\n    return factorySpace(effects, closingSequenceEnd, 'lineSuffix')(code)\n  }\n  /** @type {State} */\n\n  function closingSequenceEnd(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('setextHeadingLine')\n      return ok(code)\n    }\n\n    return nok(code)\n  }\n}\n","/**\n * List of lowercase HTML tag names which when parsing HTML (flow), result\n * in more relaxed rules (condition 6): because they are known blocks, the\n * HTML-like syntax doesn’t have to be strictly parsed.\n * For tag names not in this list, a more strict algorithm (condition 7) is used\n * to detect whether the HTML-like syntax is seen as HTML (flow) or not.\n *\n * This is copied from:\n * <https://spec.commonmark.org/0.30/#html-blocks>.\n */\nexport const htmlBlockNames = [\n  'address',\n  'article',\n  'aside',\n  'base',\n  'basefont',\n  'blockquote',\n  'body',\n  'caption',\n  'center',\n  'col',\n  'colgroup',\n  'dd',\n  'details',\n  'dialog',\n  'dir',\n  'div',\n  'dl',\n  'dt',\n  'fieldset',\n  'figcaption',\n  'figure',\n  'footer',\n  'form',\n  'frame',\n  'frameset',\n  'h1',\n  'h2',\n  'h3',\n  'h4',\n  'h5',\n  'h6',\n  'head',\n  'header',\n  'hr',\n  'html',\n  'iframe',\n  'legend',\n  'li',\n  'link',\n  'main',\n  'menu',\n  'menuitem',\n  'nav',\n  'noframes',\n  'ol',\n  'optgroup',\n  'option',\n  'p',\n  'param',\n  'section',\n  'summary',\n  'table',\n  'tbody',\n  'td',\n  'tfoot',\n  'th',\n  'thead',\n  'title',\n  'tr',\n  'track',\n  'ul'\n]\n\n/**\n * List of lowercase HTML tag names which when parsing HTML (flow), result in\n * HTML that can include lines w/o exiting, until a closing tag also in this\n * list is found (condition 1).\n *\n * This module is copied from:\n * <https://spec.commonmark.org/0.30/#html-blocks>.\n *\n * Note that `textarea` was added in `CommonMark@0.30`.\n */\nexport const htmlRawNames = ['pre', 'script', 'style', 'textarea']\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {\n  asciiAlpha,\n  asciiAlphanumeric,\n  markdownLineEnding,\n  markdownLineEndingOrSpace,\n  markdownSpace\n} from 'micromark-util-character'\nimport {htmlBlockNames, htmlRawNames} from 'micromark-util-html-tag-name'\nimport {blankLine} from './blank-line.js'\n/** @type {Construct} */\n\nexport const htmlFlow = {\n  name: 'htmlFlow',\n  tokenize: tokenizeHtmlFlow,\n  resolveTo: resolveToHtmlFlow,\n  concrete: true\n}\n/** @type {Construct} */\n\nconst nextBlankConstruct = {\n  tokenize: tokenizeNextBlank,\n  partial: true\n}\n/** @type {Resolver} */\n\nfunction resolveToHtmlFlow(events) {\n  let index = events.length\n\n  while (index--) {\n    if (events[index][0] === 'enter' && events[index][1].type === 'htmlFlow') {\n      break\n    }\n  }\n\n  if (index > 1 && events[index - 2][1].type === 'linePrefix') {\n    // Add the prefix start to the HTML token.\n    events[index][1].start = events[index - 2][1].start // Add the prefix start to the HTML line token.\n\n    events[index + 1][1].start = events[index - 2][1].start // Remove the line prefix.\n\n    events.splice(index - 2, 2)\n  }\n\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeHtmlFlow(effects, ok, nok) {\n  const self = this\n  /** @type {number} */\n\n  let kind\n  /** @type {boolean} */\n\n  let startTag\n  /** @type {string} */\n\n  let buffer\n  /** @type {number} */\n\n  let index\n  /** @type {Code} */\n\n  let marker\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('htmlFlow')\n    effects.enter('htmlFlowData')\n    effects.consume(code)\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (code === 33) {\n      effects.consume(code)\n      return declarationStart\n    }\n\n    if (code === 47) {\n      effects.consume(code)\n      return tagCloseStart\n    }\n\n    if (code === 63) {\n      effects.consume(code)\n      kind = 3 // While we’re in an instruction instead of a declaration, we’re on a `?`\n      // right now, so we do need to search for `>`, similar to declarations.\n\n      return self.interrupt ? ok : continuationDeclarationInside\n    }\n\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      buffer = String.fromCharCode(code)\n      startTag = true\n      return tagName\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function declarationStart(code) {\n    if (code === 45) {\n      effects.consume(code)\n      kind = 2\n      return commentOpenInside\n    }\n\n    if (code === 91) {\n      effects.consume(code)\n      kind = 5\n      buffer = 'CDATA['\n      index = 0\n      return cdataOpenInside\n    }\n\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      kind = 4\n      return self.interrupt ? ok : continuationDeclarationInside\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function commentOpenInside(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return self.interrupt ? ok : continuationDeclarationInside\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function cdataOpenInside(code) {\n    if (code === buffer.charCodeAt(index++)) {\n      effects.consume(code)\n      return index === buffer.length\n        ? self.interrupt\n          ? ok\n          : continuation\n        : cdataOpenInside\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function tagCloseStart(code) {\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      buffer = String.fromCharCode(code)\n      return tagName\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function tagName(code) {\n    if (\n      code === null ||\n      code === 47 ||\n      code === 62 ||\n      markdownLineEndingOrSpace(code)\n    ) {\n      if (\n        code !== 47 &&\n        startTag &&\n        htmlRawNames.includes(buffer.toLowerCase())\n      ) {\n        kind = 1\n        return self.interrupt ? ok(code) : continuation(code)\n      }\n\n      if (htmlBlockNames.includes(buffer.toLowerCase())) {\n        kind = 6\n\n        if (code === 47) {\n          effects.consume(code)\n          return basicSelfClosing\n        }\n\n        return self.interrupt ? ok(code) : continuation(code)\n      }\n\n      kind = 7 // Do not support complete HTML when interrupting\n\n      return self.interrupt && !self.parser.lazy[self.now().line]\n        ? nok(code)\n        : startTag\n        ? completeAttributeNameBefore(code)\n        : completeClosingTagAfter(code)\n    }\n\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code)\n      buffer += String.fromCharCode(code)\n      return tagName\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function basicSelfClosing(code) {\n    if (code === 62) {\n      effects.consume(code)\n      return self.interrupt ? ok : continuation\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function completeClosingTagAfter(code) {\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeClosingTagAfter\n    }\n\n    return completeEnd(code)\n  }\n  /** @type {State} */\n\n  function completeAttributeNameBefore(code) {\n    if (code === 47) {\n      effects.consume(code)\n      return completeEnd\n    }\n\n    if (code === 58 || code === 95 || asciiAlpha(code)) {\n      effects.consume(code)\n      return completeAttributeName\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAttributeNameBefore\n    }\n\n    return completeEnd(code)\n  }\n  /** @type {State} */\n\n  function completeAttributeName(code) {\n    if (\n      code === 45 ||\n      code === 46 ||\n      code === 58 ||\n      code === 95 ||\n      asciiAlphanumeric(code)\n    ) {\n      effects.consume(code)\n      return completeAttributeName\n    }\n\n    return completeAttributeNameAfter(code)\n  }\n  /** @type {State} */\n\n  function completeAttributeNameAfter(code) {\n    if (code === 61) {\n      effects.consume(code)\n      return completeAttributeValueBefore\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAttributeNameAfter\n    }\n\n    return completeAttributeNameBefore(code)\n  }\n  /** @type {State} */\n\n  function completeAttributeValueBefore(code) {\n    if (\n      code === null ||\n      code === 60 ||\n      code === 61 ||\n      code === 62 ||\n      code === 96\n    ) {\n      return nok(code)\n    }\n\n    if (code === 34 || code === 39) {\n      effects.consume(code)\n      marker = code\n      return completeAttributeValueQuoted\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAttributeValueBefore\n    }\n\n    marker = null\n    return completeAttributeValueUnquoted(code)\n  }\n  /** @type {State} */\n\n  function completeAttributeValueQuoted(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return nok(code)\n    }\n\n    if (code === marker) {\n      effects.consume(code)\n      return completeAttributeValueQuotedAfter\n    }\n\n    effects.consume(code)\n    return completeAttributeValueQuoted\n  }\n  /** @type {State} */\n\n  function completeAttributeValueUnquoted(code) {\n    if (\n      code === null ||\n      code === 34 ||\n      code === 39 ||\n      code === 60 ||\n      code === 61 ||\n      code === 62 ||\n      code === 96 ||\n      markdownLineEndingOrSpace(code)\n    ) {\n      return completeAttributeNameAfter(code)\n    }\n\n    effects.consume(code)\n    return completeAttributeValueUnquoted\n  }\n  /** @type {State} */\n\n  function completeAttributeValueQuotedAfter(code) {\n    if (code === 47 || code === 62 || markdownSpace(code)) {\n      return completeAttributeNameBefore(code)\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function completeEnd(code) {\n    if (code === 62) {\n      effects.consume(code)\n      return completeAfter\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function completeAfter(code) {\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAfter\n    }\n\n    return code === null || markdownLineEnding(code)\n      ? continuation(code)\n      : nok(code)\n  }\n  /** @type {State} */\n\n  function continuation(code) {\n    if (code === 45 && kind === 2) {\n      effects.consume(code)\n      return continuationCommentInside\n    }\n\n    if (code === 60 && kind === 1) {\n      effects.consume(code)\n      return continuationRawTagOpen\n    }\n\n    if (code === 62 && kind === 4) {\n      effects.consume(code)\n      return continuationClose\n    }\n\n    if (code === 63 && kind === 3) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n\n    if (code === 93 && kind === 5) {\n      effects.consume(code)\n      return continuationCharacterDataInside\n    }\n\n    if (markdownLineEnding(code) && (kind === 6 || kind === 7)) {\n      return effects.check(\n        nextBlankConstruct,\n        continuationClose,\n        continuationAtLineEnding\n      )(code)\n    }\n\n    if (code === null || markdownLineEnding(code)) {\n      return continuationAtLineEnding(code)\n    }\n\n    effects.consume(code)\n    return continuation\n  }\n  /** @type {State} */\n\n  function continuationAtLineEnding(code) {\n    effects.exit('htmlFlowData')\n    return htmlContinueStart(code)\n  }\n  /** @type {State} */\n\n  function htmlContinueStart(code) {\n    if (code === null) {\n      return done(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      return effects.attempt(\n        {\n          tokenize: htmlLineEnd,\n          partial: true\n        },\n        htmlContinueStart,\n        done\n      )(code)\n    }\n\n    effects.enter('htmlFlowData')\n    return continuation(code)\n  }\n  /** @type {Tokenizer} */\n\n  function htmlLineEnd(effects, ok, nok) {\n    return start\n    /** @type {State} */\n\n    function start(code) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return lineStart\n    }\n    /** @type {State} */\n\n    function lineStart(code) {\n      return self.parser.lazy[self.now().line] ? nok(code) : ok(code)\n    }\n  }\n  /** @type {State} */\n\n  function continuationCommentInside(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n\n    return continuation(code)\n  }\n  /** @type {State} */\n\n  function continuationRawTagOpen(code) {\n    if (code === 47) {\n      effects.consume(code)\n      buffer = ''\n      return continuationRawEndTag\n    }\n\n    return continuation(code)\n  }\n  /** @type {State} */\n\n  function continuationRawEndTag(code) {\n    if (code === 62 && htmlRawNames.includes(buffer.toLowerCase())) {\n      effects.consume(code)\n      return continuationClose\n    }\n\n    if (asciiAlpha(code) && buffer.length < 8) {\n      effects.consume(code)\n      buffer += String.fromCharCode(code)\n      return continuationRawEndTag\n    }\n\n    return continuation(code)\n  }\n  /** @type {State} */\n\n  function continuationCharacterDataInside(code) {\n    if (code === 93) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n\n    return continuation(code)\n  }\n  /** @type {State} */\n\n  function continuationDeclarationInside(code) {\n    if (code === 62) {\n      effects.consume(code)\n      return continuationClose\n    } // More dashes.\n\n    if (code === 45 && kind === 2) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n\n    return continuation(code)\n  }\n  /** @type {State} */\n\n  function continuationClose(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('htmlFlowData')\n      return done(code)\n    }\n\n    effects.consume(code)\n    return continuationClose\n  }\n  /** @type {State} */\n\n  function done(code) {\n    effects.exit('htmlFlow')\n    return ok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeNextBlank(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.exit('htmlFlowData')\n    effects.enter('lineEndingBlank')\n    effects.consume(code)\n    effects.exit('lineEndingBlank')\n    return effects.attempt(blankLine, ok, nok)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {\n  markdownLineEnding,\n  markdownLineEndingOrSpace\n} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const codeFenced = {\n  name: 'codeFenced',\n  tokenize: tokenizeCodeFenced,\n  concrete: true\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeCodeFenced(effects, ok, nok) {\n  const self = this\n  /** @type {Construct} */\n\n  const closingFenceConstruct = {\n    tokenize: tokenizeClosingFence,\n    partial: true\n  }\n  /** @type {Construct} */\n\n  const nonLazyLine = {\n    tokenize: tokenizeNonLazyLine,\n    partial: true\n  }\n  const tail = this.events[this.events.length - 1]\n  const initialPrefix =\n    tail && tail[1].type === 'linePrefix'\n      ? tail[2].sliceSerialize(tail[1], true).length\n      : 0\n  let sizeOpen = 0\n  /** @type {NonNullable<Code>} */\n\n  let marker\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('codeFenced')\n    effects.enter('codeFencedFence')\n    effects.enter('codeFencedFenceSequence')\n    marker = code\n    return sequenceOpen(code)\n  }\n  /** @type {State} */\n\n  function sequenceOpen(code) {\n    if (code === marker) {\n      effects.consume(code)\n      sizeOpen++\n      return sequenceOpen\n    }\n\n    effects.exit('codeFencedFenceSequence')\n    return sizeOpen < 3\n      ? nok(code)\n      : factorySpace(effects, infoOpen, 'whitespace')(code)\n  }\n  /** @type {State} */\n\n  function infoOpen(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return openAfter(code)\n    }\n\n    effects.enter('codeFencedFenceInfo')\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return info(code)\n  }\n  /** @type {State} */\n\n  function info(code) {\n    if (code === null || markdownLineEndingOrSpace(code)) {\n      effects.exit('chunkString')\n      effects.exit('codeFencedFenceInfo')\n      return factorySpace(effects, infoAfter, 'whitespace')(code)\n    }\n\n    if (code === 96 && code === marker) return nok(code)\n    effects.consume(code)\n    return info\n  }\n  /** @type {State} */\n\n  function infoAfter(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return openAfter(code)\n    }\n\n    effects.enter('codeFencedFenceMeta')\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return meta(code)\n  }\n  /** @type {State} */\n\n  function meta(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('chunkString')\n      effects.exit('codeFencedFenceMeta')\n      return openAfter(code)\n    }\n\n    if (code === 96 && code === marker) return nok(code)\n    effects.consume(code)\n    return meta\n  }\n  /** @type {State} */\n\n  function openAfter(code) {\n    effects.exit('codeFencedFence')\n    return self.interrupt ? ok(code) : contentStart(code)\n  }\n  /** @type {State} */\n\n  function contentStart(code) {\n    if (code === null) {\n      return after(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      return effects.attempt(\n        nonLazyLine,\n        effects.attempt(\n          closingFenceConstruct,\n          after,\n          initialPrefix\n            ? factorySpace(\n                effects,\n                contentStart,\n                'linePrefix',\n                initialPrefix + 1\n              )\n            : contentStart\n        ),\n        after\n      )(code)\n    }\n\n    effects.enter('codeFlowValue')\n    return contentContinue(code)\n  }\n  /** @type {State} */\n\n  function contentContinue(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('codeFlowValue')\n      return contentStart(code)\n    }\n\n    effects.consume(code)\n    return contentContinue\n  }\n  /** @type {State} */\n\n  function after(code) {\n    effects.exit('codeFenced')\n    return ok(code)\n  }\n  /** @type {Tokenizer} */\n\n  function tokenizeNonLazyLine(effects, ok, nok) {\n    const self = this\n    return start\n    /** @type {State} */\n\n    function start(code) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return lineStart\n    }\n    /** @type {State} */\n\n    function lineStart(code) {\n      return self.parser.lazy[self.now().line] ? nok(code) : ok(code)\n    }\n  }\n  /** @type {Tokenizer} */\n\n  function tokenizeClosingFence(effects, ok, nok) {\n    let size = 0\n    return factorySpace(\n      effects,\n      closingSequenceStart,\n      'linePrefix',\n      this.parser.constructs.disable.null.includes('codeIndented')\n        ? undefined\n        : 4\n    )\n    /** @type {State} */\n\n    function closingSequenceStart(code) {\n      effects.enter('codeFencedFence')\n      effects.enter('codeFencedFenceSequence')\n      return closingSequence(code)\n    }\n    /** @type {State} */\n\n    function closingSequence(code) {\n      if (code === marker) {\n        effects.consume(code)\n        size++\n        return closingSequence\n      }\n\n      if (size < sizeOpen) return nok(code)\n      effects.exit('codeFencedFenceSequence')\n      return factorySpace(effects, closingSequenceEnd, 'whitespace')(code)\n    }\n    /** @type {State} */\n\n    function closingSequenceEnd(code) {\n      if (code === null || markdownLineEnding(code)) {\n        effects.exit('codeFencedFence')\n        return ok(code)\n      }\n\n      return nok(code)\n    }\n  }\n}\n","/**\n * Map of named character references.\n *\n * @type {Record<string, string>}\n */\nexport const characterEntities = {\n  AElig: 'Æ',\n  AMP: '&',\n  Aacute: 'Á',\n  Abreve: 'Ă',\n  Acirc: 'Â',\n  Acy: 'А',\n  Afr: '𝔄',\n  Agrave: 'À',\n  Alpha: 'Α',\n  Amacr: 'Ā',\n  And: '⩓',\n  Aogon: 'Ą',\n  Aopf: '𝔸',\n  ApplyFunction: '⁡',\n  Aring: 'Å',\n  Ascr: '𝒜',\n  Assign: '≔',\n  Atilde: 'Ã',\n  Auml: 'Ä',\n  Backslash: '∖',\n  Barv: '⫧',\n  Barwed: '⌆',\n  Bcy: 'Б',\n  Because: '∵',\n  Bernoullis: 'ℬ',\n  Beta: 'Β',\n  Bfr: '𝔅',\n  Bopf: '𝔹',\n  Breve: '˘',\n  Bscr: 'ℬ',\n  Bumpeq: '≎',\n  CHcy: 'Ч',\n  COPY: '©',\n  Cacute: 'Ć',\n  Cap: '⋒',\n  CapitalDifferentialD: 'ⅅ',\n  Cayleys: 'ℭ',\n  Ccaron: 'Č',\n  Ccedil: 'Ç',\n  Ccirc: 'Ĉ',\n  Cconint: '∰',\n  Cdot: 'Ċ',\n  Cedilla: '¸',\n  CenterDot: '·',\n  Cfr: 'ℭ',\n  Chi: 'Χ',\n  CircleDot: '⊙',\n  CircleMinus: '⊖',\n  CirclePlus: '⊕',\n  CircleTimes: '⊗',\n  ClockwiseContourIntegral: '∲',\n  CloseCurlyDoubleQuote: '”',\n  CloseCurlyQuote: '’',\n  Colon: '∷',\n  Colone: '⩴',\n  Congruent: '≡',\n  Conint: '∯',\n  ContourIntegral: '∮',\n  Copf: 'ℂ',\n  Coproduct: '∐',\n  CounterClockwiseContourIntegral: '∳',\n  Cross: '⨯',\n  Cscr: '𝒞',\n  Cup: '⋓',\n  CupCap: '≍',\n  DD: 'ⅅ',\n  DDotrahd: '⤑',\n  DJcy: 'Ђ',\n  DScy: 'Ѕ',\n  DZcy: 'Џ',\n  Dagger: '‡',\n  Darr: '↡',\n  Dashv: '⫤',\n  Dcaron: 'Ď',\n  Dcy: 'Д',\n  Del: '∇',\n  Delta: 'Δ',\n  Dfr: '𝔇',\n  DiacriticalAcute: '´',\n  DiacriticalDot: '˙',\n  DiacriticalDoubleAcute: '˝',\n  DiacriticalGrave: '`',\n  DiacriticalTilde: '˜',\n  Diamond: '⋄',\n  DifferentialD: 'ⅆ',\n  Dopf: '𝔻',\n  Dot: '¨',\n  DotDot: '⃜',\n  DotEqual: '≐',\n  DoubleContourIntegral: '∯',\n  DoubleDot: '¨',\n  DoubleDownArrow: '⇓',\n  DoubleLeftArrow: '⇐',\n  DoubleLeftRightArrow: '⇔',\n  DoubleLeftTee: '⫤',\n  DoubleLongLeftArrow: '⟸',\n  DoubleLongLeftRightArrow: '⟺',\n  DoubleLongRightArrow: '⟹',\n  DoubleRightArrow: '⇒',\n  DoubleRightTee: '⊨',\n  DoubleUpArrow: '⇑',\n  DoubleUpDownArrow: '⇕',\n  DoubleVerticalBar: '∥',\n  DownArrow: '↓',\n  DownArrowBar: '⤓',\n  DownArrowUpArrow: '⇵',\n  DownBreve: '̑',\n  DownLeftRightVector: '⥐',\n  DownLeftTeeVector: '⥞',\n  DownLeftVector: '↽',\n  DownLeftVectorBar: '⥖',\n  DownRightTeeVector: '⥟',\n  DownRightVector: '⇁',\n  DownRightVectorBar: '⥗',\n  DownTee: '⊤',\n  DownTeeArrow: '↧',\n  Downarrow: '⇓',\n  Dscr: '𝒟',\n  Dstrok: 'Đ',\n  ENG: 'Ŋ',\n  ETH: 'Ð',\n  Eacute: 'É',\n  Ecaron: 'Ě',\n  Ecirc: 'Ê',\n  Ecy: 'Э',\n  Edot: 'Ė',\n  Efr: '𝔈',\n  Egrave: 'È',\n  Element: '∈',\n  Emacr: 'Ē',\n  EmptySmallSquare: '◻',\n  EmptyVerySmallSquare: '▫',\n  Eogon: 'Ę',\n  Eopf: '𝔼',\n  Epsilon: 'Ε',\n  Equal: '⩵',\n  EqualTilde: '≂',\n  Equilibrium: '⇌',\n  Escr: 'ℰ',\n  Esim: '⩳',\n  Eta: 'Η',\n  Euml: 'Ë',\n  Exists: '∃',\n  ExponentialE: 'ⅇ',\n  Fcy: 'Ф',\n  Ffr: '𝔉',\n  FilledSmallSquare: '◼',\n  FilledVerySmallSquare: '▪',\n  Fopf: '𝔽',\n  ForAll: '∀',\n  Fouriertrf: 'ℱ',\n  Fscr: 'ℱ',\n  GJcy: 'Ѓ',\n  GT: '>',\n  Gamma: 'Γ',\n  Gammad: 'Ϝ',\n  Gbreve: 'Ğ',\n  Gcedil: 'Ģ',\n  Gcirc: 'Ĝ',\n  Gcy: 'Г',\n  Gdot: 'Ġ',\n  Gfr: '𝔊',\n  Gg: '⋙',\n  Gopf: '𝔾',\n  GreaterEqual: '≥',\n  GreaterEqualLess: '⋛',\n  GreaterFullEqual: '≧',\n  GreaterGreater: '⪢',\n  GreaterLess: '≷',\n  GreaterSlantEqual: '⩾',\n  GreaterTilde: '≳',\n  Gscr: '𝒢',\n  Gt: '≫',\n  HARDcy: 'Ъ',\n  Hacek: 'ˇ',\n  Hat: '^',\n  Hcirc: 'Ĥ',\n  Hfr: 'ℌ',\n  HilbertSpace: 'ℋ',\n  Hopf: 'ℍ',\n  HorizontalLine: '─',\n  Hscr: 'ℋ',\n  Hstrok: 'Ħ',\n  HumpDownHump: '≎',\n  HumpEqual: '≏',\n  IEcy: 'Е',\n  IJlig: 'Ĳ',\n  IOcy: 'Ё',\n  Iacute: 'Í',\n  Icirc: 'Î',\n  Icy: 'И',\n  Idot: 'İ',\n  Ifr: 'ℑ',\n  Igrave: 'Ì',\n  Im: 'ℑ',\n  Imacr: 'Ī',\n  ImaginaryI: 'ⅈ',\n  Implies: '⇒',\n  Int: '∬',\n  Integral: '∫',\n  Intersection: '⋂',\n  InvisibleComma: '⁣',\n  InvisibleTimes: '⁢',\n  Iogon: 'Į',\n  Iopf: '𝕀',\n  Iota: 'Ι',\n  Iscr: 'ℐ',\n  Itilde: 'Ĩ',\n  Iukcy: 'І',\n  Iuml: 'Ï',\n  Jcirc: 'Ĵ',\n  Jcy: 'Й',\n  Jfr: '𝔍',\n  Jopf: '𝕁',\n  Jscr: '𝒥',\n  Jsercy: 'Ј',\n  Jukcy: 'Є',\n  KHcy: 'Х',\n  KJcy: 'Ќ',\n  Kappa: 'Κ',\n  Kcedil: 'Ķ',\n  Kcy: 'К',\n  Kfr: '𝔎',\n  Kopf: '𝕂',\n  Kscr: '𝒦',\n  LJcy: 'Љ',\n  LT: '<',\n  Lacute: 'Ĺ',\n  Lambda: 'Λ',\n  Lang: '⟪',\n  Laplacetrf: 'ℒ',\n  Larr: '↞',\n  Lcaron: 'Ľ',\n  Lcedil: 'Ļ',\n  Lcy: 'Л',\n  LeftAngleBracket: '⟨',\n  LeftArrow: '←',\n  LeftArrowBar: '⇤',\n  LeftArrowRightArrow: '⇆',\n  LeftCeiling: '⌈',\n  LeftDoubleBracket: '⟦',\n  LeftDownTeeVector: '⥡',\n  LeftDownVector: '⇃',\n  LeftDownVectorBar: '⥙',\n  LeftFloor: '⌊',\n  LeftRightArrow: '↔',\n  LeftRightVector: '⥎',\n  LeftTee: '⊣',\n  LeftTeeArrow: '↤',\n  LeftTeeVector: '⥚',\n  LeftTriangle: '⊲',\n  LeftTriangleBar: '⧏',\n  LeftTriangleEqual: '⊴',\n  LeftUpDownVector: '⥑',\n  LeftUpTeeVector: '⥠',\n  LeftUpVector: '↿',\n  LeftUpVectorBar: '⥘',\n  LeftVector: '↼',\n  LeftVectorBar: '⥒',\n  Leftarrow: '⇐',\n  Leftrightarrow: '⇔',\n  LessEqualGreater: '⋚',\n  LessFullEqual: '≦',\n  LessGreater: '≶',\n  LessLess: '⪡',\n  LessSlantEqual: '⩽',\n  LessTilde: '≲',\n  Lfr: '𝔏',\n  Ll: '⋘',\n  Lleftarrow: '⇚',\n  Lmidot: 'Ŀ',\n  LongLeftArrow: '⟵',\n  LongLeftRightArrow: '⟷',\n  LongRightArrow: '⟶',\n  Longleftarrow: '⟸',\n  Longleftrightarrow: '⟺',\n  Longrightarrow: '⟹',\n  Lopf: '𝕃',\n  LowerLeftArrow: '↙',\n  LowerRightArrow: '↘',\n  Lscr: 'ℒ',\n  Lsh: '↰',\n  Lstrok: 'Ł',\n  Lt: '≪',\n  Map: '⤅',\n  Mcy: 'М',\n  MediumSpace: ' ',\n  Mellintrf: 'ℳ',\n  Mfr: '𝔐',\n  MinusPlus: '∓',\n  Mopf: '𝕄',\n  Mscr: 'ℳ',\n  Mu: 'Μ',\n  NJcy: 'Њ',\n  Nacute: 'Ń',\n  Ncaron: 'Ň',\n  Ncedil: 'Ņ',\n  Ncy: 'Н',\n  NegativeMediumSpace: '​',\n  NegativeThickSpace: '​',\n  NegativeThinSpace: '​',\n  NegativeVeryThinSpace: '​',\n  NestedGreaterGreater: '≫',\n  NestedLessLess: '≪',\n  NewLine: '\\n',\n  Nfr: '𝔑',\n  NoBreak: '⁠',\n  NonBreakingSpace: ' ',\n  Nopf: 'ℕ',\n  Not: '⫬',\n  NotCongruent: '≢',\n  NotCupCap: '≭',\n  NotDoubleVerticalBar: '∦',\n  NotElement: '∉',\n  NotEqual: '≠',\n  NotEqualTilde: '≂̸',\n  NotExists: '∄',\n  NotGreater: '≯',\n  NotGreaterEqual: '≱',\n  NotGreaterFullEqual: '≧̸',\n  NotGreaterGreater: '≫̸',\n  NotGreaterLess: '≹',\n  NotGreaterSlantEqual: '⩾̸',\n  NotGreaterTilde: '≵',\n  NotHumpDownHump: '≎̸',\n  NotHumpEqual: '≏̸',\n  NotLeftTriangle: '⋪',\n  NotLeftTriangleBar: '⧏̸',\n  NotLeftTriangleEqual: '⋬',\n  NotLess: '≮',\n  NotLessEqual: '≰',\n  NotLessGreater: '≸',\n  NotLessLess: '≪̸',\n  NotLessSlantEqual: '⩽̸',\n  NotLessTilde: '≴',\n  NotNestedGreaterGreater: '⪢̸',\n  NotNestedLessLess: '⪡̸',\n  NotPrecedes: '⊀',\n  NotPrecedesEqual: '⪯̸',\n  NotPrecedesSlantEqual: '⋠',\n  NotReverseElement: '∌',\n  NotRightTriangle: '⋫',\n  NotRightTriangleBar: '⧐̸',\n  NotRightTriangleEqual: '⋭',\n  NotSquareSubset: '⊏̸',\n  NotSquareSubsetEqual: '⋢',\n  NotSquareSuperset: '⊐̸',\n  NotSquareSupersetEqual: '⋣',\n  NotSubset: '⊂⃒',\n  NotSubsetEqual: '⊈',\n  NotSucceeds: '⊁',\n  NotSucceedsEqual: '⪰̸',\n  NotSucceedsSlantEqual: '⋡',\n  NotSucceedsTilde: '≿̸',\n  NotSuperset: '⊃⃒',\n  NotSupersetEqual: '⊉',\n  NotTilde: '≁',\n  NotTildeEqual: '≄',\n  NotTildeFullEqual: '≇',\n  NotTildeTilde: '≉',\n  NotVerticalBar: '∤',\n  Nscr: '𝒩',\n  Ntilde: 'Ñ',\n  Nu: 'Ν',\n  OElig: 'Œ',\n  Oacute: 'Ó',\n  Ocirc: 'Ô',\n  Ocy: 'О',\n  Odblac: 'Ő',\n  Ofr: '𝔒',\n  Ograve: 'Ò',\n  Omacr: 'Ō',\n  Omega: 'Ω',\n  Omicron: 'Ο',\n  Oopf: '𝕆',\n  OpenCurlyDoubleQuote: '“',\n  OpenCurlyQuote: '‘',\n  Or: '⩔',\n  Oscr: '𝒪',\n  Oslash: 'Ø',\n  Otilde: 'Õ',\n  Otimes: '⨷',\n  Ouml: 'Ö',\n  OverBar: '‾',\n  OverBrace: '⏞',\n  OverBracket: '⎴',\n  OverParenthesis: '⏜',\n  PartialD: '∂',\n  Pcy: 'П',\n  Pfr: '𝔓',\n  Phi: 'Φ',\n  Pi: 'Π',\n  PlusMinus: '±',\n  Poincareplane: 'ℌ',\n  Popf: 'ℙ',\n  Pr: '⪻',\n  Precedes: '≺',\n  PrecedesEqual: '⪯',\n  PrecedesSlantEqual: '≼',\n  PrecedesTilde: '≾',\n  Prime: '″',\n  Product: '∏',\n  Proportion: '∷',\n  Proportional: '∝',\n  Pscr: '𝒫',\n  Psi: 'Ψ',\n  QUOT: '\"',\n  Qfr: '𝔔',\n  Qopf: 'ℚ',\n  Qscr: '𝒬',\n  RBarr: '⤐',\n  REG: '®',\n  Racute: 'Ŕ',\n  Rang: '⟫',\n  Rarr: '↠',\n  Rarrtl: '⤖',\n  Rcaron: 'Ř',\n  Rcedil: 'Ŗ',\n  Rcy: 'Р',\n  Re: 'ℜ',\n  ReverseElement: '∋',\n  ReverseEquilibrium: '⇋',\n  ReverseUpEquilibrium: '⥯',\n  Rfr: 'ℜ',\n  Rho: 'Ρ',\n  RightAngleBracket: '⟩',\n  RightArrow: '→',\n  RightArrowBar: '⇥',\n  RightArrowLeftArrow: '⇄',\n  RightCeiling: '⌉',\n  RightDoubleBracket: '⟧',\n  RightDownTeeVector: '⥝',\n  RightDownVector: '⇂',\n  RightDownVectorBar: '⥕',\n  RightFloor: '⌋',\n  RightTee: '⊢',\n  RightTeeArrow: '↦',\n  RightTeeVector: '⥛',\n  RightTriangle: '⊳',\n  RightTriangleBar: '⧐',\n  RightTriangleEqual: '⊵',\n  RightUpDownVector: '⥏',\n  RightUpTeeVector: '⥜',\n  RightUpVector: '↾',\n  RightUpVectorBar: '⥔',\n  RightVector: '⇀',\n  RightVectorBar: '⥓',\n  Rightarrow: '⇒',\n  Ropf: 'ℝ',\n  RoundImplies: '⥰',\n  Rrightarrow: '⇛',\n  Rscr: 'ℛ',\n  Rsh: '↱',\n  RuleDelayed: '⧴',\n  SHCHcy: 'Щ',\n  SHcy: 'Ш',\n  SOFTcy: 'Ь',\n  Sacute: 'Ś',\n  Sc: '⪼',\n  Scaron: 'Š',\n  Scedil: 'Ş',\n  Scirc: 'Ŝ',\n  Scy: 'С',\n  Sfr: '𝔖',\n  ShortDownArrow: '↓',\n  ShortLeftArrow: '←',\n  ShortRightArrow: '→',\n  ShortUpArrow: '↑',\n  Sigma: 'Σ',\n  SmallCircle: '∘',\n  Sopf: '𝕊',\n  Sqrt: '√',\n  Square: '□',\n  SquareIntersection: '⊓',\n  SquareSubset: '⊏',\n  SquareSubsetEqual: '⊑',\n  SquareSuperset: '⊐',\n  SquareSupersetEqual: '⊒',\n  SquareUnion: '⊔',\n  Sscr: '𝒮',\n  Star: '⋆',\n  Sub: '⋐',\n  Subset: '⋐',\n  SubsetEqual: '⊆',\n  Succeeds: '≻',\n  SucceedsEqual: '⪰',\n  SucceedsSlantEqual: '≽',\n  SucceedsTilde: '≿',\n  SuchThat: '∋',\n  Sum: '∑',\n  Sup: '⋑',\n  Superset: '⊃',\n  SupersetEqual: '⊇',\n  Supset: '⋑',\n  THORN: 'Þ',\n  TRADE: '™',\n  TSHcy: 'Ћ',\n  TScy: 'Ц',\n  Tab: '\\t',\n  Tau: 'Τ',\n  Tcaron: 'Ť',\n  Tcedil: 'Ţ',\n  Tcy: 'Т',\n  Tfr: '𝔗',\n  Therefore: '∴',\n  Theta: 'Θ',\n  ThickSpace: '  ',\n  ThinSpace: ' ',\n  Tilde: '∼',\n  TildeEqual: '≃',\n  TildeFullEqual: '≅',\n  TildeTilde: '≈',\n  Topf: '𝕋',\n  TripleDot: '⃛',\n  Tscr: '𝒯',\n  Tstrok: 'Ŧ',\n  Uacute: 'Ú',\n  Uarr: '↟',\n  Uarrocir: '⥉',\n  Ubrcy: 'Ў',\n  Ubreve: 'Ŭ',\n  Ucirc: 'Û',\n  Ucy: 'У',\n  Udblac: 'Ű',\n  Ufr: '𝔘',\n  Ugrave: 'Ù',\n  Umacr: 'Ū',\n  UnderBar: '_',\n  UnderBrace: '⏟',\n  UnderBracket: '⎵',\n  UnderParenthesis: '⏝',\n  Union: '⋃',\n  UnionPlus: '⊎',\n  Uogon: 'Ų',\n  Uopf: '𝕌',\n  UpArrow: '↑',\n  UpArrowBar: '⤒',\n  UpArrowDownArrow: '⇅',\n  UpDownArrow: '↕',\n  UpEquilibrium: '⥮',\n  UpTee: '⊥',\n  UpTeeArrow: '↥',\n  Uparrow: '⇑',\n  Updownarrow: '⇕',\n  UpperLeftArrow: '↖',\n  UpperRightArrow: '↗',\n  Upsi: 'ϒ',\n  Upsilon: 'Υ',\n  Uring: 'Ů',\n  Uscr: '𝒰',\n  Utilde: 'Ũ',\n  Uuml: 'Ü',\n  VDash: '⊫',\n  Vbar: '⫫',\n  Vcy: 'В',\n  Vdash: '⊩',\n  Vdashl: '⫦',\n  Vee: '⋁',\n  Verbar: '‖',\n  Vert: '‖',\n  VerticalBar: '∣',\n  VerticalLine: '|',\n  VerticalSeparator: '❘',\n  VerticalTilde: '≀',\n  VeryThinSpace: ' ',\n  Vfr: '𝔙',\n  Vopf: '𝕍',\n  Vscr: '𝒱',\n  Vvdash: '⊪',\n  Wcirc: 'Ŵ',\n  Wedge: '⋀',\n  Wfr: '𝔚',\n  Wopf: '𝕎',\n  Wscr: '𝒲',\n  Xfr: '𝔛',\n  Xi: 'Ξ',\n  Xopf: '𝕏',\n  Xscr: '𝒳',\n  YAcy: 'Я',\n  YIcy: 'Ї',\n  YUcy: 'Ю',\n  Yacute: 'Ý',\n  Ycirc: 'Ŷ',\n  Ycy: 'Ы',\n  Yfr: '𝔜',\n  Yopf: '𝕐',\n  Yscr: '𝒴',\n  Yuml: 'Ÿ',\n  ZHcy: 'Ж',\n  Zacute: 'Ź',\n  Zcaron: 'Ž',\n  Zcy: 'З',\n  Zdot: 'Ż',\n  ZeroWidthSpace: '​',\n  Zeta: 'Ζ',\n  Zfr: 'ℨ',\n  Zopf: 'ℤ',\n  Zscr: '𝒵',\n  aacute: 'á',\n  abreve: 'ă',\n  ac: '∾',\n  acE: '∾̳',\n  acd: '∿',\n  acirc: 'â',\n  acute: '´',\n  acy: 'а',\n  aelig: 'æ',\n  af: '⁡',\n  afr: '𝔞',\n  agrave: 'à',\n  alefsym: 'ℵ',\n  aleph: 'ℵ',\n  alpha: 'α',\n  amacr: 'ā',\n  amalg: '⨿',\n  amp: '&',\n  and: '∧',\n  andand: '⩕',\n  andd: '⩜',\n  andslope: '⩘',\n  andv: '⩚',\n  ang: '∠',\n  ange: '⦤',\n  angle: '∠',\n  angmsd: '∡',\n  angmsdaa: '⦨',\n  angmsdab: '⦩',\n  angmsdac: '⦪',\n  angmsdad: '⦫',\n  angmsdae: '⦬',\n  angmsdaf: '⦭',\n  angmsdag: '⦮',\n  angmsdah: '⦯',\n  angrt: '∟',\n  angrtvb: '⊾',\n  angrtvbd: '⦝',\n  angsph: '∢',\n  angst: 'Å',\n  angzarr: '⍼',\n  aogon: 'ą',\n  aopf: '𝕒',\n  ap: '≈',\n  apE: '⩰',\n  apacir: '⩯',\n  ape: '≊',\n  apid: '≋',\n  apos: \"'\",\n  approx: '≈',\n  approxeq: '≊',\n  aring: 'å',\n  ascr: '𝒶',\n  ast: '*',\n  asymp: '≈',\n  asympeq: '≍',\n  atilde: 'ã',\n  auml: 'ä',\n  awconint: '∳',\n  awint: '⨑',\n  bNot: '⫭',\n  backcong: '≌',\n  backepsilon: '϶',\n  backprime: '‵',\n  backsim: '∽',\n  backsimeq: '⋍',\n  barvee: '⊽',\n  barwed: '⌅',\n  barwedge: '⌅',\n  bbrk: '⎵',\n  bbrktbrk: '⎶',\n  bcong: '≌',\n  bcy: 'б',\n  bdquo: '„',\n  becaus: '∵',\n  because: '∵',\n  bemptyv: '⦰',\n  bepsi: '϶',\n  bernou: 'ℬ',\n  beta: 'β',\n  beth: 'ℶ',\n  between: '≬',\n  bfr: '𝔟',\n  bigcap: '⋂',\n  bigcirc: '◯',\n  bigcup: '⋃',\n  bigodot: '⨀',\n  bigoplus: '⨁',\n  bigotimes: '⨂',\n  bigsqcup: '⨆',\n  bigstar: '★',\n  bigtriangledown: '▽',\n  bigtriangleup: '△',\n  biguplus: '⨄',\n  bigvee: '⋁',\n  bigwedge: '⋀',\n  bkarow: '⤍',\n  blacklozenge: '⧫',\n  blacksquare: '▪',\n  blacktriangle: '▴',\n  blacktriangledown: '▾',\n  blacktriangleleft: '◂',\n  blacktriangleright: '▸',\n  blank: '␣',\n  blk12: '▒',\n  blk14: '░',\n  blk34: '▓',\n  block: '█',\n  bne: '=⃥',\n  bnequiv: '≡⃥',\n  bnot: '⌐',\n  bopf: '𝕓',\n  bot: '⊥',\n  bottom: '⊥',\n  bowtie: '⋈',\n  boxDL: '╗',\n  boxDR: '╔',\n  boxDl: '╖',\n  boxDr: '╓',\n  boxH: '═',\n  boxHD: '╦',\n  boxHU: '╩',\n  boxHd: '╤',\n  boxHu: '╧',\n  boxUL: '╝',\n  boxUR: '╚',\n  boxUl: '╜',\n  boxUr: '╙',\n  boxV: '║',\n  boxVH: '╬',\n  boxVL: '╣',\n  boxVR: '╠',\n  boxVh: '╫',\n  boxVl: '╢',\n  boxVr: '╟',\n  boxbox: '⧉',\n  boxdL: '╕',\n  boxdR: '╒',\n  boxdl: '┐',\n  boxdr: '┌',\n  boxh: '─',\n  boxhD: '╥',\n  boxhU: '╨',\n  boxhd: '┬',\n  boxhu: '┴',\n  boxminus: '⊟',\n  boxplus: '⊞',\n  boxtimes: '⊠',\n  boxuL: '╛',\n  boxuR: '╘',\n  boxul: '┘',\n  boxur: '└',\n  boxv: '│',\n  boxvH: '╪',\n  boxvL: '╡',\n  boxvR: '╞',\n  boxvh: '┼',\n  boxvl: '┤',\n  boxvr: '├',\n  bprime: '‵',\n  breve: '˘',\n  brvbar: '¦',\n  bscr: '𝒷',\n  bsemi: '⁏',\n  bsim: '∽',\n  bsime: '⋍',\n  bsol: '\\\\',\n  bsolb: '⧅',\n  bsolhsub: '⟈',\n  bull: '•',\n  bullet: '•',\n  bump: '≎',\n  bumpE: '⪮',\n  bumpe: '≏',\n  bumpeq: '≏',\n  cacute: 'ć',\n  cap: '∩',\n  capand: '⩄',\n  capbrcup: '⩉',\n  capcap: '⩋',\n  capcup: '⩇',\n  capdot: '⩀',\n  caps: '∩︀',\n  caret: '⁁',\n  caron: 'ˇ',\n  ccaps: '⩍',\n  ccaron: 'č',\n  ccedil: 'ç',\n  ccirc: 'ĉ',\n  ccups: '⩌',\n  ccupssm: '⩐',\n  cdot: 'ċ',\n  cedil: '¸',\n  cemptyv: '⦲',\n  cent: '¢',\n  centerdot: '·',\n  cfr: '𝔠',\n  chcy: 'ч',\n  check: '✓',\n  checkmark: '✓',\n  chi: 'χ',\n  cir: '○',\n  cirE: '⧃',\n  circ: 'ˆ',\n  circeq: '≗',\n  circlearrowleft: '↺',\n  circlearrowright: '↻',\n  circledR: '®',\n  circledS: 'Ⓢ',\n  circledast: '⊛',\n  circledcirc: '⊚',\n  circleddash: '⊝',\n  cire: '≗',\n  cirfnint: '⨐',\n  cirmid: '⫯',\n  cirscir: '⧂',\n  clubs: '♣',\n  clubsuit: '♣',\n  colon: ':',\n  colone: '≔',\n  coloneq: '≔',\n  comma: ',',\n  commat: '@',\n  comp: '∁',\n  compfn: '∘',\n  complement: '∁',\n  complexes: 'ℂ',\n  cong: '≅',\n  congdot: '⩭',\n  conint: '∮',\n  copf: '𝕔',\n  coprod: '∐',\n  copy: '©',\n  copysr: '℗',\n  crarr: '↵',\n  cross: '✗',\n  cscr: '𝒸',\n  csub: '⫏',\n  csube: '⫑',\n  csup: '⫐',\n  csupe: '⫒',\n  ctdot: '⋯',\n  cudarrl: '⤸',\n  cudarrr: '⤵',\n  cuepr: '⋞',\n  cuesc: '⋟',\n  cularr: '↶',\n  cularrp: '⤽',\n  cup: '∪',\n  cupbrcap: '⩈',\n  cupcap: '⩆',\n  cupcup: '⩊',\n  cupdot: '⊍',\n  cupor: '⩅',\n  cups: '∪︀',\n  curarr: '↷',\n  curarrm: '⤼',\n  curlyeqprec: '⋞',\n  curlyeqsucc: '⋟',\n  curlyvee: '⋎',\n  curlywedge: '⋏',\n  curren: '¤',\n  curvearrowleft: '↶',\n  curvearrowright: '↷',\n  cuvee: '⋎',\n  cuwed: '⋏',\n  cwconint: '∲',\n  cwint: '∱',\n  cylcty: '⌭',\n  dArr: '⇓',\n  dHar: '⥥',\n  dagger: '†',\n  daleth: 'ℸ',\n  darr: '↓',\n  dash: '‐',\n  dashv: '⊣',\n  dbkarow: '⤏',\n  dblac: '˝',\n  dcaron: 'ď',\n  dcy: 'д',\n  dd: 'ⅆ',\n  ddagger: '‡',\n  ddarr: '⇊',\n  ddotseq: '⩷',\n  deg: '°',\n  delta: 'δ',\n  demptyv: '⦱',\n  dfisht: '⥿',\n  dfr: '𝔡',\n  dharl: '⇃',\n  dharr: '⇂',\n  diam: '⋄',\n  diamond: '⋄',\n  diamondsuit: '♦',\n  diams: '♦',\n  die: '¨',\n  digamma: 'ϝ',\n  disin: '⋲',\n  div: '÷',\n  divide: '÷',\n  divideontimes: '⋇',\n  divonx: '⋇',\n  djcy: 'ђ',\n  dlcorn: '⌞',\n  dlcrop: '⌍',\n  dollar: '$',\n  dopf: '𝕕',\n  dot: '˙',\n  doteq: '≐',\n  doteqdot: '≑',\n  dotminus: '∸',\n  dotplus: '∔',\n  dotsquare: '⊡',\n  doublebarwedge: '⌆',\n  downarrow: '↓',\n  downdownarrows: '⇊',\n  downharpoonleft: '⇃',\n  downharpoonright: '⇂',\n  drbkarow: '⤐',\n  drcorn: '⌟',\n  drcrop: '⌌',\n  dscr: '𝒹',\n  dscy: 'ѕ',\n  dsol: '⧶',\n  dstrok: 'đ',\n  dtdot: '⋱',\n  dtri: '▿',\n  dtrif: '▾',\n  duarr: '⇵',\n  duhar: '⥯',\n  dwangle: '⦦',\n  dzcy: 'џ',\n  dzigrarr: '⟿',\n  eDDot: '⩷',\n  eDot: '≑',\n  eacute: 'é',\n  easter: '⩮',\n  ecaron: 'ě',\n  ecir: '≖',\n  ecirc: 'ê',\n  ecolon: '≕',\n  ecy: 'э',\n  edot: 'ė',\n  ee: 'ⅇ',\n  efDot: '≒',\n  efr: '𝔢',\n  eg: '⪚',\n  egrave: 'è',\n  egs: '⪖',\n  egsdot: '⪘',\n  el: '⪙',\n  elinters: '⏧',\n  ell: 'ℓ',\n  els: '⪕',\n  elsdot: '⪗',\n  emacr: 'ē',\n  empty: '∅',\n  emptyset: '∅',\n  emptyv: '∅',\n  emsp13: ' ',\n  emsp14: ' ',\n  emsp: ' ',\n  eng: 'ŋ',\n  ensp: ' ',\n  eogon: 'ę',\n  eopf: '𝕖',\n  epar: '⋕',\n  eparsl: '⧣',\n  eplus: '⩱',\n  epsi: 'ε',\n  epsilon: 'ε',\n  epsiv: 'ϵ',\n  eqcirc: '≖',\n  eqcolon: '≕',\n  eqsim: '≂',\n  eqslantgtr: '⪖',\n  eqslantless: '⪕',\n  equals: '=',\n  equest: '≟',\n  equiv: '≡',\n  equivDD: '⩸',\n  eqvparsl: '⧥',\n  erDot: '≓',\n  erarr: '⥱',\n  escr: 'ℯ',\n  esdot: '≐',\n  esim: '≂',\n  eta: 'η',\n  eth: 'ð',\n  euml: 'ë',\n  euro: '€',\n  excl: '!',\n  exist: '∃',\n  expectation: 'ℰ',\n  exponentiale: 'ⅇ',\n  fallingdotseq: '≒',\n  fcy: 'ф',\n  female: '♀',\n  ffilig: 'ﬃ',\n  fflig: 'ﬀ',\n  ffllig: 'ﬄ',\n  ffr: '𝔣',\n  filig: 'ﬁ',\n  fjlig: 'fj',\n  flat: '♭',\n  fllig: 'ﬂ',\n  fltns: '▱',\n  fnof: 'ƒ',\n  fopf: '𝕗',\n  forall: '∀',\n  fork: '⋔',\n  forkv: '⫙',\n  fpartint: '⨍',\n  frac12: '½',\n  frac13: '⅓',\n  frac14: '¼',\n  frac15: '⅕',\n  frac16: '⅙',\n  frac18: '⅛',\n  frac23: '⅔',\n  frac25: '⅖',\n  frac34: '¾',\n  frac35: '⅗',\n  frac38: '⅜',\n  frac45: '⅘',\n  frac56: '⅚',\n  frac58: '⅝',\n  frac78: '⅞',\n  frasl: '⁄',\n  frown: '⌢',\n  fscr: '𝒻',\n  gE: '≧',\n  gEl: '⪌',\n  gacute: 'ǵ',\n  gamma: 'γ',\n  gammad: 'ϝ',\n  gap: '⪆',\n  gbreve: 'ğ',\n  gcirc: 'ĝ',\n  gcy: 'г',\n  gdot: 'ġ',\n  ge: '≥',\n  gel: '⋛',\n  geq: '≥',\n  geqq: '≧',\n  geqslant: '⩾',\n  ges: '⩾',\n  gescc: '⪩',\n  gesdot: '⪀',\n  gesdoto: '⪂',\n  gesdotol: '⪄',\n  gesl: '⋛︀',\n  gesles: '⪔',\n  gfr: '𝔤',\n  gg: '≫',\n  ggg: '⋙',\n  gimel: 'ℷ',\n  gjcy: 'ѓ',\n  gl: '≷',\n  glE: '⪒',\n  gla: '⪥',\n  glj: '⪤',\n  gnE: '≩',\n  gnap: '⪊',\n  gnapprox: '⪊',\n  gne: '⪈',\n  gneq: '⪈',\n  gneqq: '≩',\n  gnsim: '⋧',\n  gopf: '𝕘',\n  grave: '`',\n  gscr: 'ℊ',\n  gsim: '≳',\n  gsime: '⪎',\n  gsiml: '⪐',\n  gt: '>',\n  gtcc: '⪧',\n  gtcir: '⩺',\n  gtdot: '⋗',\n  gtlPar: '⦕',\n  gtquest: '⩼',\n  gtrapprox: '⪆',\n  gtrarr: '⥸',\n  gtrdot: '⋗',\n  gtreqless: '⋛',\n  gtreqqless: '⪌',\n  gtrless: '≷',\n  gtrsim: '≳',\n  gvertneqq: '≩︀',\n  gvnE: '≩︀',\n  hArr: '⇔',\n  hairsp: ' ',\n  half: '½',\n  hamilt: 'ℋ',\n  hardcy: 'ъ',\n  harr: '↔',\n  harrcir: '⥈',\n  harrw: '↭',\n  hbar: 'ℏ',\n  hcirc: 'ĥ',\n  hearts: '♥',\n  heartsuit: '♥',\n  hellip: '…',\n  hercon: '⊹',\n  hfr: '𝔥',\n  hksearow: '⤥',\n  hkswarow: '⤦',\n  hoarr: '⇿',\n  homtht: '∻',\n  hookleftarrow: '↩',\n  hookrightarrow: '↪',\n  hopf: '𝕙',\n  horbar: '―',\n  hscr: '𝒽',\n  hslash: 'ℏ',\n  hstrok: 'ħ',\n  hybull: '⁃',\n  hyphen: '‐',\n  iacute: 'í',\n  ic: '⁣',\n  icirc: 'î',\n  icy: 'и',\n  iecy: 'е',\n  iexcl: '¡',\n  iff: '⇔',\n  ifr: '𝔦',\n  igrave: 'ì',\n  ii: 'ⅈ',\n  iiiint: '⨌',\n  iiint: '∭',\n  iinfin: '⧜',\n  iiota: '℩',\n  ijlig: 'ĳ',\n  imacr: 'ī',\n  image: 'ℑ',\n  imagline: 'ℐ',\n  imagpart: 'ℑ',\n  imath: 'ı',\n  imof: '⊷',\n  imped: 'Ƶ',\n  in: '∈',\n  incare: '℅',\n  infin: '∞',\n  infintie: '⧝',\n  inodot: 'ı',\n  int: '∫',\n  intcal: '⊺',\n  integers: 'ℤ',\n  intercal: '⊺',\n  intlarhk: '⨗',\n  intprod: '⨼',\n  iocy: 'ё',\n  iogon: 'į',\n  iopf: '𝕚',\n  iota: 'ι',\n  iprod: '⨼',\n  iquest: '¿',\n  iscr: '𝒾',\n  isin: '∈',\n  isinE: '⋹',\n  isindot: '⋵',\n  isins: '⋴',\n  isinsv: '⋳',\n  isinv: '∈',\n  it: '⁢',\n  itilde: 'ĩ',\n  iukcy: 'і',\n  iuml: 'ï',\n  jcirc: 'ĵ',\n  jcy: 'й',\n  jfr: '𝔧',\n  jmath: 'ȷ',\n  jopf: '𝕛',\n  jscr: '𝒿',\n  jsercy: 'ј',\n  jukcy: 'є',\n  kappa: 'κ',\n  kappav: 'ϰ',\n  kcedil: 'ķ',\n  kcy: 'к',\n  kfr: '𝔨',\n  kgreen: 'ĸ',\n  khcy: 'х',\n  kjcy: 'ќ',\n  kopf: '𝕜',\n  kscr: '𝓀',\n  lAarr: '⇚',\n  lArr: '⇐',\n  lAtail: '⤛',\n  lBarr: '⤎',\n  lE: '≦',\n  lEg: '⪋',\n  lHar: '⥢',\n  lacute: 'ĺ',\n  laemptyv: '⦴',\n  lagran: 'ℒ',\n  lambda: 'λ',\n  lang: '⟨',\n  langd: '⦑',\n  langle: '⟨',\n  lap: '⪅',\n  laquo: '«',\n  larr: '←',\n  larrb: '⇤',\n  larrbfs: '⤟',\n  larrfs: '⤝',\n  larrhk: '↩',\n  larrlp: '↫',\n  larrpl: '⤹',\n  larrsim: '⥳',\n  larrtl: '↢',\n  lat: '⪫',\n  latail: '⤙',\n  late: '⪭',\n  lates: '⪭︀',\n  lbarr: '⤌',\n  lbbrk: '❲',\n  lbrace: '{',\n  lbrack: '[',\n  lbrke: '⦋',\n  lbrksld: '⦏',\n  lbrkslu: '⦍',\n  lcaron: 'ľ',\n  lcedil: 'ļ',\n  lceil: '⌈',\n  lcub: '{',\n  lcy: 'л',\n  ldca: '⤶',\n  ldquo: '“',\n  ldquor: '„',\n  ldrdhar: '⥧',\n  ldrushar: '⥋',\n  ldsh: '↲',\n  le: '≤',\n  leftarrow: '←',\n  leftarrowtail: '↢',\n  leftharpoondown: '↽',\n  leftharpoonup: '↼',\n  leftleftarrows: '⇇',\n  leftrightarrow: '↔',\n  leftrightarrows: '⇆',\n  leftrightharpoons: '⇋',\n  leftrightsquigarrow: '↭',\n  leftthreetimes: '⋋',\n  leg: '⋚',\n  leq: '≤',\n  leqq: '≦',\n  leqslant: '⩽',\n  les: '⩽',\n  lescc: '⪨',\n  lesdot: '⩿',\n  lesdoto: '⪁',\n  lesdotor: '⪃',\n  lesg: '⋚︀',\n  lesges: '⪓',\n  lessapprox: '⪅',\n  lessdot: '⋖',\n  lesseqgtr: '⋚',\n  lesseqqgtr: '⪋',\n  lessgtr: '≶',\n  lesssim: '≲',\n  lfisht: '⥼',\n  lfloor: '⌊',\n  lfr: '𝔩',\n  lg: '≶',\n  lgE: '⪑',\n  lhard: '↽',\n  lharu: '↼',\n  lharul: '⥪',\n  lhblk: '▄',\n  ljcy: 'љ',\n  ll: '≪',\n  llarr: '⇇',\n  llcorner: '⌞',\n  llhard: '⥫',\n  lltri: '◺',\n  lmidot: 'ŀ',\n  lmoust: '⎰',\n  lmoustache: '⎰',\n  lnE: '≨',\n  lnap: '⪉',\n  lnapprox: '⪉',\n  lne: '⪇',\n  lneq: '⪇',\n  lneqq: '≨',\n  lnsim: '⋦',\n  loang: '⟬',\n  loarr: '⇽',\n  lobrk: '⟦',\n  longleftarrow: '⟵',\n  longleftrightarrow: '⟷',\n  longmapsto: '⟼',\n  longrightarrow: '⟶',\n  looparrowleft: '↫',\n  looparrowright: '↬',\n  lopar: '⦅',\n  lopf: '𝕝',\n  loplus: '⨭',\n  lotimes: '⨴',\n  lowast: '∗',\n  lowbar: '_',\n  loz: '◊',\n  lozenge: '◊',\n  lozf: '⧫',\n  lpar: '(',\n  lparlt: '⦓',\n  lrarr: '⇆',\n  lrcorner: '⌟',\n  lrhar: '⇋',\n  lrhard: '⥭',\n  lrm: '‎',\n  lrtri: '⊿',\n  lsaquo: '‹',\n  lscr: '𝓁',\n  lsh: '↰',\n  lsim: '≲',\n  lsime: '⪍',\n  lsimg: '⪏',\n  lsqb: '[',\n  lsquo: '‘',\n  lsquor: '‚',\n  lstrok: 'ł',\n  lt: '<',\n  ltcc: '⪦',\n  ltcir: '⩹',\n  ltdot: '⋖',\n  lthree: '⋋',\n  ltimes: '⋉',\n  ltlarr: '⥶',\n  ltquest: '⩻',\n  ltrPar: '⦖',\n  ltri: '◃',\n  ltrie: '⊴',\n  ltrif: '◂',\n  lurdshar: '⥊',\n  luruhar: '⥦',\n  lvertneqq: '≨︀',\n  lvnE: '≨︀',\n  mDDot: '∺',\n  macr: '¯',\n  male: '♂',\n  malt: '✠',\n  maltese: '✠',\n  map: '↦',\n  mapsto: '↦',\n  mapstodown: '↧',\n  mapstoleft: '↤',\n  mapstoup: '↥',\n  marker: '▮',\n  mcomma: '⨩',\n  mcy: 'м',\n  mdash: '—',\n  measuredangle: '∡',\n  mfr: '𝔪',\n  mho: '℧',\n  micro: 'µ',\n  mid: '∣',\n  midast: '*',\n  midcir: '⫰',\n  middot: '·',\n  minus: '−',\n  minusb: '⊟',\n  minusd: '∸',\n  minusdu: '⨪',\n  mlcp: '⫛',\n  mldr: '…',\n  mnplus: '∓',\n  models: '⊧',\n  mopf: '𝕞',\n  mp: '∓',\n  mscr: '𝓂',\n  mstpos: '∾',\n  mu: 'μ',\n  multimap: '⊸',\n  mumap: '⊸',\n  nGg: '⋙̸',\n  nGt: '≫⃒',\n  nGtv: '≫̸',\n  nLeftarrow: '⇍',\n  nLeftrightarrow: '⇎',\n  nLl: '⋘̸',\n  nLt: '≪⃒',\n  nLtv: '≪̸',\n  nRightarrow: '⇏',\n  nVDash: '⊯',\n  nVdash: '⊮',\n  nabla: '∇',\n  nacute: 'ń',\n  nang: '∠⃒',\n  nap: '≉',\n  napE: '⩰̸',\n  napid: '≋̸',\n  napos: 'ŉ',\n  napprox: '≉',\n  natur: '♮',\n  natural: '♮',\n  naturals: 'ℕ',\n  nbsp: ' ',\n  nbump: '≎̸',\n  nbumpe: '≏̸',\n  ncap: '⩃',\n  ncaron: 'ň',\n  ncedil: 'ņ',\n  ncong: '≇',\n  ncongdot: '⩭̸',\n  ncup: '⩂',\n  ncy: 'н',\n  ndash: '–',\n  ne: '≠',\n  neArr: '⇗',\n  nearhk: '⤤',\n  nearr: '↗',\n  nearrow: '↗',\n  nedot: '≐̸',\n  nequiv: '≢',\n  nesear: '⤨',\n  nesim: '≂̸',\n  nexist: '∄',\n  nexists: '∄',\n  nfr: '𝔫',\n  ngE: '≧̸',\n  nge: '≱',\n  ngeq: '≱',\n  ngeqq: '≧̸',\n  ngeqslant: '⩾̸',\n  nges: '⩾̸',\n  ngsim: '≵',\n  ngt: '≯',\n  ngtr: '≯',\n  nhArr: '⇎',\n  nharr: '↮',\n  nhpar: '⫲',\n  ni: '∋',\n  nis: '⋼',\n  nisd: '⋺',\n  niv: '∋',\n  njcy: 'њ',\n  nlArr: '⇍',\n  nlE: '≦̸',\n  nlarr: '↚',\n  nldr: '‥',\n  nle: '≰',\n  nleftarrow: '↚',\n  nleftrightarrow: '↮',\n  nleq: '≰',\n  nleqq: '≦̸',\n  nleqslant: '⩽̸',\n  nles: '⩽̸',\n  nless: '≮',\n  nlsim: '≴',\n  nlt: '≮',\n  nltri: '⋪',\n  nltrie: '⋬',\n  nmid: '∤',\n  nopf: '𝕟',\n  not: '¬',\n  notin: '∉',\n  notinE: '⋹̸',\n  notindot: '⋵̸',\n  notinva: '∉',\n  notinvb: '⋷',\n  notinvc: '⋶',\n  notni: '∌',\n  notniva: '∌',\n  notnivb: '⋾',\n  notnivc: '⋽',\n  npar: '∦',\n  nparallel: '∦',\n  nparsl: '⫽⃥',\n  npart: '∂̸',\n  npolint: '⨔',\n  npr: '⊀',\n  nprcue: '⋠',\n  npre: '⪯̸',\n  nprec: '⊀',\n  npreceq: '⪯̸',\n  nrArr: '⇏',\n  nrarr: '↛',\n  nrarrc: '⤳̸',\n  nrarrw: '↝̸',\n  nrightarrow: '↛',\n  nrtri: '⋫',\n  nrtrie: '⋭',\n  nsc: '⊁',\n  nsccue: '⋡',\n  nsce: '⪰̸',\n  nscr: '𝓃',\n  nshortmid: '∤',\n  nshortparallel: '∦',\n  nsim: '≁',\n  nsime: '≄',\n  nsimeq: '≄',\n  nsmid: '∤',\n  nspar: '∦',\n  nsqsube: '⋢',\n  nsqsupe: '⋣',\n  nsub: '⊄',\n  nsubE: '⫅̸',\n  nsube: '⊈',\n  nsubset: '⊂⃒',\n  nsubseteq: '⊈',\n  nsubseteqq: '⫅̸',\n  nsucc: '⊁',\n  nsucceq: '⪰̸',\n  nsup: '⊅',\n  nsupE: '⫆̸',\n  nsupe: '⊉',\n  nsupset: '⊃⃒',\n  nsupseteq: '⊉',\n  nsupseteqq: '⫆̸',\n  ntgl: '≹',\n  ntilde: 'ñ',\n  ntlg: '≸',\n  ntriangleleft: '⋪',\n  ntrianglelefteq: '⋬',\n  ntriangleright: '⋫',\n  ntrianglerighteq: '⋭',\n  nu: 'ν',\n  num: '#',\n  numero: '№',\n  numsp: ' ',\n  nvDash: '⊭',\n  nvHarr: '⤄',\n  nvap: '≍⃒',\n  nvdash: '⊬',\n  nvge: '≥⃒',\n  nvgt: '>⃒',\n  nvinfin: '⧞',\n  nvlArr: '⤂',\n  nvle: '≤⃒',\n  nvlt: '<⃒',\n  nvltrie: '⊴⃒',\n  nvrArr: '⤃',\n  nvrtrie: '⊵⃒',\n  nvsim: '∼⃒',\n  nwArr: '⇖',\n  nwarhk: '⤣',\n  nwarr: '↖',\n  nwarrow: '↖',\n  nwnear: '⤧',\n  oS: 'Ⓢ',\n  oacute: 'ó',\n  oast: '⊛',\n  ocir: '⊚',\n  ocirc: 'ô',\n  ocy: 'о',\n  odash: '⊝',\n  odblac: 'ő',\n  odiv: '⨸',\n  odot: '⊙',\n  odsold: '⦼',\n  oelig: 'œ',\n  ofcir: '⦿',\n  ofr: '𝔬',\n  ogon: '˛',\n  ograve: 'ò',\n  ogt: '⧁',\n  ohbar: '⦵',\n  ohm: 'Ω',\n  oint: '∮',\n  olarr: '↺',\n  olcir: '⦾',\n  olcross: '⦻',\n  oline: '‾',\n  olt: '⧀',\n  omacr: 'ō',\n  omega: 'ω',\n  omicron: 'ο',\n  omid: '⦶',\n  ominus: '⊖',\n  oopf: '𝕠',\n  opar: '⦷',\n  operp: '⦹',\n  oplus: '⊕',\n  or: '∨',\n  orarr: '↻',\n  ord: '⩝',\n  order: 'ℴ',\n  orderof: 'ℴ',\n  ordf: 'ª',\n  ordm: 'º',\n  origof: '⊶',\n  oror: '⩖',\n  orslope: '⩗',\n  orv: '⩛',\n  oscr: 'ℴ',\n  oslash: 'ø',\n  osol: '⊘',\n  otilde: 'õ',\n  otimes: '⊗',\n  otimesas: '⨶',\n  ouml: 'ö',\n  ovbar: '⌽',\n  par: '∥',\n  para: '¶',\n  parallel: '∥',\n  parsim: '⫳',\n  parsl: '⫽',\n  part: '∂',\n  pcy: 'п',\n  percnt: '%',\n  period: '.',\n  permil: '‰',\n  perp: '⊥',\n  pertenk: '‱',\n  pfr: '𝔭',\n  phi: 'φ',\n  phiv: 'ϕ',\n  phmmat: 'ℳ',\n  phone: '☎',\n  pi: 'π',\n  pitchfork: '⋔',\n  piv: 'ϖ',\n  planck: 'ℏ',\n  planckh: 'ℎ',\n  plankv: 'ℏ',\n  plus: '+',\n  plusacir: '⨣',\n  plusb: '⊞',\n  pluscir: '⨢',\n  plusdo: '∔',\n  plusdu: '⨥',\n  pluse: '⩲',\n  plusmn: '±',\n  plussim: '⨦',\n  plustwo: '⨧',\n  pm: '±',\n  pointint: '⨕',\n  popf: '𝕡',\n  pound: '£',\n  pr: '≺',\n  prE: '⪳',\n  prap: '⪷',\n  prcue: '≼',\n  pre: '⪯',\n  prec: '≺',\n  precapprox: '⪷',\n  preccurlyeq: '≼',\n  preceq: '⪯',\n  precnapprox: '⪹',\n  precneqq: '⪵',\n  precnsim: '⋨',\n  precsim: '≾',\n  prime: '′',\n  primes: 'ℙ',\n  prnE: '⪵',\n  prnap: '⪹',\n  prnsim: '⋨',\n  prod: '∏',\n  profalar: '⌮',\n  profline: '⌒',\n  profsurf: '⌓',\n  prop: '∝',\n  propto: '∝',\n  prsim: '≾',\n  prurel: '⊰',\n  pscr: '𝓅',\n  psi: 'ψ',\n  puncsp: ' ',\n  qfr: '𝔮',\n  qint: '⨌',\n  qopf: '𝕢',\n  qprime: '⁗',\n  qscr: '𝓆',\n  quaternions: 'ℍ',\n  quatint: '⨖',\n  quest: '?',\n  questeq: '≟',\n  quot: '\"',\n  rAarr: '⇛',\n  rArr: '⇒',\n  rAtail: '⤜',\n  rBarr: '⤏',\n  rHar: '⥤',\n  race: '∽̱',\n  racute: 'ŕ',\n  radic: '√',\n  raemptyv: '⦳',\n  rang: '⟩',\n  rangd: '⦒',\n  range: '⦥',\n  rangle: '⟩',\n  raquo: '»',\n  rarr: '→',\n  rarrap: '⥵',\n  rarrb: '⇥',\n  rarrbfs: '⤠',\n  rarrc: '⤳',\n  rarrfs: '⤞',\n  rarrhk: '↪',\n  rarrlp: '↬',\n  rarrpl: '⥅',\n  rarrsim: '⥴',\n  rarrtl: '↣',\n  rarrw: '↝',\n  ratail: '⤚',\n  ratio: '∶',\n  rationals: 'ℚ',\n  rbarr: '⤍',\n  rbbrk: '❳',\n  rbrace: '}',\n  rbrack: ']',\n  rbrke: '⦌',\n  rbrksld: '⦎',\n  rbrkslu: '⦐',\n  rcaron: 'ř',\n  rcedil: 'ŗ',\n  rceil: '⌉',\n  rcub: '}',\n  rcy: 'р',\n  rdca: '⤷',\n  rdldhar: '⥩',\n  rdquo: '”',\n  rdquor: '”',\n  rdsh: '↳',\n  real: 'ℜ',\n  realine: 'ℛ',\n  realpart: 'ℜ',\n  reals: 'ℝ',\n  rect: '▭',\n  reg: '®',\n  rfisht: '⥽',\n  rfloor: '⌋',\n  rfr: '𝔯',\n  rhard: '⇁',\n  rharu: '⇀',\n  rharul: '⥬',\n  rho: 'ρ',\n  rhov: 'ϱ',\n  rightarrow: '→',\n  rightarrowtail: '↣',\n  rightharpoondown: '⇁',\n  rightharpoonup: '⇀',\n  rightleftarrows: '⇄',\n  rightleftharpoons: '⇌',\n  rightrightarrows: '⇉',\n  rightsquigarrow: '↝',\n  rightthreetimes: '⋌',\n  ring: '˚',\n  risingdotseq: '≓',\n  rlarr: '⇄',\n  rlhar: '⇌',\n  rlm: '‏',\n  rmoust: '⎱',\n  rmoustache: '⎱',\n  rnmid: '⫮',\n  roang: '⟭',\n  roarr: '⇾',\n  robrk: '⟧',\n  ropar: '⦆',\n  ropf: '𝕣',\n  roplus: '⨮',\n  rotimes: '⨵',\n  rpar: ')',\n  rpargt: '⦔',\n  rppolint: '⨒',\n  rrarr: '⇉',\n  rsaquo: '›',\n  rscr: '𝓇',\n  rsh: '↱',\n  rsqb: ']',\n  rsquo: '’',\n  rsquor: '’',\n  rthree: '⋌',\n  rtimes: '⋊',\n  rtri: '▹',\n  rtrie: '⊵',\n  rtrif: '▸',\n  rtriltri: '⧎',\n  ruluhar: '⥨',\n  rx: '℞',\n  sacute: 'ś',\n  sbquo: '‚',\n  sc: '≻',\n  scE: '⪴',\n  scap: '⪸',\n  scaron: 'š',\n  sccue: '≽',\n  sce: '⪰',\n  scedil: 'ş',\n  scirc: 'ŝ',\n  scnE: '⪶',\n  scnap: '⪺',\n  scnsim: '⋩',\n  scpolint: '⨓',\n  scsim: '≿',\n  scy: 'с',\n  sdot: '⋅',\n  sdotb: '⊡',\n  sdote: '⩦',\n  seArr: '⇘',\n  searhk: '⤥',\n  searr: '↘',\n  searrow: '↘',\n  sect: '§',\n  semi: ';',\n  seswar: '⤩',\n  setminus: '∖',\n  setmn: '∖',\n  sext: '✶',\n  sfr: '𝔰',\n  sfrown: '⌢',\n  sharp: '♯',\n  shchcy: 'щ',\n  shcy: 'ш',\n  shortmid: '∣',\n  shortparallel: '∥',\n  shy: '­',\n  sigma: 'σ',\n  sigmaf: 'ς',\n  sigmav: 'ς',\n  sim: '∼',\n  simdot: '⩪',\n  sime: '≃',\n  simeq: '≃',\n  simg: '⪞',\n  simgE: '⪠',\n  siml: '⪝',\n  simlE: '⪟',\n  simne: '≆',\n  simplus: '⨤',\n  simrarr: '⥲',\n  slarr: '←',\n  smallsetminus: '∖',\n  smashp: '⨳',\n  smeparsl: '⧤',\n  smid: '∣',\n  smile: '⌣',\n  smt: '⪪',\n  smte: '⪬',\n  smtes: '⪬︀',\n  softcy: 'ь',\n  sol: '/',\n  solb: '⧄',\n  solbar: '⌿',\n  sopf: '𝕤',\n  spades: '♠',\n  spadesuit: '♠',\n  spar: '∥',\n  sqcap: '⊓',\n  sqcaps: '⊓︀',\n  sqcup: '⊔',\n  sqcups: '⊔︀',\n  sqsub: '⊏',\n  sqsube: '⊑',\n  sqsubset: '⊏',\n  sqsubseteq: '⊑',\n  sqsup: '⊐',\n  sqsupe: '⊒',\n  sqsupset: '⊐',\n  sqsupseteq: '⊒',\n  squ: '□',\n  square: '□',\n  squarf: '▪',\n  squf: '▪',\n  srarr: '→',\n  sscr: '𝓈',\n  ssetmn: '∖',\n  ssmile: '⌣',\n  sstarf: '⋆',\n  star: '☆',\n  starf: '★',\n  straightepsilon: 'ϵ',\n  straightphi: 'ϕ',\n  strns: '¯',\n  sub: '⊂',\n  subE: '⫅',\n  subdot: '⪽',\n  sube: '⊆',\n  subedot: '⫃',\n  submult: '⫁',\n  subnE: '⫋',\n  subne: '⊊',\n  subplus: '⪿',\n  subrarr: '⥹',\n  subset: '⊂',\n  subseteq: '⊆',\n  subseteqq: '⫅',\n  subsetneq: '⊊',\n  subsetneqq: '⫋',\n  subsim: '⫇',\n  subsub: '⫕',\n  subsup: '⫓',\n  succ: '≻',\n  succapprox: '⪸',\n  succcurlyeq: '≽',\n  succeq: '⪰',\n  succnapprox: '⪺',\n  succneqq: '⪶',\n  succnsim: '⋩',\n  succsim: '≿',\n  sum: '∑',\n  sung: '♪',\n  sup1: '¹',\n  sup2: '²',\n  sup3: '³',\n  sup: '⊃',\n  supE: '⫆',\n  supdot: '⪾',\n  supdsub: '⫘',\n  supe: '⊇',\n  supedot: '⫄',\n  suphsol: '⟉',\n  suphsub: '⫗',\n  suplarr: '⥻',\n  supmult: '⫂',\n  supnE: '⫌',\n  supne: '⊋',\n  supplus: '⫀',\n  supset: '⊃',\n  supseteq: '⊇',\n  supseteqq: '⫆',\n  supsetneq: '⊋',\n  supsetneqq: '⫌',\n  supsim: '⫈',\n  supsub: '⫔',\n  supsup: '⫖',\n  swArr: '⇙',\n  swarhk: '⤦',\n  swarr: '↙',\n  swarrow: '↙',\n  swnwar: '⤪',\n  szlig: 'ß',\n  target: '⌖',\n  tau: 'τ',\n  tbrk: '⎴',\n  tcaron: 'ť',\n  tcedil: 'ţ',\n  tcy: 'т',\n  tdot: '⃛',\n  telrec: '⌕',\n  tfr: '𝔱',\n  there4: '∴',\n  therefore: '∴',\n  theta: 'θ',\n  thetasym: 'ϑ',\n  thetav: 'ϑ',\n  thickapprox: '≈',\n  thicksim: '∼',\n  thinsp: ' ',\n  thkap: '≈',\n  thksim: '∼',\n  thorn: 'þ',\n  tilde: '˜',\n  times: '×',\n  timesb: '⊠',\n  timesbar: '⨱',\n  timesd: '⨰',\n  tint: '∭',\n  toea: '⤨',\n  top: '⊤',\n  topbot: '⌶',\n  topcir: '⫱',\n  topf: '𝕥',\n  topfork: '⫚',\n  tosa: '⤩',\n  tprime: '‴',\n  trade: '™',\n  triangle: '▵',\n  triangledown: '▿',\n  triangleleft: '◃',\n  trianglelefteq: '⊴',\n  triangleq: '≜',\n  triangleright: '▹',\n  trianglerighteq: '⊵',\n  tridot: '◬',\n  trie: '≜',\n  triminus: '⨺',\n  triplus: '⨹',\n  trisb: '⧍',\n  tritime: '⨻',\n  trpezium: '⏢',\n  tscr: '𝓉',\n  tscy: 'ц',\n  tshcy: 'ћ',\n  tstrok: 'ŧ',\n  twixt: '≬',\n  twoheadleftarrow: '↞',\n  twoheadrightarrow: '↠',\n  uArr: '⇑',\n  uHar: '⥣',\n  uacute: 'ú',\n  uarr: '↑',\n  ubrcy: 'ў',\n  ubreve: 'ŭ',\n  ucirc: 'û',\n  ucy: 'у',\n  udarr: '⇅',\n  udblac: 'ű',\n  udhar: '⥮',\n  ufisht: '⥾',\n  ufr: '𝔲',\n  ugrave: 'ù',\n  uharl: '↿',\n  uharr: '↾',\n  uhblk: '▀',\n  ulcorn: '⌜',\n  ulcorner: '⌜',\n  ulcrop: '⌏',\n  ultri: '◸',\n  umacr: 'ū',\n  uml: '¨',\n  uogon: 'ų',\n  uopf: '𝕦',\n  uparrow: '↑',\n  updownarrow: '↕',\n  upharpoonleft: '↿',\n  upharpoonright: '↾',\n  uplus: '⊎',\n  upsi: 'υ',\n  upsih: 'ϒ',\n  upsilon: 'υ',\n  upuparrows: '⇈',\n  urcorn: '⌝',\n  urcorner: '⌝',\n  urcrop: '⌎',\n  uring: 'ů',\n  urtri: '◹',\n  uscr: '𝓊',\n  utdot: '⋰',\n  utilde: 'ũ',\n  utri: '▵',\n  utrif: '▴',\n  uuarr: '⇈',\n  uuml: 'ü',\n  uwangle: '⦧',\n  vArr: '⇕',\n  vBar: '⫨',\n  vBarv: '⫩',\n  vDash: '⊨',\n  vangrt: '⦜',\n  varepsilon: 'ϵ',\n  varkappa: 'ϰ',\n  varnothing: '∅',\n  varphi: 'ϕ',\n  varpi: 'ϖ',\n  varpropto: '∝',\n  varr: '↕',\n  varrho: 'ϱ',\n  varsigma: 'ς',\n  varsubsetneq: '⊊︀',\n  varsubsetneqq: '⫋︀',\n  varsupsetneq: '⊋︀',\n  varsupsetneqq: '⫌︀',\n  vartheta: 'ϑ',\n  vartriangleleft: '⊲',\n  vartriangleright: '⊳',\n  vcy: 'в',\n  vdash: '⊢',\n  vee: '∨',\n  veebar: '⊻',\n  veeeq: '≚',\n  vellip: '⋮',\n  verbar: '|',\n  vert: '|',\n  vfr: '𝔳',\n  vltri: '⊲',\n  vnsub: '⊂⃒',\n  vnsup: '⊃⃒',\n  vopf: '𝕧',\n  vprop: '∝',\n  vrtri: '⊳',\n  vscr: '𝓋',\n  vsubnE: '⫋︀',\n  vsubne: '⊊︀',\n  vsupnE: '⫌︀',\n  vsupne: '⊋︀',\n  vzigzag: '⦚',\n  wcirc: 'ŵ',\n  wedbar: '⩟',\n  wedge: '∧',\n  wedgeq: '≙',\n  weierp: '℘',\n  wfr: '𝔴',\n  wopf: '𝕨',\n  wp: '℘',\n  wr: '≀',\n  wreath: '≀',\n  wscr: '𝓌',\n  xcap: '⋂',\n  xcirc: '◯',\n  xcup: '⋃',\n  xdtri: '▽',\n  xfr: '𝔵',\n  xhArr: '⟺',\n  xharr: '⟷',\n  xi: 'ξ',\n  xlArr: '⟸',\n  xlarr: '⟵',\n  xmap: '⟼',\n  xnis: '⋻',\n  xodot: '⨀',\n  xopf: '𝕩',\n  xoplus: '⨁',\n  xotime: '⨂',\n  xrArr: '⟹',\n  xrarr: '⟶',\n  xscr: '𝓍',\n  xsqcup: '⨆',\n  xuplus: '⨄',\n  xutri: '△',\n  xvee: '⋁',\n  xwedge: '⋀',\n  yacute: 'ý',\n  yacy: 'я',\n  ycirc: 'ŷ',\n  ycy: 'ы',\n  yen: '¥',\n  yfr: '𝔶',\n  yicy: 'ї',\n  yopf: '𝕪',\n  yscr: '𝓎',\n  yucy: 'ю',\n  yuml: 'ÿ',\n  zacute: 'ź',\n  zcaron: 'ž',\n  zcy: 'з',\n  zdot: 'ż',\n  zeetrf: 'ℨ',\n  zeta: 'ζ',\n  zfr: '𝔷',\n  zhcy: 'ж',\n  zigrarr: '⇝',\n  zopf: '𝕫',\n  zscr: '𝓏',\n  zwj: '‍',\n  zwnj: '‌'\n}\n","import {characterEntities} from 'character-entities'\n\nconst own = {}.hasOwnProperty\n\n/**\n * Decode a single character reference (without the `&` or `;`).\n * You probably only need this when you’re building parsers yourself that follow\n * different rules compared to HTML.\n * This is optimized to be tiny in browsers.\n *\n * @param {string} value\n *   `notin` (named), `#123` (deci), `#x123` (hexa).\n * @returns {string|false}\n *   Decoded reference.\n */\nexport function decodeNamedCharacterReference(value) {\n  return own.call(characterEntities, value) ? characterEntities[value] : false\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {decodeNamedCharacterReference} from 'decode-named-character-reference'\nimport {\n  asciiAlphanumeric,\n  asciiDigit,\n  asciiHexDigit\n} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const characterReference = {\n  name: 'characterReference',\n  tokenize: tokenizeCharacterReference\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeCharacterReference(effects, ok, nok) {\n  const self = this\n  let size = 0\n  /** @type {number} */\n\n  let max\n  /** @type {(code: Code) => code is number} */\n\n  let test\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('characterReference')\n    effects.enter('characterReferenceMarker')\n    effects.consume(code)\n    effects.exit('characterReferenceMarker')\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (code === 35) {\n      effects.enter('characterReferenceMarkerNumeric')\n      effects.consume(code)\n      effects.exit('characterReferenceMarkerNumeric')\n      return numeric\n    }\n\n    effects.enter('characterReferenceValue')\n    max = 31\n    test = asciiAlphanumeric\n    return value(code)\n  }\n  /** @type {State} */\n\n  function numeric(code) {\n    if (code === 88 || code === 120) {\n      effects.enter('characterReferenceMarkerHexadecimal')\n      effects.consume(code)\n      effects.exit('characterReferenceMarkerHexadecimal')\n      effects.enter('characterReferenceValue')\n      max = 6\n      test = asciiHexDigit\n      return value\n    }\n\n    effects.enter('characterReferenceValue')\n    max = 7\n    test = asciiDigit\n    return value(code)\n  }\n  /** @type {State} */\n\n  function value(code) {\n    /** @type {Token} */\n    let token\n\n    if (code === 59 && size) {\n      token = effects.exit('characterReferenceValue')\n\n      if (\n        test === asciiAlphanumeric &&\n        !decodeNamedCharacterReference(self.sliceSerialize(token))\n      ) {\n        return nok(code)\n      }\n\n      effects.enter('characterReferenceMarker')\n      effects.consume(code)\n      effects.exit('characterReferenceMarker')\n      effects.exit('characterReference')\n      return ok\n    }\n\n    if (test(code) && size++ < max) {\n      effects.consume(code)\n      return value\n    }\n\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {asciiPunctuation} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const characterEscape = {\n  name: 'characterEscape',\n  tokenize: tokenizeCharacterEscape\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeCharacterEscape(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('characterEscape')\n    effects.enter('escapeMarker')\n    effects.consume(code)\n    effects.exit('escapeMarker')\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (asciiPunctuation(code)) {\n      effects.enter('characterEscapeValue')\n      effects.consume(code)\n      effects.exit('characterEscapeValue')\n      effects.exit('characterEscape')\n      return ok\n    }\n\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const lineEnding = {\n  name: 'lineEnding',\n  tokenize: tokenizeLineEnding\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeLineEnding(effects, ok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return factorySpace(effects, ok, 'linePrefix')\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {factoryDestination} from 'micromark-factory-destination'\nimport {factoryLabel} from 'micromark-factory-label'\nimport {factoryTitle} from 'micromark-factory-title'\nimport {factoryWhitespace} from 'micromark-factory-whitespace'\nimport {markdownLineEndingOrSpace} from 'micromark-util-character'\nimport {push, splice} from 'micromark-util-chunked'\nimport {normalizeIdentifier} from 'micromark-util-normalize-identifier'\nimport {resolveAll} from 'micromark-util-resolve-all'\n\n/** @type {Construct} */\nexport const labelEnd = {\n  name: 'labelEnd',\n  tokenize: tokenizeLabelEnd,\n  resolveTo: resolveToLabelEnd,\n  resolveAll: resolveAllLabelEnd\n}\n/** @type {Construct} */\n\nconst resourceConstruct = {\n  tokenize: tokenizeResource\n}\n/** @type {Construct} */\n\nconst fullReferenceConstruct = {\n  tokenize: tokenizeFullReference\n}\n/** @type {Construct} */\n\nconst collapsedReferenceConstruct = {\n  tokenize: tokenizeCollapsedReference\n}\n/** @type {Resolver} */\n\nfunction resolveAllLabelEnd(events) {\n  let index = -1\n  /** @type {Token} */\n\n  let token\n\n  while (++index < events.length) {\n    token = events[index][1]\n\n    if (\n      token.type === 'labelImage' ||\n      token.type === 'labelLink' ||\n      token.type === 'labelEnd'\n    ) {\n      // Remove the marker.\n      events.splice(index + 1, token.type === 'labelImage' ? 4 : 2)\n      token.type = 'data'\n      index++\n    }\n  }\n\n  return events\n}\n/** @type {Resolver} */\n\nfunction resolveToLabelEnd(events, context) {\n  let index = events.length\n  let offset = 0\n  /** @type {Token} */\n\n  let token\n  /** @type {number|undefined} */\n\n  let open\n  /** @type {number|undefined} */\n\n  let close\n  /** @type {Event[]} */\n\n  let media // Find an opening.\n\n  while (index--) {\n    token = events[index][1]\n\n    if (open) {\n      // If we see another link, or inactive link label, we’ve been here before.\n      if (\n        token.type === 'link' ||\n        (token.type === 'labelLink' && token._inactive)\n      ) {\n        break\n      } // Mark other link openings as inactive, as we can’t have links in\n      // links.\n\n      if (events[index][0] === 'enter' && token.type === 'labelLink') {\n        token._inactive = true\n      }\n    } else if (close) {\n      if (\n        events[index][0] === 'enter' &&\n        (token.type === 'labelImage' || token.type === 'labelLink') &&\n        !token._balanced\n      ) {\n        open = index\n\n        if (token.type !== 'labelLink') {\n          offset = 2\n          break\n        }\n      }\n    } else if (token.type === 'labelEnd') {\n      close = index\n    }\n  }\n\n  const group = {\n    type: events[open][1].type === 'labelLink' ? 'link' : 'image',\n    start: Object.assign({}, events[open][1].start),\n    end: Object.assign({}, events[events.length - 1][1].end)\n  }\n  const label = {\n    type: 'label',\n    start: Object.assign({}, events[open][1].start),\n    end: Object.assign({}, events[close][1].end)\n  }\n  const text = {\n    type: 'labelText',\n    start: Object.assign({}, events[open + offset + 2][1].end),\n    end: Object.assign({}, events[close - 2][1].start)\n  }\n  media = [\n    ['enter', group, context],\n    ['enter', label, context]\n  ] // Opening marker.\n\n  media = push(media, events.slice(open + 1, open + offset + 3)) // Text open.\n\n  media = push(media, [['enter', text, context]]) // Between.\n\n  media = push(\n    media,\n    resolveAll(\n      context.parser.constructs.insideSpan.null,\n      events.slice(open + offset + 4, close - 3),\n      context\n    )\n  ) // Text close, marker close, label close.\n\n  media = push(media, [\n    ['exit', text, context],\n    events[close - 2],\n    events[close - 1],\n    ['exit', label, context]\n  ]) // Reference, resource, or so.\n\n  media = push(media, events.slice(close + 1)) // Media close.\n\n  media = push(media, [['exit', group, context]])\n  splice(events, open, events.length, media)\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeLabelEnd(effects, ok, nok) {\n  const self = this\n  let index = self.events.length\n  /** @type {Token} */\n\n  let labelStart\n  /** @type {boolean} */\n\n  let defined // Find an opening.\n\n  while (index--) {\n    if (\n      (self.events[index][1].type === 'labelImage' ||\n        self.events[index][1].type === 'labelLink') &&\n      !self.events[index][1]._balanced\n    ) {\n      labelStart = self.events[index][1]\n      break\n    }\n  }\n\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (!labelStart) {\n      return nok(code)\n    } // It’s a balanced bracket, but contains a link.\n\n    if (labelStart._inactive) return balanced(code)\n    defined = self.parser.defined.includes(\n      normalizeIdentifier(\n        self.sliceSerialize({\n          start: labelStart.end,\n          end: self.now()\n        })\n      )\n    )\n    effects.enter('labelEnd')\n    effects.enter('labelMarker')\n    effects.consume(code)\n    effects.exit('labelMarker')\n    effects.exit('labelEnd')\n    return afterLabelEnd\n  }\n  /** @type {State} */\n\n  function afterLabelEnd(code) {\n    // Resource: `[asd](fgh)`.\n    if (code === 40) {\n      return effects.attempt(\n        resourceConstruct,\n        ok,\n        defined ? ok : balanced\n      )(code)\n    } // Collapsed (`[asd][]`) or full (`[asd][fgh]`) reference?\n\n    if (code === 91) {\n      return effects.attempt(\n        fullReferenceConstruct,\n        ok,\n        defined\n          ? effects.attempt(collapsedReferenceConstruct, ok, balanced)\n          : balanced\n      )(code)\n    } // Shortcut reference: `[asd]`?\n\n    return defined ? ok(code) : balanced(code)\n  }\n  /** @type {State} */\n\n  function balanced(code) {\n    labelStart._balanced = true\n    return nok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeResource(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('resource')\n    effects.enter('resourceMarker')\n    effects.consume(code)\n    effects.exit('resourceMarker')\n    return factoryWhitespace(effects, open)\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (code === 41) {\n      return end(code)\n    }\n\n    return factoryDestination(\n      effects,\n      destinationAfter,\n      nok,\n      'resourceDestination',\n      'resourceDestinationLiteral',\n      'resourceDestinationLiteralMarker',\n      'resourceDestinationRaw',\n      'resourceDestinationString',\n      32\n    )(code)\n  }\n  /** @type {State} */\n\n  function destinationAfter(code) {\n    return markdownLineEndingOrSpace(code)\n      ? factoryWhitespace(effects, between)(code)\n      : end(code)\n  }\n  /** @type {State} */\n\n  function between(code) {\n    if (code === 34 || code === 39 || code === 40) {\n      return factoryTitle(\n        effects,\n        factoryWhitespace(effects, end),\n        nok,\n        'resourceTitle',\n        'resourceTitleMarker',\n        'resourceTitleString'\n      )(code)\n    }\n\n    return end(code)\n  }\n  /** @type {State} */\n\n  function end(code) {\n    if (code === 41) {\n      effects.enter('resourceMarker')\n      effects.consume(code)\n      effects.exit('resourceMarker')\n      effects.exit('resource')\n      return ok\n    }\n\n    return nok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeFullReference(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    return factoryLabel.call(\n      self,\n      effects,\n      afterLabel,\n      nok,\n      'reference',\n      'referenceMarker',\n      'referenceString'\n    )(code)\n  }\n  /** @type {State} */\n\n  function afterLabel(code) {\n    return self.parser.defined.includes(\n      normalizeIdentifier(\n        self.sliceSerialize(self.events[self.events.length - 1][1]).slice(1, -1)\n      )\n    )\n      ? ok(code)\n      : nok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeCollapsedReference(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('reference')\n    effects.enter('referenceMarker')\n    effects.consume(code)\n    effects.exit('referenceMarker')\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (code === 93) {\n      effects.enter('referenceMarker')\n      effects.consume(code)\n      effects.exit('referenceMarker')\n      effects.exit('reference')\n      return ok\n    }\n\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {labelEnd} from './label-end.js'\n/** @type {Construct} */\n\nexport const labelStartImage = {\n  name: 'labelStartImage',\n  tokenize: tokenizeLabelStartImage,\n  resolveAll: labelEnd.resolveAll\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeLabelStartImage(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('labelImage')\n    effects.enter('labelImageMarker')\n    effects.consume(code)\n    effects.exit('labelImageMarker')\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (code === 91) {\n      effects.enter('labelMarker')\n      effects.consume(code)\n      effects.exit('labelMarker')\n      effects.exit('labelImage')\n      return after\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function after(code) {\n    /* To do: remove in the future once we’ve switched from\n     * `micromark-extension-footnote` to `micromark-extension-gfm-footnote`,\n     * which doesn’t need this */\n\n    /* Hidden footnotes hook */\n\n    /* c8 ignore next 3 */\n    return code === 94 && '_hiddenFootnoteSupport' in self.parser.constructs\n      ? nok(code)\n      : ok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {\n  markdownLineEndingOrSpace,\n  unicodePunctuation,\n  unicodeWhitespace\n} from 'micromark-util-character'\n\n/**\n * Classify whether a character code represents whitespace, punctuation, or\n * something else.\n *\n * Used for attention (emphasis, strong), whose sequences can open or close\n * based on the class of surrounding characters.\n *\n * Note that eof (`null`) is seen as whitespace.\n *\n * @param {Code} code\n * @returns {number|undefined}\n */\nexport function classifyCharacter(code) {\n  if (\n    code === null ||\n    markdownLineEndingOrSpace(code) ||\n    unicodeWhitespace(code)\n  ) {\n    return 1\n  }\n\n  if (unicodePunctuation(code)) {\n    return 2\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Point} Point\n */\nimport {push, splice} from 'micromark-util-chunked'\nimport {classifyCharacter} from 'micromark-util-classify-character'\nimport {resolveAll} from 'micromark-util-resolve-all'\n\n/** @type {Construct} */\nexport const attention = {\n  name: 'attention',\n  tokenize: tokenizeAttention,\n  resolveAll: resolveAllAttention\n}\n/**\n * Take all events and resolve attention to emphasis or strong.\n *\n * @type {Resolver}\n */\n\nfunction resolveAllAttention(events, context) {\n  let index = -1\n  /** @type {number} */\n\n  let open\n  /** @type {Token} */\n\n  let group\n  /** @type {Token} */\n\n  let text\n  /** @type {Token} */\n\n  let openingSequence\n  /** @type {Token} */\n\n  let closingSequence\n  /** @type {number} */\n\n  let use\n  /** @type {Event[]} */\n\n  let nextEvents\n  /** @type {number} */\n\n  let offset // Walk through all events.\n  //\n  // Note: performance of this is fine on an mb of normal markdown, but it’s\n  // a bottleneck for malicious stuff.\n\n  while (++index < events.length) {\n    // Find a token that can close.\n    if (\n      events[index][0] === 'enter' &&\n      events[index][1].type === 'attentionSequence' &&\n      events[index][1]._close\n    ) {\n      open = index // Now walk back to find an opener.\n\n      while (open--) {\n        // Find a token that can open the closer.\n        if (\n          events[open][0] === 'exit' &&\n          events[open][1].type === 'attentionSequence' &&\n          events[open][1]._open && // If the markers are the same:\n          context.sliceSerialize(events[open][1]).charCodeAt(0) ===\n            context.sliceSerialize(events[index][1]).charCodeAt(0)\n        ) {\n          // If the opening can close or the closing can open,\n          // and the close size *is not* a multiple of three,\n          // but the sum of the opening and closing size *is* multiple of three,\n          // then don’t match.\n          if (\n            (events[open][1]._close || events[index][1]._open) &&\n            (events[index][1].end.offset - events[index][1].start.offset) % 3 &&\n            !(\n              (events[open][1].end.offset -\n                events[open][1].start.offset +\n                events[index][1].end.offset -\n                events[index][1].start.offset) %\n              3\n            )\n          ) {\n            continue\n          } // Number of markers to use from the sequence.\n\n          use =\n            events[open][1].end.offset - events[open][1].start.offset > 1 &&\n            events[index][1].end.offset - events[index][1].start.offset > 1\n              ? 2\n              : 1\n          const start = Object.assign({}, events[open][1].end)\n          const end = Object.assign({}, events[index][1].start)\n          movePoint(start, -use)\n          movePoint(end, use)\n          openingSequence = {\n            type: use > 1 ? 'strongSequence' : 'emphasisSequence',\n            start,\n            end: Object.assign({}, events[open][1].end)\n          }\n          closingSequence = {\n            type: use > 1 ? 'strongSequence' : 'emphasisSequence',\n            start: Object.assign({}, events[index][1].start),\n            end\n          }\n          text = {\n            type: use > 1 ? 'strongText' : 'emphasisText',\n            start: Object.assign({}, events[open][1].end),\n            end: Object.assign({}, events[index][1].start)\n          }\n          group = {\n            type: use > 1 ? 'strong' : 'emphasis',\n            start: Object.assign({}, openingSequence.start),\n            end: Object.assign({}, closingSequence.end)\n          }\n          events[open][1].end = Object.assign({}, openingSequence.start)\n          events[index][1].start = Object.assign({}, closingSequence.end)\n          nextEvents = [] // If there are more markers in the opening, add them before.\n\n          if (events[open][1].end.offset - events[open][1].start.offset) {\n            nextEvents = push(nextEvents, [\n              ['enter', events[open][1], context],\n              ['exit', events[open][1], context]\n            ])\n          } // Opening.\n\n          nextEvents = push(nextEvents, [\n            ['enter', group, context],\n            ['enter', openingSequence, context],\n            ['exit', openingSequence, context],\n            ['enter', text, context]\n          ]) // Between.\n\n          nextEvents = push(\n            nextEvents,\n            resolveAll(\n              context.parser.constructs.insideSpan.null,\n              events.slice(open + 1, index),\n              context\n            )\n          ) // Closing.\n\n          nextEvents = push(nextEvents, [\n            ['exit', text, context],\n            ['enter', closingSequence, context],\n            ['exit', closingSequence, context],\n            ['exit', group, context]\n          ]) // If there are more markers in the closing, add them after.\n\n          if (events[index][1].end.offset - events[index][1].start.offset) {\n            offset = 2\n            nextEvents = push(nextEvents, [\n              ['enter', events[index][1], context],\n              ['exit', events[index][1], context]\n            ])\n          } else {\n            offset = 0\n          }\n\n          splice(events, open - 1, index - open + 3, nextEvents)\n          index = open + nextEvents.length - offset - 2\n          break\n        }\n      }\n    }\n  } // Remove remaining sequences.\n\n  index = -1\n\n  while (++index < events.length) {\n    if (events[index][1].type === 'attentionSequence') {\n      events[index][1].type = 'data'\n    }\n  }\n\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeAttention(effects, ok) {\n  const attentionMarkers = this.parser.constructs.attentionMarkers.null\n  const previous = this.previous\n  const before = classifyCharacter(previous)\n  /** @type {NonNullable<Code>} */\n\n  let marker\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('attentionSequence')\n    marker = code\n    return sequence(code)\n  }\n  /** @type {State} */\n\n  function sequence(code) {\n    if (code === marker) {\n      effects.consume(code)\n      return sequence\n    }\n\n    const token = effects.exit('attentionSequence')\n    const after = classifyCharacter(code)\n    const open =\n      !after || (after === 2 && before) || attentionMarkers.includes(code)\n    const close =\n      !before || (before === 2 && after) || attentionMarkers.includes(previous)\n    token._open = Boolean(marker === 42 ? open : open && (before || !close))\n    token._close = Boolean(marker === 42 ? close : close && (after || !open))\n    return ok(code)\n  }\n}\n/**\n * Move a point a bit.\n *\n * Note: `move` only works inside lines! It’s not possible to move past other\n * chunks (replacement characters, tabs, or line endings).\n *\n * @param {Point} point\n * @param {number} offset\n * @returns {void}\n */\n\nfunction movePoint(point, offset) {\n  point.column += offset\n  point.offset += offset\n  point._bufferIndex += offset\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {\n  asciiAlpha,\n  asciiAlphanumeric,\n  asciiAtext,\n  asciiControl\n} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const autolink = {\n  name: 'autolink',\n  tokenize: tokenizeAutolink\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeAutolink(effects, ok, nok) {\n  let size = 1\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('autolink')\n    effects.enter('autolinkMarker')\n    effects.consume(code)\n    effects.exit('autolinkMarker')\n    effects.enter('autolinkProtocol')\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return schemeOrEmailAtext\n    }\n\n    return asciiAtext(code) ? emailAtext(code) : nok(code)\n  }\n  /** @type {State} */\n\n  function schemeOrEmailAtext(code) {\n    return code === 43 || code === 45 || code === 46 || asciiAlphanumeric(code)\n      ? schemeInsideOrEmailAtext(code)\n      : emailAtext(code)\n  }\n  /** @type {State} */\n\n  function schemeInsideOrEmailAtext(code) {\n    if (code === 58) {\n      effects.consume(code)\n      return urlInside\n    }\n\n    if (\n      (code === 43 || code === 45 || code === 46 || asciiAlphanumeric(code)) &&\n      size++ < 32\n    ) {\n      effects.consume(code)\n      return schemeInsideOrEmailAtext\n    }\n\n    return emailAtext(code)\n  }\n  /** @type {State} */\n\n  function urlInside(code) {\n    if (code === 62) {\n      effects.exit('autolinkProtocol')\n      return end(code)\n    }\n\n    if (code === null || code === 32 || code === 60 || asciiControl(code)) {\n      return nok(code)\n    }\n\n    effects.consume(code)\n    return urlInside\n  }\n  /** @type {State} */\n\n  function emailAtext(code) {\n    if (code === 64) {\n      effects.consume(code)\n      size = 0\n      return emailAtSignOrDot\n    }\n\n    if (asciiAtext(code)) {\n      effects.consume(code)\n      return emailAtext\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function emailAtSignOrDot(code) {\n    return asciiAlphanumeric(code) ? emailLabel(code) : nok(code)\n  }\n  /** @type {State} */\n\n  function emailLabel(code) {\n    if (code === 46) {\n      effects.consume(code)\n      size = 0\n      return emailAtSignOrDot\n    }\n\n    if (code === 62) {\n      // Exit, then change the type.\n      effects.exit('autolinkProtocol').type = 'autolinkEmail'\n      return end(code)\n    }\n\n    return emailValue(code)\n  }\n  /** @type {State} */\n\n  function emailValue(code) {\n    if ((code === 45 || asciiAlphanumeric(code)) && size++ < 63) {\n      effects.consume(code)\n      return code === 45 ? emailValue : emailLabel\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function end(code) {\n    effects.enter('autolinkMarker')\n    effects.consume(code)\n    effects.exit('autolinkMarker')\n    effects.exit('autolink')\n    return ok\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {\n  asciiAlpha,\n  asciiAlphanumeric,\n  markdownLineEnding,\n  markdownLineEndingOrSpace,\n  markdownSpace\n} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const htmlText = {\n  name: 'htmlText',\n  tokenize: tokenizeHtmlText\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeHtmlText(effects, ok, nok) {\n  const self = this\n  /** @type {NonNullable<Code>|undefined} */\n\n  let marker\n  /** @type {string} */\n\n  let buffer\n  /** @type {number} */\n\n  let index\n  /** @type {State} */\n\n  let returnState\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('htmlText')\n    effects.enter('htmlTextData')\n    effects.consume(code)\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (code === 33) {\n      effects.consume(code)\n      return declarationOpen\n    }\n\n    if (code === 47) {\n      effects.consume(code)\n      return tagCloseStart\n    }\n\n    if (code === 63) {\n      effects.consume(code)\n      return instruction\n    }\n\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return tagOpen\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function declarationOpen(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return commentOpen\n    }\n\n    if (code === 91) {\n      effects.consume(code)\n      buffer = 'CDATA['\n      index = 0\n      return cdataOpen\n    }\n\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return declaration\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function commentOpen(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return commentStart\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function commentStart(code) {\n    if (code === null || code === 62) {\n      return nok(code)\n    }\n\n    if (code === 45) {\n      effects.consume(code)\n      return commentStartDash\n    }\n\n    return comment(code)\n  }\n  /** @type {State} */\n\n  function commentStartDash(code) {\n    if (code === null || code === 62) {\n      return nok(code)\n    }\n\n    return comment(code)\n  }\n  /** @type {State} */\n\n  function comment(code) {\n    if (code === null) {\n      return nok(code)\n    }\n\n    if (code === 45) {\n      effects.consume(code)\n      return commentClose\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = comment\n      return atLineEnding(code)\n    }\n\n    effects.consume(code)\n    return comment\n  }\n  /** @type {State} */\n\n  function commentClose(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return end\n    }\n\n    return comment(code)\n  }\n  /** @type {State} */\n\n  function cdataOpen(code) {\n    if (code === buffer.charCodeAt(index++)) {\n      effects.consume(code)\n      return index === buffer.length ? cdata : cdataOpen\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function cdata(code) {\n    if (code === null) {\n      return nok(code)\n    }\n\n    if (code === 93) {\n      effects.consume(code)\n      return cdataClose\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = cdata\n      return atLineEnding(code)\n    }\n\n    effects.consume(code)\n    return cdata\n  }\n  /** @type {State} */\n\n  function cdataClose(code) {\n    if (code === 93) {\n      effects.consume(code)\n      return cdataEnd\n    }\n\n    return cdata(code)\n  }\n  /** @type {State} */\n\n  function cdataEnd(code) {\n    if (code === 62) {\n      return end(code)\n    }\n\n    if (code === 93) {\n      effects.consume(code)\n      return cdataEnd\n    }\n\n    return cdata(code)\n  }\n  /** @type {State} */\n\n  function declaration(code) {\n    if (code === null || code === 62) {\n      return end(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = declaration\n      return atLineEnding(code)\n    }\n\n    effects.consume(code)\n    return declaration\n  }\n  /** @type {State} */\n\n  function instruction(code) {\n    if (code === null) {\n      return nok(code)\n    }\n\n    if (code === 63) {\n      effects.consume(code)\n      return instructionClose\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = instruction\n      return atLineEnding(code)\n    }\n\n    effects.consume(code)\n    return instruction\n  }\n  /** @type {State} */\n\n  function instructionClose(code) {\n    return code === 62 ? end(code) : instruction(code)\n  }\n  /** @type {State} */\n\n  function tagCloseStart(code) {\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return tagClose\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function tagClose(code) {\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code)\n      return tagClose\n    }\n\n    return tagCloseBetween(code)\n  }\n  /** @type {State} */\n\n  function tagCloseBetween(code) {\n    if (markdownLineEnding(code)) {\n      returnState = tagCloseBetween\n      return atLineEnding(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagCloseBetween\n    }\n\n    return end(code)\n  }\n  /** @type {State} */\n\n  function tagOpen(code) {\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code)\n      return tagOpen\n    }\n\n    if (code === 47 || code === 62 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code)\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function tagOpenBetween(code) {\n    if (code === 47) {\n      effects.consume(code)\n      return end\n    }\n\n    if (code === 58 || code === 95 || asciiAlpha(code)) {\n      effects.consume(code)\n      return tagOpenAttributeName\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenBetween\n      return atLineEnding(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagOpenBetween\n    }\n\n    return end(code)\n  }\n  /** @type {State} */\n\n  function tagOpenAttributeName(code) {\n    if (\n      code === 45 ||\n      code === 46 ||\n      code === 58 ||\n      code === 95 ||\n      asciiAlphanumeric(code)\n    ) {\n      effects.consume(code)\n      return tagOpenAttributeName\n    }\n\n    return tagOpenAttributeNameAfter(code)\n  }\n  /** @type {State} */\n\n  function tagOpenAttributeNameAfter(code) {\n    if (code === 61) {\n      effects.consume(code)\n      return tagOpenAttributeValueBefore\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeNameAfter\n      return atLineEnding(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagOpenAttributeNameAfter\n    }\n\n    return tagOpenBetween(code)\n  }\n  /** @type {State} */\n\n  function tagOpenAttributeValueBefore(code) {\n    if (\n      code === null ||\n      code === 60 ||\n      code === 61 ||\n      code === 62 ||\n      code === 96\n    ) {\n      return nok(code)\n    }\n\n    if (code === 34 || code === 39) {\n      effects.consume(code)\n      marker = code\n      return tagOpenAttributeValueQuoted\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeValueBefore\n      return atLineEnding(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagOpenAttributeValueBefore\n    }\n\n    effects.consume(code)\n    marker = undefined\n    return tagOpenAttributeValueUnquoted\n  }\n  /** @type {State} */\n\n  function tagOpenAttributeValueQuoted(code) {\n    if (code === marker) {\n      effects.consume(code)\n      return tagOpenAttributeValueQuotedAfter\n    }\n\n    if (code === null) {\n      return nok(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeValueQuoted\n      return atLineEnding(code)\n    }\n\n    effects.consume(code)\n    return tagOpenAttributeValueQuoted\n  }\n  /** @type {State} */\n\n  function tagOpenAttributeValueQuotedAfter(code) {\n    if (code === 62 || code === 47 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code)\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function tagOpenAttributeValueUnquoted(code) {\n    if (\n      code === null ||\n      code === 34 ||\n      code === 39 ||\n      code === 60 ||\n      code === 61 ||\n      code === 96\n    ) {\n      return nok(code)\n    }\n\n    if (code === 62 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code)\n    }\n\n    effects.consume(code)\n    return tagOpenAttributeValueUnquoted\n  } // We can’t have blank lines in content, so no need to worry about empty\n  // tokens.\n\n  /** @type {State} */\n\n  function atLineEnding(code) {\n    effects.exit('htmlTextData')\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return factorySpace(\n      effects,\n      afterPrefix,\n      'linePrefix',\n      self.parser.constructs.disable.null.includes('codeIndented')\n        ? undefined\n        : 4\n    )\n  }\n  /** @type {State} */\n\n  function afterPrefix(code) {\n    effects.enter('htmlTextData')\n    return returnState(code)\n  }\n  /** @type {State} */\n\n  function end(code) {\n    if (code === 62) {\n      effects.consume(code)\n      effects.exit('htmlTextData')\n      effects.exit('htmlText')\n      return ok\n    }\n\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {labelEnd} from './label-end.js'\n/** @type {Construct} */\n\nexport const labelStartLink = {\n  name: 'labelStartLink',\n  tokenize: tokenizeLabelStartLink,\n  resolveAll: labelEnd.resolveAll\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeLabelStartLink(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('labelLink')\n    effects.enter('labelMarker')\n    effects.consume(code)\n    effects.exit('labelMarker')\n    effects.exit('labelLink')\n    return after\n  }\n  /** @type {State} */\n\n  function after(code) {\n    /* To do: remove in the future once we’ve switched from\n     * `micromark-extension-footnote` to `micromark-extension-gfm-footnote`,\n     * which doesn’t need this */\n\n    /* Hidden footnotes hook. */\n\n    /* c8 ignore next 3 */\n    return code === 94 && '_hiddenFootnoteSupport' in self.parser.constructs\n      ? nok(code)\n      : ok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const hardBreakEscape = {\n  name: 'hardBreakEscape',\n  tokenize: tokenizeHardBreakEscape\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeHardBreakEscape(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('hardBreakEscape')\n    effects.enter('escapeMarker')\n    effects.consume(code)\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (markdownLineEnding(code)) {\n      effects.exit('escapeMarker')\n      effects.exit('hardBreakEscape')\n      return ok(code)\n    }\n\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Previous} Previous\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n */\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const codeText = {\n  name: 'codeText',\n  tokenize: tokenizeCodeText,\n  resolve: resolveCodeText,\n  previous\n}\n/** @type {Resolver} */\n\nfunction resolveCodeText(events) {\n  let tailExitIndex = events.length - 4\n  let headEnterIndex = 3\n  /** @type {number} */\n\n  let index\n  /** @type {number|undefined} */\n\n  let enter // If we start and end with an EOL or a space.\n\n  if (\n    (events[headEnterIndex][1].type === 'lineEnding' ||\n      events[headEnterIndex][1].type === 'space') &&\n    (events[tailExitIndex][1].type === 'lineEnding' ||\n      events[tailExitIndex][1].type === 'space')\n  ) {\n    index = headEnterIndex // And we have data.\n\n    while (++index < tailExitIndex) {\n      if (events[index][1].type === 'codeTextData') {\n        // Then we have padding.\n        events[headEnterIndex][1].type = 'codeTextPadding'\n        events[tailExitIndex][1].type = 'codeTextPadding'\n        headEnterIndex += 2\n        tailExitIndex -= 2\n        break\n      }\n    }\n  } // Merge adjacent spaces and data.\n\n  index = headEnterIndex - 1\n  tailExitIndex++\n\n  while (++index <= tailExitIndex) {\n    if (enter === undefined) {\n      if (index !== tailExitIndex && events[index][1].type !== 'lineEnding') {\n        enter = index\n      }\n    } else if (\n      index === tailExitIndex ||\n      events[index][1].type === 'lineEnding'\n    ) {\n      events[enter][1].type = 'codeTextData'\n\n      if (index !== enter + 2) {\n        events[enter][1].end = events[index - 1][1].end\n        events.splice(enter + 2, index - enter - 2)\n        tailExitIndex -= index - enter - 2\n        index = enter + 2\n      }\n\n      enter = undefined\n    }\n  }\n\n  return events\n}\n/** @type {Previous} */\n\nfunction previous(code) {\n  // If there is a previous code, there will always be a tail.\n  return (\n    code !== 96 ||\n    this.events[this.events.length - 1][1].type === 'characterEscape'\n  )\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeCodeText(effects, ok, nok) {\n  const self = this\n  let sizeOpen = 0\n  /** @type {number} */\n\n  let size\n  /** @type {Token} */\n\n  let token\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('codeText')\n    effects.enter('codeTextSequence')\n    return openingSequence(code)\n  }\n  /** @type {State} */\n\n  function openingSequence(code) {\n    if (code === 96) {\n      effects.consume(code)\n      sizeOpen++\n      return openingSequence\n    }\n\n    effects.exit('codeTextSequence')\n    return gap(code)\n  }\n  /** @type {State} */\n\n  function gap(code) {\n    // EOF.\n    if (code === null) {\n      return nok(code)\n    } // Closing fence?\n    // Could also be data.\n\n    if (code === 96) {\n      token = effects.enter('codeTextSequence')\n      size = 0\n      return closingSequence(code)\n    } // Tabs don’t work, and virtual spaces don’t make sense.\n\n    if (code === 32) {\n      effects.enter('space')\n      effects.consume(code)\n      effects.exit('space')\n      return gap\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return gap\n    } // Data.\n\n    effects.enter('codeTextData')\n    return data(code)\n  } // In code.\n\n  /** @type {State} */\n\n  function data(code) {\n    if (\n      code === null ||\n      code === 32 ||\n      code === 96 ||\n      markdownLineEnding(code)\n    ) {\n      effects.exit('codeTextData')\n      return gap(code)\n    }\n\n    effects.consume(code)\n    return data\n  } // Closing fence.\n\n  /** @type {State} */\n\n  function closingSequence(code) {\n    // More.\n    if (code === 96) {\n      effects.consume(code)\n      size++\n      return closingSequence\n    } // Done!\n\n    if (size === sizeOpen) {\n      effects.exit('codeTextSequence')\n      effects.exit('codeText')\n      return ok(code)\n    } // More or less accents: mark as data.\n\n    token.type = 'codeTextData'\n    return data(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Extension} Extension\n */\nimport {\n  attention,\n  autolink,\n  blockQuote,\n  characterEscape,\n  characterReference,\n  codeFenced,\n  codeIndented,\n  codeText,\n  definition,\n  hardBreakEscape,\n  headingAtx,\n  htmlFlow,\n  htmlText,\n  labelEnd,\n  labelStartImage,\n  labelStartLink,\n  lineEnding,\n  list,\n  setextUnderline,\n  thematicBreak\n} from 'micromark-core-commonmark'\nimport {resolver as resolveText} from './initialize/text.js'\n/** @type {Extension['document']} */\n\nexport const document = {\n  [42]: list,\n  [43]: list,\n  [45]: list,\n  [48]: list,\n  [49]: list,\n  [50]: list,\n  [51]: list,\n  [52]: list,\n  [53]: list,\n  [54]: list,\n  [55]: list,\n  [56]: list,\n  [57]: list,\n  [62]: blockQuote\n}\n/** @type {Extension['contentInitial']} */\n\nexport const contentInitial = {\n  [91]: definition\n}\n/** @type {Extension['flowInitial']} */\n\nexport const flowInitial = {\n  [-2]: codeIndented,\n  [-1]: codeIndented,\n  [32]: codeIndented\n}\n/** @type {Extension['flow']} */\n\nexport const flow = {\n  [35]: headingAtx,\n  [42]: thematicBreak,\n  [45]: [setextUnderline, thematicBreak],\n  [60]: htmlFlow,\n  [61]: setextUnderline,\n  [95]: thematicBreak,\n  [96]: codeFenced,\n  [126]: codeFenced\n}\n/** @type {Extension['string']} */\n\nexport const string = {\n  [38]: characterReference,\n  [92]: characterEscape\n}\n/** @type {Extension['text']} */\n\nexport const text = {\n  [-5]: lineEnding,\n  [-4]: lineEnding,\n  [-3]: lineEnding,\n  [33]: labelStartImage,\n  [38]: characterReference,\n  [42]: attention,\n  [60]: [autolink, htmlText],\n  [91]: labelStartLink,\n  [92]: [hardBreakEscape, characterEscape],\n  [93]: labelEnd,\n  [95]: attention,\n  [96]: codeText\n}\n/** @type {Extension['insideSpan']} */\n\nexport const insideSpan = {\n  null: [attention, resolveText]\n}\n/** @type {Extension['attentionMarkers']} */\n\nexport const attentionMarkers = {\n  null: [42, 95]\n}\n/** @type {Extension['disable']} */\n\nexport const disable = {\n  null: []\n}\n","/**\n * @typedef {import('micromark-util-types').Encoding} Encoding\n * @typedef {import('micromark-util-types').Value} Value\n * @typedef {import('micromark-util-types').Chunk} Chunk\n * @typedef {import('micromark-util-types').Code} Code\n */\n\n/**\n * @callback Preprocessor\n * @param {Value} value\n * @param {Encoding} [encoding]\n * @param {boolean} [end=false]\n * @returns {Chunk[]}\n */\nconst search = /[\\0\\t\\n\\r]/g\n/**\n * @returns {Preprocessor}\n */\n\nexport function preprocess() {\n  let column = 1\n  let buffer = ''\n  /** @type {boolean|undefined} */\n\n  let start = true\n  /** @type {boolean|undefined} */\n\n  let atCarriageReturn\n  return preprocessor\n  /** @type {Preprocessor} */\n\n  function preprocessor(value, encoding, end) {\n    /** @type {Chunk[]} */\n    const chunks = []\n    /** @type {RegExpMatchArray|null} */\n\n    let match\n    /** @type {number} */\n\n    let next\n    /** @type {number} */\n\n    let startPosition\n    /** @type {number} */\n\n    let endPosition\n    /** @type {Code} */\n\n    let code // @ts-expect-error `Buffer` does allow an encoding.\n\n    value = buffer + value.toString(encoding)\n    startPosition = 0\n    buffer = ''\n\n    if (start) {\n      if (value.charCodeAt(0) === 65279) {\n        startPosition++\n      }\n\n      start = undefined\n    }\n\n    while (startPosition < value.length) {\n      search.lastIndex = startPosition\n      match = search.exec(value)\n      endPosition =\n        match && match.index !== undefined ? match.index : value.length\n      code = value.charCodeAt(endPosition)\n\n      if (!match) {\n        buffer = value.slice(startPosition)\n        break\n      }\n\n      if (code === 10 && startPosition === endPosition && atCarriageReturn) {\n        chunks.push(-3)\n        atCarriageReturn = undefined\n      } else {\n        if (atCarriageReturn) {\n          chunks.push(-5)\n          atCarriageReturn = undefined\n        }\n\n        if (startPosition < endPosition) {\n          chunks.push(value.slice(startPosition, endPosition))\n          column += endPosition - startPosition\n        }\n\n        switch (code) {\n          case 0: {\n            chunks.push(65533)\n            column++\n            break\n          }\n\n          case 9: {\n            next = Math.ceil(column / 4) * 4\n            chunks.push(-2)\n\n            while (column++ < next) chunks.push(-1)\n\n            break\n          }\n\n          case 10: {\n            chunks.push(-4)\n            column = 1\n            break\n          }\n\n          default: {\n            atCarriageReturn = true\n            column = 1\n          }\n        }\n      }\n\n      startPosition = endPosition + 1\n    }\n\n    if (end) {\n      if (atCarriageReturn) chunks.push(-5)\n      if (buffer) chunks.push(buffer)\n      chunks.push(null)\n    }\n\n    return chunks\n  }\n}\n","/**\n * Turn the number (in string form as either hexa- or plain decimal) coming from\n * a numeric character reference into a character.\n *\n * @param {string} value\n *   Value to decode.\n * @param {number} base\n *   Numeric base.\n * @returns {string}\n */\nexport function decodeNumericCharacterReference(value, base) {\n  const code = Number.parseInt(value, base)\n\n  if (\n    // C0 except for HT, LF, FF, CR, space\n    code < 9 ||\n    code === 11 ||\n    (code > 13 && code < 32) || // Control character (DEL) of the basic block and C1 controls.\n    (code > 126 && code < 160) || // Lone high surrogates and low surrogates.\n    (code > 55295 && code < 57344) || // Noncharacters.\n    (code > 64975 && code < 65008) ||\n    (code & 65535) === 65535 ||\n    (code & 65535) === 65534 || // Out of range\n    code > 1114111\n  ) {\n    return '\\uFFFD'\n  }\n\n  return String.fromCharCode(code)\n}\n","import {decodeNamedCharacterReference} from 'decode-named-character-reference'\nimport {decodeNumericCharacterReference} from 'micromark-util-decode-numeric-character-reference'\nconst characterEscapeOrReference =\n  /\\\\([!-/:-@[-`{-~])|&(#(?:\\d{1,7}|x[\\da-f]{1,6})|[\\da-z]{1,31});/gi\n/**\n * Utility to decode markdown strings (which occur in places such as fenced\n * code info strings, destinations, labels, and titles).\n * The “string” content type allows character escapes and -references.\n * This decodes those.\n *\n * @param {string} value\n * @returns {string}\n */\n\nexport function decodeString(value) {\n  return value.replace(characterEscapeOrReference, decode)\n}\n/**\n * @param {string} $0\n * @param {string} $1\n * @param {string} $2\n * @returns {string}\n */\n\nfunction decode($0, $1, $2) {\n  if ($1) {\n    // Escape.\n    return $1\n  } // Reference.\n\n  const head = $2.charCodeAt(0)\n\n  if (head === 35) {\n    const head = $2.charCodeAt(1)\n    const hex = head === 120 || head === 88\n    return decodeNumericCharacterReference($2.slice(hex ? 2 : 1), hex ? 16 : 10)\n  }\n\n  return decodeNamedCharacterReference($2) || $0\n}\n","/**\n * @typedef {import('micromark-util-types').Encoding} Encoding\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').ParseOptions} ParseOptions\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Value} Value\n * @typedef {import('unist').Parent} UnistParent\n * @typedef {import('unist').Point} Point\n * @typedef {import('mdast').PhrasingContent} PhrasingContent\n * @typedef {import('mdast').Content} Content\n * @typedef {Root|Content} Node\n * @typedef {Extract<Node, UnistParent>} Parent\n * @typedef {import('mdast').Break} Break\n * @typedef {import('mdast').Blockquote} Blockquote\n * @typedef {import('mdast').Code} Code\n * @typedef {import('mdast').Definition} Definition\n * @typedef {import('mdast').Emphasis} Emphasis\n * @typedef {import('mdast').Heading} Heading\n * @typedef {import('mdast').HTML} HTML\n * @typedef {import('mdast').Image} Image\n * @typedef {import('mdast').ImageReference} ImageReference\n * @typedef {import('mdast').InlineCode} InlineCode\n * @typedef {import('mdast').Link} Link\n * @typedef {import('mdast').LinkReference} LinkReference\n * @typedef {import('mdast').List} List\n * @typedef {import('mdast').ListItem} ListItem\n * @typedef {import('mdast').Paragraph} Paragraph\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast').Strong} Strong\n * @typedef {import('mdast').Text} Text\n * @typedef {import('mdast').ThematicBreak} ThematicBreak\n *\n * @typedef {UnistParent & {type: 'fragment', children: Array<PhrasingContent>}} Fragment\n */\n\n/**\n * @typedef _CompileDataFields\n * @property {boolean|undefined} expectingFirstListItemValue\n * @property {boolean|undefined} flowCodeInside\n * @property {boolean|undefined} setextHeadingSlurpLineEnding\n * @property {boolean|undefined} atHardBreak\n * @property {'collapsed'|'full'} referenceType\n * @property {boolean|undefined} inReference\n * @property {'characterReferenceMarkerHexadecimal'|'characterReferenceMarkerNumeric'} characterReferenceType\n *\n * @typedef {Record<string, unknown> & Partial<_CompileDataFields>} CompileData\n *\n * @typedef {(tree: Root) => Root|void} Transform\n * @typedef {(this: CompileContext, token: Token) => void} Handle\n * @typedef {Record<string, Handle>} Handles\n *   Token types mapping to handles\n * @typedef {Record<string, Record<string, unknown>|Array<unknown>> & {canContainEols: Array<string>, transforms: Array<Transform>, enter: Handles, exit: Handles}} NormalizedExtension\n * @typedef {Partial<NormalizedExtension>} Extension\n *   An mdast extension changes how markdown tokens are turned into mdast.\n *\n * @typedef {(this: Omit<CompileContext, 'sliceSerialize'>, left: Token|undefined, right: Token) => void} OnEnterError\n * @typedef {(this: Omit<CompileContext, 'sliceSerialize'>, left: Token, right: Token) => void} OnExitError\n *\n * @typedef CompileContext\n *   mdast compiler context\n * @property {Array<Node | Fragment>} stack\n * @property {Array<[Token, OnEnterError|undefined]>} tokenStack\n * @property {(key: string, value?: unknown) => void} setData\n *   Set data into the key-value store.\n * @property {<K extends string>(key: K) => CompileData[K]} getData\n *   Get data from the key-value store.\n * @property {(this: CompileContext) => void} buffer\n *   Capture some of the output data.\n * @property {(this: CompileContext) => string} resume\n *   Stop capturing and access the output data.\n * @property {<N extends Node>(this: CompileContext, node: N, token: Token, onError?: OnEnterError) => N} enter\n *   Enter a token.\n * @property {(this: CompileContext, token: Token, onError?: OnExitError) => Node} exit\n *   Exit a token.\n * @property {TokenizeContext['sliceSerialize']} sliceSerialize\n *   Get the string value of a token.\n * @property {NormalizedExtension} config\n *   Configuration.\n *\n * @typedef {{mdastExtensions?: Array<Extension|Array<Extension>>}} FromMarkdownOptions\n * @typedef {ParseOptions & FromMarkdownOptions} Options\n */\nimport {toString} from 'mdast-util-to-string'\nimport {parse} from 'micromark/lib/parse.js'\nimport {preprocess} from 'micromark/lib/preprocess.js'\nimport {postprocess} from 'micromark/lib/postprocess.js'\nimport {decodeNumericCharacterReference} from 'micromark-util-decode-numeric-character-reference'\nimport {decodeString} from 'micromark-util-decode-string'\nimport {normalizeIdentifier} from 'micromark-util-normalize-identifier'\nimport {decodeNamedCharacterReference} from 'decode-named-character-reference'\nimport {stringifyPosition} from 'unist-util-stringify-position'\nconst own = {}.hasOwnProperty\n/**\n * @param value Markdown to parse (`string` or `Buffer`).\n * @param [encoding] Character encoding to understand `value` as when it’s a `Buffer` (`string`, default: `'utf8'`).\n * @param [options] Configuration\n */\n\nexport const fromMarkdown =\n  /**\n   * @type {(\n   *   ((value: Value, encoding: Encoding, options?: Options) => Root) &\n   *   ((value: Value, options?: Options) => Root)\n   * )}\n   */\n\n  /**\n   * @param {Value} value\n   * @param {Encoding} [encoding]\n   * @param {Options} [options]\n   * @returns {Root}\n   */\n  function (value, encoding, options) {\n    if (typeof encoding !== 'string') {\n      options = encoding\n      encoding = undefined\n    }\n\n    return compiler(options)(\n      postprocess(\n        parse(options).document().write(preprocess()(value, encoding, true))\n      )\n    )\n  }\n/**\n * Note this compiler only understand complete buffering, not streaming.\n *\n * @param {Options} [options]\n */\n\nfunction compiler(options = {}) {\n  /** @type {NormalizedExtension} */\n  // @ts-expect-error: our base has all required fields, so the result will too.\n  const config = configure(\n    {\n      transforms: [],\n      canContainEols: [\n        'emphasis',\n        'fragment',\n        'heading',\n        'paragraph',\n        'strong'\n      ],\n      enter: {\n        autolink: opener(link),\n        autolinkProtocol: onenterdata,\n        autolinkEmail: onenterdata,\n        atxHeading: opener(heading),\n        blockQuote: opener(blockQuote),\n        characterEscape: onenterdata,\n        characterReference: onenterdata,\n        codeFenced: opener(codeFlow),\n        codeFencedFenceInfo: buffer,\n        codeFencedFenceMeta: buffer,\n        codeIndented: opener(codeFlow, buffer),\n        codeText: opener(codeText, buffer),\n        codeTextData: onenterdata,\n        data: onenterdata,\n        codeFlowValue: onenterdata,\n        definition: opener(definition),\n        definitionDestinationString: buffer,\n        definitionLabelString: buffer,\n        definitionTitleString: buffer,\n        emphasis: opener(emphasis),\n        hardBreakEscape: opener(hardBreak),\n        hardBreakTrailing: opener(hardBreak),\n        htmlFlow: opener(html, buffer),\n        htmlFlowData: onenterdata,\n        htmlText: opener(html, buffer),\n        htmlTextData: onenterdata,\n        image: opener(image),\n        label: buffer,\n        link: opener(link),\n        listItem: opener(listItem),\n        listItemValue: onenterlistitemvalue,\n        listOrdered: opener(list, onenterlistordered),\n        listUnordered: opener(list),\n        paragraph: opener(paragraph),\n        reference: onenterreference,\n        referenceString: buffer,\n        resourceDestinationString: buffer,\n        resourceTitleString: buffer,\n        setextHeading: opener(heading),\n        strong: opener(strong),\n        thematicBreak: opener(thematicBreak)\n      },\n      exit: {\n        atxHeading: closer(),\n        atxHeadingSequence: onexitatxheadingsequence,\n        autolink: closer(),\n        autolinkEmail: onexitautolinkemail,\n        autolinkProtocol: onexitautolinkprotocol,\n        blockQuote: closer(),\n        characterEscapeValue: onexitdata,\n        characterReferenceMarkerHexadecimal: onexitcharacterreferencemarker,\n        characterReferenceMarkerNumeric: onexitcharacterreferencemarker,\n        characterReferenceValue: onexitcharacterreferencevalue,\n        codeFenced: closer(onexitcodefenced),\n        codeFencedFence: onexitcodefencedfence,\n        codeFencedFenceInfo: onexitcodefencedfenceinfo,\n        codeFencedFenceMeta: onexitcodefencedfencemeta,\n        codeFlowValue: onexitdata,\n        codeIndented: closer(onexitcodeindented),\n        codeText: closer(onexitcodetext),\n        codeTextData: onexitdata,\n        data: onexitdata,\n        definition: closer(),\n        definitionDestinationString: onexitdefinitiondestinationstring,\n        definitionLabelString: onexitdefinitionlabelstring,\n        definitionTitleString: onexitdefinitiontitlestring,\n        emphasis: closer(),\n        hardBreakEscape: closer(onexithardbreak),\n        hardBreakTrailing: closer(onexithardbreak),\n        htmlFlow: closer(onexithtmlflow),\n        htmlFlowData: onexitdata,\n        htmlText: closer(onexithtmltext),\n        htmlTextData: onexitdata,\n        image: closer(onexitimage),\n        label: onexitlabel,\n        labelText: onexitlabeltext,\n        lineEnding: onexitlineending,\n        link: closer(onexitlink),\n        listItem: closer(),\n        listOrdered: closer(),\n        listUnordered: closer(),\n        paragraph: closer(),\n        referenceString: onexitreferencestring,\n        resourceDestinationString: onexitresourcedestinationstring,\n        resourceTitleString: onexitresourcetitlestring,\n        resource: onexitresource,\n        setextHeading: closer(onexitsetextheading),\n        setextHeadingLineSequence: onexitsetextheadinglinesequence,\n        setextHeadingText: onexitsetextheadingtext,\n        strong: closer(),\n        thematicBreak: closer()\n      }\n    },\n    options.mdastExtensions || []\n  )\n  /** @type {CompileData} */\n\n  const data = {}\n  return compile\n  /**\n   * @param {Array<Event>} events\n   * @returns {Root}\n   */\n\n  function compile(events) {\n    /** @type {Root} */\n    let tree = {\n      type: 'root',\n      children: []\n    }\n    /** @type {CompileContext['stack']} */\n\n    const stack = [tree]\n    /** @type {CompileContext['tokenStack']} */\n\n    const tokenStack = []\n    /** @type {Array<number>} */\n\n    const listStack = []\n    /** @type {Omit<CompileContext, 'sliceSerialize'>} */\n\n    const context = {\n      stack,\n      tokenStack,\n      config,\n      enter,\n      exit,\n      buffer,\n      resume,\n      setData,\n      getData\n    }\n    let index = -1\n\n    while (++index < events.length) {\n      // We preprocess lists to add `listItem` tokens, and to infer whether\n      // items the list itself are spread out.\n      if (\n        events[index][1].type === 'listOrdered' ||\n        events[index][1].type === 'listUnordered'\n      ) {\n        if (events[index][0] === 'enter') {\n          listStack.push(index)\n        } else {\n          const tail = listStack.pop()\n          index = prepareList(events, tail, index)\n        }\n      }\n    }\n\n    index = -1\n\n    while (++index < events.length) {\n      const handler = config[events[index][0]]\n\n      if (own.call(handler, events[index][1].type)) {\n        handler[events[index][1].type].call(\n          Object.assign(\n            {\n              sliceSerialize: events[index][2].sliceSerialize\n            },\n            context\n          ),\n          events[index][1]\n        )\n      }\n    }\n\n    if (tokenStack.length > 0) {\n      const tail = tokenStack[tokenStack.length - 1]\n      const handler = tail[1] || defaultOnError\n      handler.call(context, undefined, tail[0])\n    } // Figure out `root` position.\n\n    tree.position = {\n      start: point(\n        events.length > 0\n          ? events[0][1].start\n          : {\n              line: 1,\n              column: 1,\n              offset: 0\n            }\n      ),\n      end: point(\n        events.length > 0\n          ? events[events.length - 2][1].end\n          : {\n              line: 1,\n              column: 1,\n              offset: 0\n            }\n      )\n    }\n    index = -1\n\n    while (++index < config.transforms.length) {\n      tree = config.transforms[index](tree) || tree\n    }\n\n    return tree\n  }\n  /**\n   * @param {Array<Event>} events\n   * @param {number} start\n   * @param {number} length\n   * @returns {number}\n   */\n\n  function prepareList(events, start, length) {\n    let index = start - 1\n    let containerBalance = -1\n    let listSpread = false\n    /** @type {Token|undefined} */\n\n    let listItem\n    /** @type {number|undefined} */\n\n    let lineIndex\n    /** @type {number|undefined} */\n\n    let firstBlankLineIndex\n    /** @type {boolean|undefined} */\n\n    let atMarker\n\n    while (++index <= length) {\n      const event = events[index]\n\n      if (\n        event[1].type === 'listUnordered' ||\n        event[1].type === 'listOrdered' ||\n        event[1].type === 'blockQuote'\n      ) {\n        if (event[0] === 'enter') {\n          containerBalance++\n        } else {\n          containerBalance--\n        }\n\n        atMarker = undefined\n      } else if (event[1].type === 'lineEndingBlank') {\n        if (event[0] === 'enter') {\n          if (\n            listItem &&\n            !atMarker &&\n            !containerBalance &&\n            !firstBlankLineIndex\n          ) {\n            firstBlankLineIndex = index\n          }\n\n          atMarker = undefined\n        }\n      } else if (\n        event[1].type === 'linePrefix' ||\n        event[1].type === 'listItemValue' ||\n        event[1].type === 'listItemMarker' ||\n        event[1].type === 'listItemPrefix' ||\n        event[1].type === 'listItemPrefixWhitespace'\n      ) {\n        // Empty.\n      } else {\n        atMarker = undefined\n      }\n\n      if (\n        (!containerBalance &&\n          event[0] === 'enter' &&\n          event[1].type === 'listItemPrefix') ||\n        (containerBalance === -1 &&\n          event[0] === 'exit' &&\n          (event[1].type === 'listUnordered' ||\n            event[1].type === 'listOrdered'))\n      ) {\n        if (listItem) {\n          let tailIndex = index\n          lineIndex = undefined\n\n          while (tailIndex--) {\n            const tailEvent = events[tailIndex]\n\n            if (\n              tailEvent[1].type === 'lineEnding' ||\n              tailEvent[1].type === 'lineEndingBlank'\n            ) {\n              if (tailEvent[0] === 'exit') continue\n\n              if (lineIndex) {\n                events[lineIndex][1].type = 'lineEndingBlank'\n                listSpread = true\n              }\n\n              tailEvent[1].type = 'lineEnding'\n              lineIndex = tailIndex\n            } else if (\n              tailEvent[1].type === 'linePrefix' ||\n              tailEvent[1].type === 'blockQuotePrefix' ||\n              tailEvent[1].type === 'blockQuotePrefixWhitespace' ||\n              tailEvent[1].type === 'blockQuoteMarker' ||\n              tailEvent[1].type === 'listItemIndent'\n            ) {\n              // Empty\n            } else {\n              break\n            }\n          }\n\n          if (\n            firstBlankLineIndex &&\n            (!lineIndex || firstBlankLineIndex < lineIndex)\n          ) {\n            // @ts-expect-error Patched.\n            listItem._spread = true\n          } // Fix position.\n\n          listItem.end = Object.assign(\n            {},\n            lineIndex ? events[lineIndex][1].start : event[1].end\n          )\n          events.splice(lineIndex || index, 0, ['exit', listItem, event[2]])\n          index++\n          length++\n        } // Create a new list item.\n\n        if (event[1].type === 'listItemPrefix') {\n          listItem = {\n            type: 'listItem',\n            // @ts-expect-error Patched\n            _spread: false,\n            start: Object.assign({}, event[1].start)\n          } // @ts-expect-error: `listItem` is most definitely defined, TS...\n\n          events.splice(index, 0, ['enter', listItem, event[2]])\n          index++\n          length++\n          firstBlankLineIndex = undefined\n          atMarker = true\n        }\n      }\n    } // @ts-expect-error Patched.\n\n    events[start][1]._spread = listSpread\n    return length\n  }\n  /**\n   * @type {CompileContext['setData']}\n   * @param [value]\n   */\n\n  function setData(key, value) {\n    data[key] = value\n  }\n  /**\n   * @type {CompileContext['getData']}\n   * @template {string} K\n   * @param {K} key\n   * @returns {CompileData[K]}\n   */\n\n  function getData(key) {\n    return data[key]\n  }\n  /**\n   * @param {Point} d\n   * @returns {Point}\n   */\n\n  function point(d) {\n    return {\n      line: d.line,\n      column: d.column,\n      offset: d.offset\n    }\n  }\n  /**\n   * @param {(token: Token) => Node} create\n   * @param {Handle} [and]\n   * @returns {Handle}\n   */\n\n  function opener(create, and) {\n    return open\n    /**\n     * @this {CompileContext}\n     * @param {Token} token\n     * @returns {void}\n     */\n\n    function open(token) {\n      enter.call(this, create(token), token)\n      if (and) and.call(this, token)\n    }\n  }\n  /** @type {CompileContext['buffer']} */\n\n  function buffer() {\n    this.stack.push({\n      type: 'fragment',\n      children: []\n    })\n  }\n  /**\n   * @type {CompileContext['enter']}\n   * @template {Node} N\n   * @this {CompileContext}\n   * @param {N} node\n   * @param {Token} token\n   * @param {OnEnterError} [errorHandler]\n   * @returns {N}\n   */\n\n  function enter(node, token, errorHandler) {\n    const parent = this.stack[this.stack.length - 1]\n    // @ts-expect-error: Assume `Node` can exist as a child of `parent`.\n    parent.children.push(node)\n    this.stack.push(node)\n    this.tokenStack.push([token, errorHandler]) // @ts-expect-error: `end` will be patched later.\n\n    node.position = {\n      start: point(token.start)\n    }\n    return node\n  }\n  /**\n   * @param {Handle} [and]\n   * @returns {Handle}\n   */\n\n  function closer(and) {\n    return close\n    /**\n     * @this {CompileContext}\n     * @param {Token} token\n     * @returns {void}\n     */\n\n    function close(token) {\n      if (and) and.call(this, token)\n      exit.call(this, token)\n    }\n  }\n  /**\n   * @type {CompileContext['exit']}\n   * @this {CompileContext}\n   * @param {Token} token\n   * @param {OnExitError} [onExitError]\n   * @returns {Node}\n   */\n\n  function exit(token, onExitError) {\n    const node = this.stack.pop()\n    const open = this.tokenStack.pop()\n\n    if (!open) {\n      throw new Error(\n        'Cannot close `' +\n          token.type +\n          '` (' +\n          stringifyPosition({\n            start: token.start,\n            end: token.end\n          }) +\n          '): it’s not open'\n      )\n    } else if (open[0].type !== token.type) {\n      if (onExitError) {\n        onExitError.call(this, token, open[0])\n      } else {\n        const handler = open[1] || defaultOnError\n        handler.call(this, token, open[0])\n      }\n    }\n\n    node.position.end = point(token.end)\n    return node\n  }\n  /**\n   * @this {CompileContext}\n   * @returns {string}\n   */\n\n  function resume() {\n    return toString(this.stack.pop())\n  } //\n  // Handlers.\n  //\n\n  /** @type {Handle} */\n\n  function onenterlistordered() {\n    setData('expectingFirstListItemValue', true)\n  }\n  /** @type {Handle} */\n\n  function onenterlistitemvalue(token) {\n    if (getData('expectingFirstListItemValue')) {\n      const ancestor =\n        /** @type {List} */\n        this.stack[this.stack.length - 2]\n      ancestor.start = Number.parseInt(this.sliceSerialize(token), 10)\n      setData('expectingFirstListItemValue')\n    }\n  }\n  /** @type {Handle} */\n\n  function onexitcodefencedfenceinfo() {\n    const data = this.resume()\n    const node =\n      /** @type {Code} */\n      this.stack[this.stack.length - 1]\n    node.lang = data\n  }\n  /** @type {Handle} */\n\n  function onexitcodefencedfencemeta() {\n    const data = this.resume()\n    const node =\n      /** @type {Code} */\n      this.stack[this.stack.length - 1]\n    node.meta = data\n  }\n  /** @type {Handle} */\n\n  function onexitcodefencedfence() {\n    // Exit if this is the closing fence.\n    if (getData('flowCodeInside')) return\n    this.buffer()\n    setData('flowCodeInside', true)\n  }\n  /** @type {Handle} */\n\n  function onexitcodefenced() {\n    const data = this.resume()\n    const node =\n      /** @type {Code} */\n      this.stack[this.stack.length - 1]\n    node.value = data.replace(/^(\\r?\\n|\\r)|(\\r?\\n|\\r)$/g, '')\n    setData('flowCodeInside')\n  }\n  /** @type {Handle} */\n\n  function onexitcodeindented() {\n    const data = this.resume()\n    const node =\n      /** @type {Code} */\n      this.stack[this.stack.length - 1]\n    node.value = data.replace(/(\\r?\\n|\\r)$/g, '')\n  }\n  /** @type {Handle} */\n\n  function onexitdefinitionlabelstring(token) {\n    // Discard label, use the source content instead.\n    const label = this.resume()\n    const node =\n      /** @type {Definition} */\n      this.stack[this.stack.length - 1]\n    node.label = label\n    node.identifier = normalizeIdentifier(\n      this.sliceSerialize(token)\n    ).toLowerCase()\n  }\n  /** @type {Handle} */\n\n  function onexitdefinitiontitlestring() {\n    const data = this.resume()\n    const node =\n      /** @type {Definition} */\n      this.stack[this.stack.length - 1]\n    node.title = data\n  }\n  /** @type {Handle} */\n\n  function onexitdefinitiondestinationstring() {\n    const data = this.resume()\n    const node =\n      /** @type {Definition} */\n      this.stack[this.stack.length - 1]\n    node.url = data\n  }\n  /** @type {Handle} */\n\n  function onexitatxheadingsequence(token) {\n    const node =\n      /** @type {Heading} */\n      this.stack[this.stack.length - 1]\n\n    if (!node.depth) {\n      const depth = this.sliceSerialize(token).length\n      node.depth = depth\n    }\n  }\n  /** @type {Handle} */\n\n  function onexitsetextheadingtext() {\n    setData('setextHeadingSlurpLineEnding', true)\n  }\n  /** @type {Handle} */\n\n  function onexitsetextheadinglinesequence(token) {\n    const node =\n      /** @type {Heading} */\n      this.stack[this.stack.length - 1]\n    node.depth = this.sliceSerialize(token).charCodeAt(0) === 61 ? 1 : 2\n  }\n  /** @type {Handle} */\n\n  function onexitsetextheading() {\n    setData('setextHeadingSlurpLineEnding')\n  }\n  /** @type {Handle} */\n\n  function onenterdata(token) {\n    const parent =\n      /** @type {Parent} */\n      this.stack[this.stack.length - 1]\n    /** @type {Node} */\n\n    let tail = parent.children[parent.children.length - 1]\n\n    if (!tail || tail.type !== 'text') {\n      // Add a new text node.\n      tail = text() // @ts-expect-error: we’ll add `end` later.\n\n      tail.position = {\n        start: point(token.start)\n      } // @ts-expect-error: Assume `parent` accepts `text`.\n\n      parent.children.push(tail)\n    }\n\n    this.stack.push(tail)\n  }\n  /** @type {Handle} */\n\n  function onexitdata(token) {\n    const tail = this.stack.pop()\n    tail.value += this.sliceSerialize(token)\n    tail.position.end = point(token.end)\n  }\n  /** @type {Handle} */\n\n  function onexitlineending(token) {\n    const context = this.stack[this.stack.length - 1]\n\n    // If we’re at a hard break, include the line ending in there.\n    if (getData('atHardBreak')) {\n      const tail = context.children[context.children.length - 1]\n      tail.position.end = point(token.end)\n      setData('atHardBreak')\n      return\n    }\n\n    if (\n      !getData('setextHeadingSlurpLineEnding') &&\n      config.canContainEols.includes(context.type)\n    ) {\n      onenterdata.call(this, token)\n      onexitdata.call(this, token)\n    }\n  }\n  /** @type {Handle} */\n\n  function onexithardbreak() {\n    setData('atHardBreak', true)\n  }\n  /** @type {Handle} */\n\n  function onexithtmlflow() {\n    const data = this.resume()\n    const node =\n      /** @type {HTML} */\n      this.stack[this.stack.length - 1]\n    node.value = data\n  }\n  /** @type {Handle} */\n\n  function onexithtmltext() {\n    const data = this.resume()\n    const node =\n      /** @type {HTML} */\n      this.stack[this.stack.length - 1]\n    node.value = data\n  }\n  /** @type {Handle} */\n\n  function onexitcodetext() {\n    const data = this.resume()\n    const node =\n      /** @type {InlineCode} */\n      this.stack[this.stack.length - 1]\n    node.value = data\n  }\n  /** @type {Handle} */\n\n  function onexitlink() {\n    const context =\n      /** @type {Link & {identifier: string, label: string}} */\n      this.stack[this.stack.length - 1] // To do: clean.\n\n    if (getData('inReference')) {\n      context.type += 'Reference' // @ts-expect-error: mutate.\n\n      context.referenceType = getData('referenceType') || 'shortcut' // @ts-expect-error: mutate.\n\n      delete context.url\n      delete context.title\n    } else {\n      // @ts-expect-error: mutate.\n      delete context.identifier // @ts-expect-error: mutate.\n\n      delete context.label\n    }\n\n    setData('referenceType')\n  }\n  /** @type {Handle} */\n\n  function onexitimage() {\n    const context =\n      /** @type {Image & {identifier: string, label: string}} */\n      this.stack[this.stack.length - 1] // To do: clean.\n\n    if (getData('inReference')) {\n      context.type += 'Reference' // @ts-expect-error: mutate.\n\n      context.referenceType = getData('referenceType') || 'shortcut' // @ts-expect-error: mutate.\n\n      delete context.url\n      delete context.title\n    } else {\n      // @ts-expect-error: mutate.\n      delete context.identifier // @ts-expect-error: mutate.\n\n      delete context.label\n    }\n\n    setData('referenceType')\n  }\n  /** @type {Handle} */\n\n  function onexitlabeltext(token) {\n    const ancestor =\n      /** @type {(Link|Image) & {identifier: string, label: string}} */\n      this.stack[this.stack.length - 2]\n    const string = this.sliceSerialize(token)\n    ancestor.label = decodeString(string)\n    ancestor.identifier = normalizeIdentifier(string).toLowerCase()\n  }\n  /** @type {Handle} */\n\n  function onexitlabel() {\n    const fragment =\n      /** @type {Fragment} */\n      this.stack[this.stack.length - 1]\n    const value = this.resume()\n    const node =\n      /** @type {(Link|Image) & {identifier: string, label: string}} */\n      this.stack[this.stack.length - 1] // Assume a reference.\n\n    setData('inReference', true)\n\n    if (node.type === 'link') {\n      // @ts-expect-error: Assume static phrasing content.\n      node.children = fragment.children\n    } else {\n      node.alt = value\n    }\n  }\n  /** @type {Handle} */\n\n  function onexitresourcedestinationstring() {\n    const data = this.resume()\n    const node =\n      /** @type {Link|Image} */\n      this.stack[this.stack.length - 1]\n    node.url = data\n  }\n  /** @type {Handle} */\n\n  function onexitresourcetitlestring() {\n    const data = this.resume()\n    const node =\n      /** @type {Link|Image} */\n      this.stack[this.stack.length - 1]\n    node.title = data\n  }\n  /** @type {Handle} */\n\n  function onexitresource() {\n    setData('inReference')\n  }\n  /** @type {Handle} */\n\n  function onenterreference() {\n    setData('referenceType', 'collapsed')\n  }\n  /** @type {Handle} */\n\n  function onexitreferencestring(token) {\n    const label = this.resume()\n    const node =\n      /** @type {LinkReference|ImageReference} */\n      this.stack[this.stack.length - 1]\n    node.label = label\n    node.identifier = normalizeIdentifier(\n      this.sliceSerialize(token)\n    ).toLowerCase()\n    setData('referenceType', 'full')\n  }\n  /** @type {Handle} */\n\n  function onexitcharacterreferencemarker(token) {\n    setData('characterReferenceType', token.type)\n  }\n  /** @type {Handle} */\n\n  function onexitcharacterreferencevalue(token) {\n    const data = this.sliceSerialize(token)\n    const type = getData('characterReferenceType')\n    /** @type {string} */\n\n    let value\n\n    if (type) {\n      value = decodeNumericCharacterReference(\n        data,\n        type === 'characterReferenceMarkerNumeric' ? 10 : 16\n      )\n      setData('characterReferenceType')\n    } else {\n      // @ts-expect-error `decodeNamedCharacterReference` can return false for\n      // invalid named character references, but everything we’ve tokenized is\n      // valid.\n      value = decodeNamedCharacterReference(data)\n    }\n\n    const tail = this.stack.pop()\n    tail.value += value\n    tail.position.end = point(token.end)\n  }\n  /** @type {Handle} */\n\n  function onexitautolinkprotocol(token) {\n    onexitdata.call(this, token)\n    const node =\n      /** @type {Link} */\n      this.stack[this.stack.length - 1]\n    node.url = this.sliceSerialize(token)\n  }\n  /** @type {Handle} */\n\n  function onexitautolinkemail(token) {\n    onexitdata.call(this, token)\n    const node =\n      /** @type {Link} */\n      this.stack[this.stack.length - 1]\n    node.url = 'mailto:' + this.sliceSerialize(token)\n  } //\n  // Creaters.\n  //\n\n  /** @returns {Blockquote} */\n\n  function blockQuote() {\n    return {\n      type: 'blockquote',\n      children: []\n    }\n  }\n  /** @returns {Code} */\n\n  function codeFlow() {\n    return {\n      type: 'code',\n      lang: null,\n      meta: null,\n      value: ''\n    }\n  }\n  /** @returns {InlineCode} */\n\n  function codeText() {\n    return {\n      type: 'inlineCode',\n      value: ''\n    }\n  }\n  /** @returns {Definition} */\n\n  function definition() {\n    return {\n      type: 'definition',\n      identifier: '',\n      label: null,\n      title: null,\n      url: ''\n    }\n  }\n  /** @returns {Emphasis} */\n\n  function emphasis() {\n    return {\n      type: 'emphasis',\n      children: []\n    }\n  }\n  /** @returns {Heading} */\n\n  function heading() {\n    // @ts-expect-error `depth` will be set later.\n    return {\n      type: 'heading',\n      depth: undefined,\n      children: []\n    }\n  }\n  /** @returns {Break} */\n\n  function hardBreak() {\n    return {\n      type: 'break'\n    }\n  }\n  /** @returns {HTML} */\n\n  function html() {\n    return {\n      type: 'html',\n      value: ''\n    }\n  }\n  /** @returns {Image} */\n\n  function image() {\n    return {\n      type: 'image',\n      title: null,\n      url: '',\n      alt: null\n    }\n  }\n  /** @returns {Link} */\n\n  function link() {\n    return {\n      type: 'link',\n      title: null,\n      url: '',\n      children: []\n    }\n  }\n  /**\n   * @param {Token} token\n   * @returns {List}\n   */\n\n  function list(token) {\n    return {\n      type: 'list',\n      ordered: token.type === 'listOrdered',\n      start: null,\n      // @ts-expect-error Patched.\n      spread: token._spread,\n      children: []\n    }\n  }\n  /**\n   * @param {Token} token\n   * @returns {ListItem}\n   */\n\n  function listItem(token) {\n    return {\n      type: 'listItem',\n      // @ts-expect-error Patched.\n      spread: token._spread,\n      checked: null,\n      children: []\n    }\n  }\n  /** @returns {Paragraph} */\n\n  function paragraph() {\n    return {\n      type: 'paragraph',\n      children: []\n    }\n  }\n  /** @returns {Strong} */\n\n  function strong() {\n    return {\n      type: 'strong',\n      children: []\n    }\n  }\n  /** @returns {Text} */\n\n  function text() {\n    return {\n      type: 'text',\n      value: ''\n    }\n  }\n  /** @returns {ThematicBreak} */\n\n  function thematicBreak() {\n    return {\n      type: 'thematicBreak'\n    }\n  }\n}\n/**\n * @param {Extension} combined\n * @param {Array<Extension|Array<Extension>>} extensions\n * @returns {Extension}\n */\n\nfunction configure(combined, extensions) {\n  let index = -1\n\n  while (++index < extensions.length) {\n    const value = extensions[index]\n\n    if (Array.isArray(value)) {\n      configure(combined, value)\n    } else {\n      extension(combined, value)\n    }\n  }\n\n  return combined\n}\n/**\n * @param {Extension} combined\n * @param {Extension} extension\n * @returns {void}\n */\n\nfunction extension(combined, extension) {\n  /** @type {string} */\n  let key\n\n  for (key in extension) {\n    if (own.call(extension, key)) {\n      const list = key === 'canContainEols' || key === 'transforms'\n      const maybe = own.call(combined, key) ? combined[key] : undefined\n      /* c8 ignore next */\n\n      const left = maybe || (combined[key] = list ? [] : {})\n      const right = extension[key]\n\n      if (right) {\n        if (list) {\n          // @ts-expect-error: `left` is an array.\n          combined[key] = [...left, ...right]\n        } else {\n          Object.assign(left, right)\n        }\n      }\n    }\n  }\n}\n/** @type {OnEnterError} */\n\nfunction defaultOnError(left, right) {\n  if (left) {\n    throw new Error(\n      'Cannot close `' +\n        left.type +\n        '` (' +\n        stringifyPosition({\n          start: left.start,\n          end: left.end\n        }) +\n        '): a different token (`' +\n        right.type +\n        '`, ' +\n        stringifyPosition({\n          start: right.start,\n          end: right.end\n        }) +\n        ') is open'\n    )\n  } else {\n    throw new Error(\n      'Cannot close document, a token (`' +\n        right.type +\n        '`, ' +\n        stringifyPosition({\n          start: right.start,\n          end: right.end\n        }) +\n        ') is still open'\n    )\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Event} Event\n */\nimport {subtokenize} from 'micromark-util-subtokenize'\n/**\n * @param {Event[]} events\n * @returns {Event[]}\n */\n\nexport function postprocess(events) {\n  while (!subtokenize(events)) {\n    // Empty\n  }\n\n  return events\n}\n","/**\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').FullNormalizedExtension} FullNormalizedExtension\n * @typedef {import('micromark-util-types').ParseOptions} ParseOptions\n * @typedef {import('micromark-util-types').ParseContext} ParseContext\n * @typedef {import('micromark-util-types').Create} Create\n */\nimport {combineExtensions} from 'micromark-util-combine-extensions'\nimport {content} from './initialize/content.js'\nimport {document} from './initialize/document.js'\nimport {flow} from './initialize/flow.js'\nimport {text, string} from './initialize/text.js'\nimport {createTokenizer} from './create-tokenizer.js'\nimport * as defaultConstructs from './constructs.js'\n/**\n * @param {ParseOptions} [options]\n * @returns {ParseContext}\n */\n\nexport function parse(options = {}) {\n  /** @type {FullNormalizedExtension} */\n  // @ts-expect-error `defaultConstructs` is full, so the result will be too.\n  const constructs = combineExtensions(\n    // @ts-expect-error Same as above.\n    [defaultConstructs].concat(options.extensions || [])\n  )\n  /** @type {ParseContext} */\n\n  const parser = {\n    defined: [],\n    lazy: {},\n    constructs,\n    content: create(content),\n    document: create(document),\n    flow: create(flow),\n    string: create(string),\n    text: create(text)\n  }\n  return parser\n  /**\n   * @param {InitialConstruct} initial\n   */\n\n  function create(initial) {\n    return creator\n    /** @type {Create} */\n\n    function creator(from) {\n      return createTokenizer(parser, initial, from)\n    }\n  }\n}\n","import remarkParse from './lib/index.js'\n\nexport default remarkParse\n","/**\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast-util-from-markdown').Options} Options\n */\n\nimport {fromMarkdown} from 'mdast-util-from-markdown'\n\n/** @type {import('unified').Plugin<[Options?] | void[], string, Root>} */\nexport default function remarkParse(options) {\n  /** @type {import('unified').ParserFunction<Root>} */\n  const parser = (doc) => {\n    // Assume options.\n    const settings = /** @type {Options} */ (this.data('settings'))\n\n    return fromMarkdown(\n      doc,\n      Object.assign({}, settings, options, {\n        // Note: these options are not in the readme.\n        // The goal is for them to be set by plugins on `data` instead of being\n        // passed by users.\n        extensions: this.data('micromarkExtensions') || [],\n        mdastExtensions: this.data('fromMarkdownExtensions') || []\n      })\n    )\n  }\n\n  Object.assign(this, {Parser: parser})\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n * @typedef {import('unist').Literal} Literal\n * @typedef {Object.<string, unknown>} Props\n * @typedef {Array.<Node>|string} ChildrenOrValue\n *\n * @typedef {(<T extends string, P extends Record<string, unknown>, C extends Node[]>(type: T, props: P, children: C) => {type: T, children: C} & P)} BuildParentWithProps\n * @typedef {(<T extends string, P extends Record<string, unknown>>(type: T, props: P, value: string) => {type: T, value: string} & P)} BuildLiteralWithProps\n * @typedef {(<T extends string, P extends Record<string, unknown>>(type: T, props: P) => {type: T} & P)} BuildVoidWithProps\n * @typedef {(<T extends string, C extends Node[]>(type: T, children: C) => {type: T, children: C})} BuildParent\n * @typedef {(<T extends string>(type: T, value: string) => {type: T, value: string})} BuildLiteral\n * @typedef {(<T extends string>(type: T) => {type: T})} BuildVoid\n */\n\nexport var u = /**\n * @type {BuildVoid & BuildVoidWithProps & BuildLiteral & BuildLiteralWithProps & BuildParent & BuildParentWithProps}\n */ (\n  /**\n   * @param {string} type Type of node\n   * @param {Props|ChildrenOrValue} [props] Additional properties for node (or `children` or `value`)\n   * @param {ChildrenOrValue} [value] `children` or `value` of node\n   * @returns {Node}\n   */\n  function (type, props, value) {\n    /** @type {Node} */\n    var node = {type: String(type)}\n\n    if (\n      (value === undefined || value === null) &&\n      (typeof props === 'string' || Array.isArray(props))\n    ) {\n      value = props\n    } else {\n      Object.assign(node, props)\n    }\n\n    if (Array.isArray(value)) {\n      node.children = value\n    } else if (value !== undefined && value !== null) {\n      node.value = String(value)\n    }\n\n    return node\n  }\n)\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n *\n * @typedef {string} Type\n * @typedef {Object<string, unknown>} Props\n *\n * @typedef {null|undefined|Type|Props|TestFunctionAnything|Array.<Type|Props|TestFunctionAnything>} Test\n */\n\n/**\n * Check if a node passes a test\n *\n * @callback TestFunctionAnything\n * @param {Node} node\n * @param {number|null|undefined} [index]\n * @param {Parent|null|undefined} [parent]\n * @returns {boolean|void}\n */\n\n/**\n * Check if a node passes a certain node test\n *\n * @template {Node} X\n * @callback TestFunctionPredicate\n * @param {Node} node\n * @param {number|null|undefined} [index]\n * @param {Parent|null|undefined} [parent]\n * @returns {node is X}\n */\n\n/**\n * @callback AssertAnything\n * @param {unknown} [node]\n * @param {number|null|undefined} [index]\n * @param {Parent|null|undefined} [parent]\n * @returns {boolean}\n */\n\n/**\n * Check if a node passes a certain node test\n *\n * @template {Node} Y\n * @callback AssertPredicate\n * @param {unknown} [node]\n * @param {number|null|undefined} [index]\n * @param {Parent|null|undefined} [parent]\n * @returns {node is Y}\n */\n\nexport const is =\n  /**\n   * Check if a node passes a test.\n   * When a `parent` node is known the `index` of node should also be given.\n   *\n   * @type {(\n   *   (<T extends Node>(node: unknown, test: T['type']|Partial<T>|TestFunctionPredicate<T>|Array.<T['type']|Partial<T>|TestFunctionPredicate<T>>, index?: number|null|undefined, parent?: Parent|null|undefined, context?: unknown) => node is T) &\n   *   ((node?: unknown, test?: Test, index?: number|null|undefined, parent?: Parent|null|undefined, context?: unknown) => boolean)\n   * )}\n   */\n  (\n    /**\n     * Check if a node passes a test.\n     * When a `parent` node is known the `index` of node should also be given.\n     *\n     * @param {unknown} [node] Node to check\n     * @param {Test} [test]\n     * When nullish, checks if `node` is a `Node`.\n     * When `string`, works like passing `function (node) {return node.type === test}`.\n     * When `function` checks if function passed the node is true.\n     * When `object`, checks that all keys in test are in node, and that they have (strictly) equal values.\n     * When `array`, checks any one of the subtests pass.\n     * @param {number|null|undefined} [index] Position of `node` in `parent`\n     * @param {Parent|null|undefined} [parent] Parent of `node`\n     * @param {unknown} [context] Context object to invoke `test` with\n     * @returns {boolean} Whether test passed and `node` is a `Node` (object with `type` set to non-empty `string`).\n     */\n    // eslint-disable-next-line max-params\n    function is(node, test, index, parent, context) {\n      const check = convert(test)\n\n      if (\n        index !== undefined &&\n        index !== null &&\n        (typeof index !== 'number' ||\n          index < 0 ||\n          index === Number.POSITIVE_INFINITY)\n      ) {\n        throw new Error('Expected positive finite index')\n      }\n\n      if (\n        parent !== undefined &&\n        parent !== null &&\n        (!is(parent) || !parent.children)\n      ) {\n        throw new Error('Expected parent node')\n      }\n\n      if (\n        (parent === undefined || parent === null) !==\n        (index === undefined || index === null)\n      ) {\n        throw new Error('Expected both parent and index')\n      }\n\n      // @ts-expect-error Looks like a node.\n      return node && node.type && typeof node.type === 'string'\n        ? Boolean(check.call(context, node, index, parent))\n        : false\n    }\n  )\n\nexport const convert =\n  /**\n   * @type {(\n   *   (<T extends Node>(test: T['type']|Partial<T>|TestFunctionPredicate<T>) => AssertPredicate<T>) &\n   *   ((test?: Test) => AssertAnything)\n   * )}\n   */\n  (\n    /**\n     * Generate an assertion from a check.\n     * @param {Test} [test]\n     * When nullish, checks if `node` is a `Node`.\n     * When `string`, works like passing `function (node) {return node.type === test}`.\n     * When `function` checks if function passed the node is true.\n     * When `object`, checks that all keys in test are in node, and that they have (strictly) equal values.\n     * When `array`, checks any one of the subtests pass.\n     * @returns {AssertAnything}\n     */\n    function (test) {\n      if (test === undefined || test === null) {\n        return ok\n      }\n\n      if (typeof test === 'string') {\n        return typeFactory(test)\n      }\n\n      if (typeof test === 'object') {\n        return Array.isArray(test) ? anyFactory(test) : propsFactory(test)\n      }\n\n      if (typeof test === 'function') {\n        return castFactory(test)\n      }\n\n      throw new Error('Expected function, string, or object as test')\n    }\n  )\n/**\n * @param {Array.<Type|Props|TestFunctionAnything>} tests\n * @returns {AssertAnything}\n */\nfunction anyFactory(tests) {\n  /** @type {Array.<AssertAnything>} */\n  const checks = []\n  let index = -1\n\n  while (++index < tests.length) {\n    checks[index] = convert(tests[index])\n  }\n\n  return castFactory(any)\n\n  /**\n   * @this {unknown}\n   * @param {unknown[]} parameters\n   * @returns {boolean}\n   */\n  function any(...parameters) {\n    let index = -1\n\n    while (++index < checks.length) {\n      if (checks[index].call(this, ...parameters)) return true\n    }\n\n    return false\n  }\n}\n\n/**\n * Utility to assert each property in `test` is represented in `node`, and each\n * values are strictly equal.\n *\n * @param {Props} check\n * @returns {AssertAnything}\n */\nfunction propsFactory(check) {\n  return castFactory(all)\n\n  /**\n   * @param {Node} node\n   * @returns {boolean}\n   */\n  function all(node) {\n    /** @type {string} */\n    let key\n\n    for (key in check) {\n      // @ts-expect-error: hush, it sure works as an index.\n      if (node[key] !== check[key]) return false\n    }\n\n    return true\n  }\n}\n\n/**\n * Utility to convert a string into a function which checks a given node’s type\n * for said string.\n *\n * @param {Type} check\n * @returns {AssertAnything}\n */\nfunction typeFactory(check) {\n  return castFactory(type)\n\n  /**\n   * @param {Node} node\n   */\n  function type(node) {\n    return node && node.type === check\n  }\n}\n\n/**\n * Utility to convert a string into a function which checks a given node’s type\n * for said string.\n * @param {TestFunctionAnything} check\n * @returns {AssertAnything}\n */\nfunction castFactory(check) {\n  return assertion\n\n  /**\n   * @this {unknown}\n   * @param {Array.<unknown>} parameters\n   * @returns {boolean}\n   */\n  function assertion(...parameters) {\n    // @ts-expect-error: spreading is fine.\n    return Boolean(check.call(this, ...parameters))\n  }\n}\n\n// Utility to return true.\nfunction ok() {\n  return true\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n * @typedef {import('unist-util-is').Test} Test\n * @typedef {import('./complex-types.js').Action} Action\n * @typedef {import('./complex-types.js').Index} Index\n * @typedef {import('./complex-types.js').ActionTuple} ActionTuple\n * @typedef {import('./complex-types.js').VisitorResult} VisitorResult\n * @typedef {import('./complex-types.js').Visitor} Visitor\n */\n\nimport {convert} from 'unist-util-is'\nimport {color} from './color.js'\n\n/**\n * Continue traversing as normal\n */\nexport const CONTINUE = true\n/**\n * Do not traverse this node’s children\n */\nexport const SKIP = 'skip'\n/**\n * Stop traversing immediately\n */\nexport const EXIT = false\n\n/**\n * Visit children of tree which pass test.\n *\n * @param tree\n *   Tree to walk\n * @param [test]\n *   `unist-util-is`-compatible test\n * @param visitor\n *   Function called for nodes that pass `test`.\n * @param [reverse=false]\n *   Traverse in reverse preorder (NRL) instead of preorder (NLR) (default).\n */\nexport const visitParents =\n  /**\n   * @type {(\n   *   (<Tree extends Node, Check extends Test>(tree: Tree, test: Check, visitor: import('./complex-types.js').BuildVisitor<Tree, Check>, reverse?: boolean) => void) &\n   *   (<Tree extends Node>(tree: Tree, visitor: import('./complex-types.js').BuildVisitor<Tree>, reverse?: boolean) => void)\n   * )}\n   */\n  (\n    /**\n     * @param {Node} tree\n     * @param {Test} test\n     * @param {import('./complex-types.js').Visitor<Node>} visitor\n     * @param {boolean} [reverse=false]\n     */\n    function (tree, test, visitor, reverse) {\n      if (typeof test === 'function' && typeof visitor !== 'function') {\n        reverse = visitor\n        // @ts-expect-error no visitor given, so `visitor` is test.\n        visitor = test\n        test = null\n      }\n\n      const is = convert(test)\n      const step = reverse ? -1 : 1\n\n      factory(tree, null, [])()\n\n      /**\n       * @param {Node} node\n       * @param {number?} index\n       * @param {Array<Parent>} parents\n       */\n      function factory(node, index, parents) {\n        /** @type {Record<string, unknown>} */\n        // @ts-expect-error: hush\n        const value = typeof node === 'object' && node !== null ? node : {}\n        /** @type {string|undefined} */\n        let name\n\n        if (typeof value.type === 'string') {\n          name =\n            typeof value.tagName === 'string'\n              ? value.tagName\n              : typeof value.name === 'string'\n              ? value.name\n              : undefined\n\n          Object.defineProperty(visit, 'name', {\n            value:\n              'node (' +\n              color(value.type + (name ? '<' + name + '>' : '')) +\n              ')'\n          })\n        }\n\n        return visit\n\n        function visit() {\n          /** @type {ActionTuple} */\n          let result = []\n          /** @type {ActionTuple} */\n          let subresult\n          /** @type {number} */\n          let offset\n          /** @type {Array<Parent>} */\n          let grandparents\n\n          if (!test || is(node, index, parents[parents.length - 1] || null)) {\n            result = toResult(visitor(node, parents))\n\n            if (result[0] === EXIT) {\n              return result\n            }\n          }\n\n          // @ts-expect-error looks like a parent.\n          if (node.children && result[0] !== SKIP) {\n            // @ts-expect-error looks like a parent.\n            offset = (reverse ? node.children.length : -1) + step\n            // @ts-expect-error looks like a parent.\n            grandparents = parents.concat(node)\n\n            // @ts-expect-error looks like a parent.\n            while (offset > -1 && offset < node.children.length) {\n              // @ts-expect-error looks like a parent.\n              subresult = factory(node.children[offset], offset, grandparents)()\n\n              if (subresult[0] === EXIT) {\n                return subresult\n              }\n\n              offset =\n                typeof subresult[1] === 'number' ? subresult[1] : offset + step\n            }\n          }\n\n          return result\n        }\n      }\n    }\n  )\n\n/**\n * @param {VisitorResult} value\n * @returns {ActionTuple}\n */\nfunction toResult(value) {\n  if (Array.isArray(value)) {\n    return value\n  }\n\n  if (typeof value === 'number') {\n    return [CONTINUE, value]\n  }\n\n  return [value]\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n * @typedef {import('unist-util-is').Test} Test\n * @typedef {import('unist-util-visit-parents').VisitorResult} VisitorResult\n * @typedef {import('./complex-types.js').Visitor} Visitor\n */\n\nimport {visitParents} from 'unist-util-visit-parents'\n\n/**\n * Visit children of tree which pass test.\n *\n * @param tree\n *   Tree to walk\n * @param [test]\n *   `unist-util-is`-compatible test\n * @param visitor\n *   Function called for nodes that pass `test`.\n * @param reverse\n *   Traverse in reverse preorder (NRL) instead of preorder (NLR) (default).\n */\nexport const visit =\n  /**\n   * @type {(\n   *   (<Tree extends Node, Check extends Test>(tree: Tree, test: Check, visitor: import('./complex-types.js').BuildVisitor<Tree, Check>, reverse?: boolean) => void) &\n   *   (<Tree extends Node>(tree: Tree, visitor: import('./complex-types.js').BuildVisitor<Tree>, reverse?: boolean) => void)\n   * )}\n   */\n  (\n    /**\n     * @param {Node} tree\n     * @param {Test} test\n     * @param {import('./complex-types.js').Visitor} visitor\n     * @param {boolean} [reverse]\n     */\n    function (tree, test, visitor, reverse) {\n      if (typeof test === 'function' && typeof visitor !== 'function') {\n        reverse = visitor\n        visitor = test\n        test = null\n      }\n\n      visitParents(tree, test, overload, reverse)\n\n      /**\n       * @param {Node} node\n       * @param {Array<Parent>} parents\n       */\n      function overload(node, parents) {\n        const parent = parents[parents.length - 1]\n        return visitor(\n          node,\n          parent ? parent.children.indexOf(node) : null,\n          parent\n        )\n      }\n    }\n  )\n\nexport {CONTINUE, EXIT, SKIP} from 'unist-util-visit-parents'\n","/**\n * @typedef {import('unist').Position} Position\n * @typedef {import('unist').Node} Node\n * @typedef {Record<string, unknown> & {type: string, position?: PositionLike|undefined}} NodeLike\n * @typedef {import('unist').Point} Point\n *\n * @typedef {Partial<Point>} PointLike\n *\n * @typedef PositionLike\n * @property {PointLike} [start]\n * @property {PointLike} [end]\n */\n\nexport const pointStart = point('start')\nexport const pointEnd = point('end')\n\n/**\n * Get the positional info of `node`.\n *\n * @param {NodeLike|Node} [node]\n * @returns {Position}\n */\nexport function position(node) {\n  return {start: pointStart(node), end: pointEnd(node)}\n}\n\n/**\n * Get the positional info of `node`.\n *\n * @param {'start'|'end'} type\n */\nfunction point(type) {\n  return point\n\n  /**\n   * Get the positional info of `node`.\n   *\n   * @param {NodeLike|Node} [node]\n   * @returns {Point}\n   */\n  function point(node) {\n    const point = (node && node.position && node.position[type]) || {}\n\n    return {\n      line: point.line || null,\n      column: point.column || null,\n      offset: point.offset > -1 ? point.offset : null\n    }\n  }\n}\n","/**\n * @typedef {import('mdast').Root|import('mdast').Content} Node\n * @typedef {import('mdast').Definition} Definition\n */\n\nimport {visit} from 'unist-util-visit'\n\nconst own = {}.hasOwnProperty\n\n/**\n * Find definitions in `node`.\n * Uses CommonMark precedence, which means that earlier definitions are\n * preferred over duplicate later definitions.\n *\n * @param {Node} node\n */\nexport function definitions(node) {\n  /** @type {Record<string, Definition>} */\n  const cache = Object.create(null)\n\n  if (!node || !node.type) {\n    throw new Error('mdast-util-definitions expected node')\n  }\n\n  visit(node, 'definition', (definition) => {\n    const id = clean(definition.identifier)\n    if (id && !own.call(cache, id)) {\n      cache[id] = definition\n    }\n  })\n\n  return definition\n\n  /**\n   * Get a node from the bound definition cache.\n   *\n   * @param {string} identifier\n   * @returns {Definition|null}\n   */\n  function definition(identifier) {\n    const id = clean(identifier)\n    return id && own.call(cache, id) ? cache[id] : null\n  }\n}\n\n/**\n * @param {string} [value]\n * @returns {string}\n */\nfunction clean(value) {\n  return String(value || '').toUpperCase()\n}\n","/**\n * @typedef {import('mdast').Root|import('mdast').Parent['children'][number]} MdastNode\n * @typedef {import('./index.js').H} H\n * @typedef {import('./index.js').Handler} Handler\n * @typedef {import('./index.js').Content} Content\n */\n\nimport {u} from 'unist-builder'\n\nconst own = {}.hasOwnProperty\n\n/**\n * Transform an unknown node.\n * @type {Handler}\n * @param {MdastNode} node\n */\nfunction unknown(h, node) {\n  const data = node.data || {}\n\n  if (\n    'value' in node &&\n    !(\n      own.call(data, 'hName') ||\n      own.call(data, 'hProperties') ||\n      own.call(data, 'hChildren')\n    )\n  ) {\n    return h.augment(node, u('text', node.value))\n  }\n\n  return h(node, 'div', all(h, node))\n}\n\n/**\n * @type {Handler}\n * @param {MdastNode} node\n */\nexport function one(h, node, parent) {\n  const type = node && node.type\n  /** @type {Handler} */\n  let fn\n\n  // Fail on non-nodes.\n  if (!type) {\n    throw new Error('Expected node, got `' + node + '`')\n  }\n\n  if (own.call(h.handlers, type)) {\n    fn = h.handlers[type]\n  } else if (h.passThrough && h.passThrough.includes(type)) {\n    fn = returnNode\n  } else {\n    fn = h.unknownHandler\n  }\n\n  return (typeof fn === 'function' ? fn : unknown)(h, node, parent)\n}\n\n/**\n * @type {Handler}\n * @param {MdastNode} node\n */\nfunction returnNode(h, node) {\n  // @ts-expect-error: Pass through custom node.\n  return 'children' in node ? {...node, children: all(h, node)} : node\n}\n\n/**\n * @param {H} h\n * @param {MdastNode} parent\n */\nexport function all(h, parent) {\n  /** @type {Array.<Content>} */\n  const values = []\n\n  if ('children' in parent) {\n    const nodes = parent.children\n    let index = -1\n\n    while (++index < nodes.length) {\n      const result = one(h, nodes[index], parent)\n\n      if (result) {\n        if (index && nodes[index - 1].type === 'break') {\n          if (!Array.isArray(result) && result.type === 'text') {\n            result.value = result.value.replace(/^\\s+/, '')\n          }\n\n          if (!Array.isArray(result) && result.type === 'element') {\n            const head = result.children[0]\n\n            if (head && head.type === 'text') {\n              head.value = head.value.replace(/^\\s+/, '')\n            }\n          }\n        }\n\n        if (Array.isArray(result)) {\n          values.push(...result)\n        } else {\n          values.push(result)\n        }\n      }\n    }\n  }\n\n  return values\n}\n","/**\n * @typedef {import('mdast').ThematicBreak} ThematicBreak\n * @typedef {import('hast').Element} Element\n * @typedef {import('../index.js').Handler} Handler\n */\n\n/**\n * @type {Handler}\n * @param {ThematicBreak} [node]\n * @returns {Element}\n */\nexport function thematicBreak(h, node) {\n  return h(node, 'hr')\n}\n","/**\n * @typedef {import('./index.js').Content} Content\n */\n\nimport {u} from 'unist-builder'\n\n/**\n * Wrap `nodes` with line feeds between each entry.\n * Optionally adds line feeds at the start and end.\n *\n * @param {Array.<Content>} nodes\n * @param {boolean} [loose=false]\n * @returns {Array.<Content>}\n */\nexport function wrap(nodes, loose) {\n  /** @type {Array.<Content>} */\n  const result = []\n  let index = -1\n\n  if (loose) {\n    result.push(u('text', '\\n'))\n  }\n\n  while (++index < nodes.length) {\n    if (index) result.push(u('text', '\\n'))\n    result.push(nodes[index])\n  }\n\n  if (loose && nodes.length > 0) {\n    result.push(u('text', '\\n'))\n  }\n\n  return result\n}\n","/**\n * @typedef {import('mdast').List} List\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {wrap} from '../wrap.js'\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {List} node\n * @returns {Element}\n */\nexport function list(h, node) {\n  /** @type {Properties} */\n  const props = {}\n  const name = node.ordered ? 'ol' : 'ul'\n  const items = all(h, node)\n  let index = -1\n\n  if (typeof node.start === 'number' && node.start !== 1) {\n    props.start = node.start\n  }\n\n  // Like GitHub, add a class for custom styling.\n  while (++index < items.length) {\n    const item = items[index]\n\n    if (\n      item.type === 'element' &&\n      item.tagName === 'li' &&\n      item.properties &&\n      Array.isArray(item.properties.className) &&\n      item.properties.className.includes('task-list-item')\n    ) {\n      props.className = ['contains-task-list']\n      break\n    }\n  }\n\n  return h(node, name, props, wrap(items, true))\n}\n","/**\n * @typedef {import('mdast').FootnoteReference} FootnoteReference\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {u} from 'unist-builder'\n\n/**\n * @type {Handler}\n * @param {FootnoteReference} node\n */\nexport function footnoteReference(h, node) {\n  const footnoteOrder = h.footnoteOrder\n  const identifier = String(node.identifier)\n  const index = footnoteOrder.indexOf(identifier)\n  const marker = String(\n    index === -1 ? footnoteOrder.push(identifier) : index + 1\n  )\n\n  return h(\n    node,\n    'a',\n    {\n      href: '#fn' + marker,\n      className: ['footnote-ref'],\n      id: 'fnref' + marker,\n      role: 'doc-noteref'\n    },\n    [h(node.position, 'sup', [u('text', marker)])]\n  )\n}\n","/**\n * @typedef {import('mdast').LinkReference} LinkReference\n * @typedef {import('mdast').ImageReference} ImageReference\n * @typedef {import('./index.js').Handler} Handler\n * @typedef {import('./index.js').Content} Content\n */\n\nimport {u} from 'unist-builder'\nimport {all} from './traverse.js'\n\n/**\n * Return the content of a reference without definition as plain text.\n *\n * @type {Handler}\n * @param {ImageReference|LinkReference} node\n * @returns {Content|Array.<Content>}\n */\nexport function revert(h, node) {\n  const subtype = node.referenceType\n  let suffix = ']'\n\n  if (subtype === 'collapsed') {\n    suffix += '[]'\n  } else if (subtype === 'full') {\n    suffix += '[' + (node.label || node.identifier) + ']'\n  }\n\n  if (node.type === 'imageReference') {\n    return u('text', '![' + node.alt + suffix)\n  }\n\n  const contents = all(h, node)\n  const head = contents[0]\n\n  if (head && head.type === 'text') {\n    head.value = '[' + head.value\n  } else {\n    contents.unshift(u('text', '['))\n  }\n\n  const tail = contents[contents.length - 1]\n\n  if (tail && tail.type === 'text') {\n    tail.value += suffix\n  } else {\n    contents.push(u('text', suffix))\n  }\n\n  return contents\n}\n","/**\n * @typedef {import('mdast').ListItem} ListItem\n * @typedef {import('mdast').List} List\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('hast').Element} Element\n * @typedef {import('../index.js').Handler} Handler\n * @typedef {import('../index.js').Content} Content\n */\n\nimport {u} from 'unist-builder'\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {ListItem} node\n * @param {List} parent\n */\nexport function listItem(h, node, parent) {\n  const result = all(h, node)\n  const loose = parent ? listLoose(parent) : listItemLoose(node)\n  /** @type {Properties} */\n  const props = {}\n  /** @type {Array.<Content>} */\n  const wrapped = []\n\n  if (typeof node.checked === 'boolean') {\n    /** @type {Element} */\n    let paragraph\n\n    if (\n      result[0] &&\n      result[0].type === 'element' &&\n      result[0].tagName === 'p'\n    ) {\n      paragraph = result[0]\n    } else {\n      paragraph = h(null, 'p', [])\n      result.unshift(paragraph)\n    }\n\n    if (paragraph.children.length > 0) {\n      paragraph.children.unshift(u('text', ' '))\n    }\n\n    paragraph.children.unshift(\n      h(null, 'input', {\n        type: 'checkbox',\n        checked: node.checked,\n        disabled: true\n      })\n    )\n\n    // According to github-markdown-css, this class hides bullet.\n    // See: <https://github.com/sindresorhus/github-markdown-css>.\n    props.className = ['task-list-item']\n  }\n\n  let index = -1\n\n  while (++index < result.length) {\n    const child = result[index]\n\n    // Add eols before nodes, except if this is a loose, first paragraph.\n    if (\n      loose ||\n      index !== 0 ||\n      child.type !== 'element' ||\n      child.tagName !== 'p'\n    ) {\n      wrapped.push(u('text', '\\n'))\n    }\n\n    if (child.type === 'element' && child.tagName === 'p' && !loose) {\n      wrapped.push(...child.children)\n    } else {\n      wrapped.push(child)\n    }\n  }\n\n  const tail = result[result.length - 1]\n\n  // Add a final eol.\n  if (tail && (loose || !('tagName' in tail) || tail.tagName !== 'p')) {\n    wrapped.push(u('text', '\\n'))\n  }\n\n  return h(node, 'li', props, wrapped)\n}\n\n/**\n * @param {List} node\n * @return {Boolean}\n */\nfunction listLoose(node) {\n  let loose = node.spread\n  const children = node.children\n  let index = -1\n\n  while (!loose && ++index < children.length) {\n    loose = listItemLoose(children[index])\n  }\n\n  return Boolean(loose)\n}\n\n/**\n * @param {ListItem} node\n * @return {Boolean}\n */\nfunction listItemLoose(node) {\n  const spread = node.spread\n\n  return spread === undefined || spread === null\n    ? node.children.length > 1\n    : spread\n}\n","import {blockquote} from './blockquote.js'\nimport {hardBreak} from './break.js'\nimport {code} from './code.js'\nimport {strikethrough} from './delete.js'\nimport {emphasis} from './emphasis.js'\nimport {footnoteReference} from './footnote-reference.js'\nimport {footnote} from './footnote.js'\nimport {heading} from './heading.js'\nimport {html} from './html.js'\nimport {imageReference} from './image-reference.js'\nimport {image} from './image.js'\nimport {inlineCode} from './inline-code.js'\nimport {linkReference} from './link-reference.js'\nimport {link} from './link.js'\nimport {listItem} from './list-item.js'\nimport {list} from './list.js'\nimport {paragraph} from './paragraph.js'\nimport {root} from './root.js'\nimport {strong} from './strong.js'\nimport {table} from './table.js'\nimport {text} from './text.js'\nimport {thematicBreak} from './thematic-break.js'\n\nexport const handlers = {\n  blockquote,\n  break: hardBreak,\n  code,\n  delete: strikethrough,\n  emphasis,\n  footnoteReference,\n  footnote,\n  heading,\n  html,\n  imageReference,\n  image,\n  inlineCode,\n  linkReference,\n  link,\n  listItem,\n  list,\n  paragraph,\n  root,\n  strong,\n  table,\n  text,\n  thematicBreak,\n  toml: ignore,\n  yaml: ignore,\n  definition: ignore,\n  footnoteDefinition: ignore\n}\n\n// Return nothing for nodes that are ignored.\nfunction ignore() {\n  return null\n}\n","/**\n * @typedef {import('mdast').Blockquote} Blockquote\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {wrap} from '../wrap.js'\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {Blockquote} node\n */\nexport function blockquote(h, node) {\n  return h(node, 'blockquote', wrap(all(h, node), true))\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Text} Text\n * @typedef {import('mdast').Break} Break\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {u} from 'unist-builder'\n\n/**\n * @type {Handler}\n * @param {Break} node\n * @returns {Array<Element|Text>}\n */\nexport function hardBreak(h, node) {\n  return [h(node, 'br'), u('text', '\\n')]\n}\n","/**\n * @typedef {import('mdast').Code} Code\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {u} from 'unist-builder'\n\n/**\n * @type {Handler}\n * @param {Code} node\n */\nexport function code(h, node) {\n  const value = node.value ? node.value + '\\n' : ''\n  // To do: next major, use `node.lang` w/o regex, the splitting’s been going\n  // on for years in remark now.\n  const lang = node.lang && node.lang.match(/^[^ \\t]+(?=[ \\t]|$)/)\n  /** @type {Properties} */\n  const props = {}\n\n  if (lang) {\n    props.className = ['language-' + lang]\n  }\n\n  const code = h(node, 'code', props, [u('text', value)])\n\n  if (node.meta) {\n    code.data = {meta: node.meta}\n  }\n\n  return h(node.position, 'pre', [code])\n}\n","/**\n * @typedef {import('mdast').Delete} Delete\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {Delete} node\n */\nexport function strikethrough(h, node) {\n  return h(node, 'del', all(h, node))\n}\n","/**\n * @typedef {import('mdast').Emphasis} Emphasis\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {Emphasis} node\n */\nexport function emphasis(h, node) {\n  return h(node, 'em', all(h, node))\n}\n","/**\n * @typedef {import('mdast').Footnote} Footnote\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {footnoteReference} from './footnote-reference.js'\n\n/**\n * @type {Handler}\n * @param {Footnote} node\n */\nexport function footnote(h, node) {\n  const footnoteById = h.footnoteById\n  const footnoteOrder = h.footnoteOrder\n  let no = 1\n\n  while (no in footnoteById) no++\n\n  const identifier = String(no)\n\n  // No need to check if `identifier` exists in `footnoteOrder`, it’s guaranteed\n  // to not exist because we just generated it.\n  footnoteOrder.push(identifier)\n\n  footnoteById[identifier] = {\n    type: 'footnoteDefinition',\n    identifier,\n    children: [{type: 'paragraph', children: node.children}],\n    position: node.position\n  }\n\n  return footnoteReference(h, {\n    type: 'footnoteReference',\n    identifier,\n    position: node.position\n  })\n}\n","/**\n * @typedef {import('mdast').Heading} Heading\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {Heading} node\n */\nexport function heading(h, node) {\n  return h(node, 'h' + node.depth, all(h, node))\n}\n","/**\n * @typedef {import('mdast').HTML} HTML\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {u} from 'unist-builder'\n\n/**\n * Return either a `raw` node in dangerous mode, otherwise nothing.\n *\n * @type {Handler}\n * @param {HTML} node\n */\nexport function html(h, node) {\n  return h.dangerous ? h.augment(node, u('raw', node.value)) : null\n}\n","/**\n * @typedef {import('mdast').ImageReference} ImageReference\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport normalize from 'mdurl/encode.js'\nimport {revert} from '../revert.js'\n\n/**\n * @type {Handler}\n * @param {ImageReference} node\n */\nexport function imageReference(h, node) {\n  const def = h.definition(node.identifier)\n\n  if (!def) {\n    return revert(h, node)\n  }\n\n  /** @type {Properties} */\n  const props = {src: normalize(def.url || ''), alt: node.alt}\n\n  if (def.title !== null && def.title !== undefined) {\n    props.title = def.title\n  }\n\n  return h(node, 'img', props)\n}\n","/**\n * @typedef {import('mdast').Image} Image\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport normalize from 'mdurl/encode.js'\n\n/**\n * @type {Handler}\n * @param {Image} node\n */\nexport function image(h, node) {\n  /** @type {Properties} */\n  const props = {src: normalize(node.url), alt: node.alt}\n\n  if (node.title !== null && node.title !== undefined) {\n    props.title = node.title\n  }\n\n  return h(node, 'img', props)\n}\n","/**\n * @typedef {import('mdast').InlineCode} InlineCode\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {u} from 'unist-builder'\n\n/**\n * @type {Handler}\n * @param {InlineCode} node\n */\nexport function inlineCode(h, node) {\n  return h(node, 'code', [u('text', node.value.replace(/\\r?\\n|\\r/g, ' '))])\n}\n","/**\n * @typedef {import('mdast').LinkReference} LinkReference\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport normalize from 'mdurl/encode.js'\nimport {revert} from '../revert.js'\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {LinkReference} node\n */\nexport function linkReference(h, node) {\n  const def = h.definition(node.identifier)\n\n  if (!def) {\n    return revert(h, node)\n  }\n\n  /** @type {Properties} */\n  const props = {href: normalize(def.url || '')}\n\n  if (def.title !== null && def.title !== undefined) {\n    props.title = def.title\n  }\n\n  return h(node, 'a', props, all(h, node))\n}\n","/**\n * @typedef {import('mdast').Link} Link\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport normalize from 'mdurl/encode.js'\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {Link} node\n */\nexport function link(h, node) {\n  /** @type {Properties} */\n  const props = {href: normalize(node.url)}\n\n  if (node.title !== null && node.title !== undefined) {\n    props.title = node.title\n  }\n\n  return h(node, 'a', props, all(h, node))\n}\n","/**\n * @typedef {import('mdast').Paragraph} Paragraph\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {Paragraph} node\n */\nexport function paragraph(h, node) {\n  return h(node, 'p', all(h, node))\n}\n","/**\n * @typedef {import('mdast').Root} Root\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {u} from 'unist-builder'\nimport {all} from '../traverse.js'\nimport {wrap} from '../wrap.js'\n\n/**\n * @type {Handler}\n * @param {Root} node\n */\nexport function root(h, node) {\n  // @ts-expect-error `root`s are also fine.\n  return h.augment(node, u('root', wrap(all(h, node))))\n}\n","/**\n * @typedef {import('mdast').Strong} Strong\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {Strong} node\n */\nexport function strong(h, node) {\n  return h(node, 'strong', all(h, node))\n}\n","/**\n * @typedef {import('mdast').Table} Table\n * @typedef {import('mdast').TableCell} TableCell\n * @typedef {import('hast').Element} Element\n * @typedef {import('../index.js').Handler} Handler\n * @typedef {import('../index.js').Content} Content\n */\n\nimport {pointStart, pointEnd} from 'unist-util-position'\nimport {wrap} from '../wrap.js'\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {Table} node\n */\nexport function table(h, node) {\n  const rows = node.children\n  let index = -1\n  const align = node.align || []\n  /** @type {Array.<Element>} */\n  const result = []\n\n  while (++index < rows.length) {\n    const row = rows[index].children\n    const name = index === 0 ? 'th' : 'td'\n    let pos = node.align ? align.length : row.length\n    /** @type {Array.<Content>} */\n    const out = []\n\n    while (pos--) {\n      const cell = row[pos]\n      out[pos] = h(cell, name, {align: align[pos]}, cell ? all(h, cell) : [])\n    }\n\n    result[index] = h(rows[index], 'tr', wrap(out, true))\n  }\n\n  return h(\n    node,\n    'table',\n    wrap(\n      [h(result[0].position, 'thead', wrap([result[0]], true))].concat(\n        result[1]\n          ? h(\n              {\n                start: pointStart(result[1]),\n                end: pointEnd(result[result.length - 1])\n              },\n              'tbody',\n              wrap(result.slice(1), true)\n            )\n          : []\n      ),\n      true\n    )\n  )\n}\n","/**\n * @typedef {import('mdast').Text} Text\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {u} from 'unist-builder'\n\n/**\n * @type {Handler}\n * @param {Text} node\n */\nexport function text(h, node) {\n  return h.augment(\n    node,\n    u('text', String(node.value).replace(/[ \\t]*(\\r?\\n|\\r)[ \\t]*/g, '$1'))\n  )\n}\n","/**\n * @typedef {import('mdast').Root|import('mdast').Parent['children'][number]} MdastNode\n * @typedef {import('hast').Root|import('hast').Parent['children'][number]} HastNode\n * @typedef {import('mdast').Parent} Parent\n * @typedef {import('mdast').Definition} Definition\n * @typedef {import('mdast').FootnoteDefinition} FootnoteDefinition\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('hast').Text} Text\n * @typedef {import('hast').Comment} Comment\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').ElementContent} Content\n * @typedef {import('unist-util-position').PositionLike} PositionLike\n *\n * @typedef EmbeddedHastFields\n * @property {string} [hName] Defines the tag name of an element\n * @property {Properties} [hProperties] Defines the properties of an element\n * @property {Array.<Content>} [hChildren] Defines the (hast) children of an element\n *\n * @typedef {Object.<string, unknown> & EmbeddedHastFields} Data unist data with embedded hast fields\n *\n * @typedef {MdastNode & {data?: Data}} NodeWithData unist node with embedded hast data\n *\n * @callback Handler\n * @param {H} h Handle context\n * @param {any} node mdast node to handle\n * @param {Parent|null} parent Parent of `node`\n * @returns {Content|Array.<Content>|null|undefined} hast node\n *\n * @callback HFunctionProps\n * @param {MdastNode|PositionLike|null|undefined} node mdast node or unist position\n * @param {string} tagName HTML tag name\n * @param {Properties} props Properties\n * @param {Array.<Content>?} [children] hast content\n * @returns {Element}\n *\n * @callback HFunctionNoProps\n * @param {MdastNode|PositionLike|null|undefined} node mdast node or unist position\n * @param {string} tagName HTML tag name\n * @param {Array.<Content>?} [children] hast content\n * @returns {Element}\n *\n * @typedef HFields\n * @property {boolean} dangerous Whether HTML is allowed\n * @property {(identifier: string) => Definition|null} definition Definition cache\n * @property {Object.<string, FootnoteDefinition>} footnoteById Footnote cache\n * @property {Array.<string>} footnoteOrder Order in which footnotes occur\n * @property {Handlers} handlers Applied handlers\n * @property {Handler} unknownHandler Handler for any none not in `passThrough` or otherwise handled\n * @property {(left: NodeWithData|PositionLike|null|undefined, right: Content) => Content} augment Like `h` but lower-level and usable on non-elements.\n * @property {Array.<string>} passThrough List of node types to pass through untouched (except for their children).\n *\n * @typedef Options\n * @property {boolean} [allowDangerousHtml=false] Whether to allow `html` nodes and inject them as `raw` HTML\n * @property {Handlers} [handlers] Object mapping mdast nodes to functions handling them\n * @property {Array.<string>} [passThrough] List of custom mdast node types to pass through (keep) in hast\n * @property {Handler} [unknownHandler] Handler for all unknown nodes.\n *\n * @typedef {Record.<string, Handler>} Handlers Map of node types to handlers\n * @typedef {HFunctionProps & HFunctionNoProps & HFields} H Handle context\n */\n\nimport {u} from 'unist-builder'\nimport {visit} from 'unist-util-visit'\nimport {pointStart, pointEnd} from 'unist-util-position'\nimport {generated} from 'unist-util-generated'\nimport {definitions} from 'mdast-util-definitions'\nimport {one} from './traverse.js'\nimport {footer} from './footer.js'\nimport {handlers} from './handlers/index.js'\n\nconst own = {}.hasOwnProperty\n\n/**\n * Factory to transform.\n * @param {MdastNode} tree mdast node\n * @param {Options} [options] Configuration\n * @returns {H} `h` function\n */\nfunction factory(tree, options) {\n  const settings = options || {}\n  const dangerous = settings.allowDangerousHtml || false\n  /** @type {Object.<string, FootnoteDefinition>} */\n  const footnoteById = {}\n\n  h.dangerous = dangerous\n  h.definition = definitions(tree)\n  h.footnoteById = footnoteById\n  /** @type {Array.<string>} */\n  h.footnoteOrder = []\n  h.augment = augment\n  h.handlers = {...handlers, ...settings.handlers}\n  h.unknownHandler = settings.unknownHandler\n  h.passThrough = settings.passThrough\n\n  visit(tree, 'footnoteDefinition', (definition) => {\n    const id = String(definition.identifier).toUpperCase()\n\n    // Mimick CM behavior of link definitions.\n    // See: <https://github.com/syntax-tree/mdast-util-definitions/blob/8290999/index.js#L26>.\n    if (!own.call(footnoteById, id)) {\n      footnoteById[id] = definition\n    }\n  })\n\n  // @ts-expect-error Hush, it’s fine!\n  return h\n\n  /**\n   * Finalise the created `right`, a hast node, from `left`, an mdast node.\n   * @param {(NodeWithData|PositionLike)?} left\n   * @param {Content} right\n   * @returns {Content}\n   */\n  function augment(left, right) {\n    // Handle `data.hName`, `data.hProperties, `data.hChildren`.\n    if (left && 'data' in left && left.data) {\n      /** @type {Data} */\n      const data = left.data\n\n      if (data.hName) {\n        if (right.type !== 'element') {\n          right = {\n            type: 'element',\n            tagName: '',\n            properties: {},\n            children: []\n          }\n        }\n\n        right.tagName = data.hName\n      }\n\n      if (right.type === 'element' && data.hProperties) {\n        right.properties = {...right.properties, ...data.hProperties}\n      }\n\n      if ('children' in right && right.children && data.hChildren) {\n        right.children = data.hChildren\n      }\n    }\n\n    if (left) {\n      const ctx = 'type' in left ? left : {position: left}\n\n      if (!generated(ctx)) {\n        right.position = {start: pointStart(ctx), end: pointEnd(ctx)}\n      }\n    }\n\n    return right\n  }\n\n  /**\n   * Create an element for `node`.\n   *\n   * @type {HFunctionProps}\n   */\n  function h(node, tagName, props, children) {\n    if (Array.isArray(props)) {\n      children = props\n      props = {}\n    }\n\n    // @ts-expect-error augmenting an element yields an element.\n    return augment(node, {\n      type: 'element',\n      tagName,\n      properties: props || {},\n      children: children || []\n    })\n  }\n}\n\n/**\n * Transform `tree` (an mdast node) to a hast node.\n *\n * @param {MdastNode} tree mdast node\n * @param {Options} [options] Configuration\n * @returns {HastNode|null|undefined} hast node\n */\nexport function toHast(tree, options) {\n  const h = factory(tree, options)\n  const node = one(h, tree, null)\n  const foot = footer(h)\n\n  if (foot) {\n    // @ts-expect-error If there’s a footer, there were definitions, meaning block\n    // content.\n    // So assume `node` is a parent node.\n    node.children.push(u('text', '\\n'), foot)\n  }\n\n  return Array.isArray(node) ? {type: 'root', children: node} : node\n}\n","/**\n * @typedef {Object} PointLike\n * @property {number} [line]\n * @property {number} [column]\n * @property {number} [offset]\n *\n * @typedef {Object} PositionLike\n * @property {PointLike} [start]\n * @property {PointLike} [end]\n *\n * @typedef {Object} NodeLike\n * @property {PositionLike} [position]\n */\n\n/**\n * Check if `node` is *generated*.\n *\n * @param {NodeLike} [node]\n * @returns {boolean}\n */\nexport function generated(node) {\n  return (\n    !node ||\n    !node.position ||\n    !node.position.start ||\n    !node.position.start.line ||\n    !node.position.start.column ||\n    !node.position.end ||\n    !node.position.end.line ||\n    !node.position.end.column\n  )\n}\n","/**\n * @typedef {import('mdast').BlockContent} BlockContent\n * @typedef {import('mdast').FootnoteDefinition} FootnoteDefinition\n * @typedef {import('mdast').Link} Link\n * @typedef {import('mdast').ListItem} ListItem\n * @typedef {import('mdast').Paragraph} Paragraph\n * @typedef {import('./index.js').H} H\n */\n\nimport {thematicBreak} from './handlers/thematic-break.js'\nimport {list} from './handlers/list.js'\nimport {wrap} from './wrap.js'\n\n/**\n * @param {H} h\n */\nexport function footer(h) {\n  const footnoteById = h.footnoteById\n  const footnoteOrder = h.footnoteOrder\n  let index = -1\n  /** @type {Array.<ListItem>} */\n  const listItems = []\n\n  while (++index < footnoteOrder.length) {\n    const def = footnoteById[footnoteOrder[index].toUpperCase()]\n\n    if (!def) {\n      continue\n    }\n\n    const marker = String(index + 1)\n    const content = [...def.children]\n    /** @type {Link} */\n    const backReference = {\n      type: 'link',\n      url: '#fnref' + marker,\n      data: {hProperties: {className: ['footnote-back'], role: 'doc-backlink'}},\n      children: [{type: 'text', value: '↩'}]\n    }\n    const tail = content[content.length - 1]\n\n    if (tail && tail.type === 'paragraph') {\n      tail.children.push(backReference)\n    } else {\n      // @ts-expect-error Indeed, link directly added in block content.\n      // Which we do because that way at least the handlers will be called\n      // for the other HTML we’re generating (as markdown).\n      content.push(backReference)\n    }\n\n    listItems.push({\n      type: 'listItem',\n      data: {hProperties: {id: 'fn' + marker, role: 'doc-endnote'}},\n      children: content,\n      position: def.position\n    })\n  }\n\n  if (listItems.length === 0) {\n    return null\n  }\n\n  return h(\n    null,\n    'section',\n    {className: ['footnotes'], role: 'doc-endnotes'},\n    wrap(\n      [\n        thematicBreak(h),\n        list(h, {type: 'list', ordered: true, children: listItems})\n      ],\n      true\n    )\n  )\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('hast').Root} HastRoot\n * @typedef {import('mdast').Root} MdastRoot\n * @typedef {import('mdast-util-to-hast').Options} Options\n * @typedef {import('unified').Processor<any, any, any, any>} Processor\n *\n * @typedef {import('mdast-util-to-hast')} DoNotTouchAsThisImportIncludesRawInTree\n */\n\nimport {toHast} from 'mdast-util-to-hast'\n\n// Note: the `<MdastRoot, HastRoot>` overload doesn’t seem to work :'(\n\n/**\n * Plugin to bridge or mutate to rehype.\n *\n * If a destination is given, runs the destination with the new hast tree\n * (bridge-mode).\n * Without destination, returns the hast tree: further plugins run on that tree\n * (mutate-mode).\n *\n * @param destination\n *   Optional unified processor.\n * @param options\n *   Options passed to `mdast-util-to-hast`.\n */\nconst remarkRehype =\n  /** @type {(import('unified').Plugin<[Processor, Options?]|[Options]|[], MdastRoot>)} */\n  (\n    function (destination, options) {\n      return destination && 'run' in destination\n        ? bridge(destination, options)\n        : mutate(destination)\n    }\n  )\n\nexport default remarkRehype\n\n/**\n * Bridge-mode.\n * Runs the destination with the new hast tree.\n *\n * @type {import('unified').Plugin<[Processor, Options?], MdastRoot>}\n */\nfunction bridge(destination, options) {\n  return (node, file, next) => {\n    destination.run(toHast(node, options), file, (error) => {\n      next(error)\n    })\n  }\n}\n\n/**\n * Mutate-mode.\n * Further transformers run on the nlcst tree.\n *\n * @type {import('unified').Plugin<[Options?]|void[], MdastRoot, HastRoot>}\n */\nfunction mutate(options) {\n  // @ts-expect-error: assume a corresponding node is returned for `toHast`.\n  return (node) => toHast(node, options)\n}\n","/**\n * @typedef {import('./info.js').Info} Info\n * @typedef {Record<string, Info>} Properties\n * @typedef {Record<string, string>} Normal\n */\n\nexport class Schema {\n  /**\n   * @constructor\n   * @param {Properties} property\n   * @param {Normal} normal\n   * @param {string} [space]\n   */\n  constructor(property, normal, space) {\n    this.property = property\n    this.normal = normal\n    if (space) {\n      this.space = space\n    }\n  }\n}\n\n/** @type {Properties} */\nSchema.prototype.property = {}\n/** @type {Normal} */\nSchema.prototype.normal = {}\n/** @type {string|null} */\nSchema.prototype.space = null\n","/**\n * @typedef {import('./schema.js').Properties} Properties\n * @typedef {import('./schema.js').Normal} Normal\n */\n\nimport {Schema} from './schema.js'\n\n/**\n * @param {Schema[]} definitions\n * @param {string} [space]\n * @returns {Schema}\n */\nexport function merge(definitions, space) {\n  /** @type {Properties} */\n  const property = {}\n  /** @type {Normal} */\n  const normal = {}\n  let index = -1\n\n  while (++index < definitions.length) {\n    Object.assign(property, definitions[index].property)\n    Object.assign(normal, definitions[index].normal)\n  }\n\n  return new Schema(property, normal, space)\n}\n","/**\n * @param {string} value\n * @returns {string}\n */\nexport function normalize(value) {\n  return value.toLowerCase()\n}\n","export class Info {\n  /**\n   * @constructor\n   * @param {string} property\n   * @param {string} attribute\n   */\n  constructor(property, attribute) {\n    /** @type {string} */\n    this.property = property\n    /** @type {string} */\n    this.attribute = attribute\n  }\n}\n\n/** @type {string|null} */\nInfo.prototype.space = null\nInfo.prototype.boolean = false\nInfo.prototype.booleanish = false\nInfo.prototype.overloadedBoolean = false\nInfo.prototype.number = false\nInfo.prototype.commaSeparated = false\nInfo.prototype.spaceSeparated = false\nInfo.prototype.commaOrSpaceSeparated = false\nInfo.prototype.mustUseProperty = false\nInfo.prototype.defined = false\n","let powers = 0\n\nexport const boolean = increment()\nexport const booleanish = increment()\nexport const overloadedBoolean = increment()\nexport const number = increment()\nexport const spaceSeparated = increment()\nexport const commaSeparated = increment()\nexport const commaOrSpaceSeparated = increment()\n\nfunction increment() {\n  return 2 ** ++powers\n}\n","import {Info} from './info.js'\nimport * as types from './types.js'\n\n/** @type {Array<keyof types>} */\n// @ts-expect-error: hush.\nconst checks = Object.keys(types)\n\nexport class DefinedInfo extends Info {\n  /**\n   * @constructor\n   * @param {string} property\n   * @param {string} attribute\n   * @param {number|null} [mask]\n   * @param {string} [space]\n   */\n  constructor(property, attribute, mask, space) {\n    let index = -1\n\n    super(property, attribute)\n\n    mark(this, 'space', space)\n\n    if (typeof mask === 'number') {\n      while (++index < checks.length) {\n        const check = checks[index]\n        mark(this, checks[index], (mask & types[check]) === types[check])\n      }\n    }\n  }\n}\n\nDefinedInfo.prototype.defined = true\n\n/**\n * @param {DefinedInfo} values\n * @param {string} key\n * @param {unknown} value\n */\nfunction mark(values, key, value) {\n  if (value) {\n    // @ts-expect-error: assume `value` matches the expected value of `key`.\n    values[key] = value\n  }\n}\n","/**\n * @typedef {import('./schema.js').Properties} Properties\n * @typedef {import('./schema.js').Normal} Normal\n *\n * @typedef {Record<string, string>} Attributes\n *\n * @typedef {Object} Definition\n * @property {Record<string, number|null>} properties\n * @property {(attributes: Attributes, property: string) => string} transform\n * @property {string} [space]\n * @property {Attributes} [attributes]\n * @property {Array<string>} [mustUseProperty]\n */\n\nimport {normalize} from '../normalize.js'\nimport {Schema} from './schema.js'\nimport {DefinedInfo} from './defined-info.js'\n\nconst own = {}.hasOwnProperty\n\n/**\n * @param {Definition} definition\n * @returns {Schema}\n */\nexport function create(definition) {\n  /** @type {Properties} */\n  const property = {}\n  /** @type {Normal} */\n  const normal = {}\n  /** @type {string} */\n  let prop\n\n  for (prop in definition.properties) {\n    if (own.call(definition.properties, prop)) {\n      const value = definition.properties[prop]\n      const info = new DefinedInfo(\n        prop,\n        definition.transform(definition.attributes || {}, prop),\n        value,\n        definition.space\n      )\n\n      if (\n        definition.mustUseProperty &&\n        definition.mustUseProperty.includes(prop)\n      ) {\n        info.mustUseProperty = true\n      }\n\n      property[prop] = info\n\n      normal[normalize(prop)] = prop\n      normal[normalize(info.attribute)] = prop\n    }\n  }\n\n  return new Schema(property, normal, definition.space)\n}\n","import {create} from './util/create.js'\n\nexport const xlink = create({\n  space: 'xlink',\n  transform(_, prop) {\n    return 'xlink:' + prop.slice(5).toLowerCase()\n  },\n  properties: {\n    xLinkActuate: null,\n    xLinkArcRole: null,\n    xLinkHref: null,\n    xLinkRole: null,\n    xLinkShow: null,\n    xLinkTitle: null,\n    xLinkType: null\n  }\n})\n","import {create} from './util/create.js'\n\nexport const xml = create({\n  space: 'xml',\n  transform(_, prop) {\n    return 'xml:' + prop.slice(3).toLowerCase()\n  },\n  properties: {xmlLang: null, xmlBase: null, xmlSpace: null}\n})\n","/**\n * @param {Record<string, string>} attributes\n * @param {string} attribute\n * @returns {string}\n */\nexport function caseSensitiveTransform(attributes, attribute) {\n  return attribute in attributes ? attributes[attribute] : attribute\n}\n","import {caseSensitiveTransform} from './case-sensitive-transform.js'\n\n/**\n * @param {Record<string, string>} attributes\n * @param {string} property\n * @returns {string}\n */\nexport function caseInsensitiveTransform(attributes, property) {\n  return caseSensitiveTransform(attributes, property.toLowerCase())\n}\n","import {create} from './util/create.js'\nimport {caseInsensitiveTransform} from './util/case-insensitive-transform.js'\n\nexport const xmlns = create({\n  space: 'xmlns',\n  attributes: {xmlnsxlink: 'xmlns:xlink'},\n  transform: caseInsensitiveTransform,\n  properties: {xmlns: null, xmlnsXLink: null}\n})\n","import {booleanish, number, spaceSeparated} from './util/types.js'\nimport {create} from './util/create.js'\n\nexport const aria = create({\n  transform(_, prop) {\n    return prop === 'role' ? prop : 'aria-' + prop.slice(4).toLowerCase()\n  },\n  properties: {\n    ariaActiveDescendant: null,\n    ariaAtomic: booleanish,\n    ariaAutoComplete: null,\n    ariaBusy: booleanish,\n    ariaChecked: booleanish,\n    ariaColCount: number,\n    ariaColIndex: number,\n    ariaColSpan: number,\n    ariaControls: spaceSeparated,\n    ariaCurrent: null,\n    ariaDescribedBy: spaceSeparated,\n    ariaDetails: null,\n    ariaDisabled: booleanish,\n    ariaDropEffect: spaceSeparated,\n    ariaErrorMessage: null,\n    ariaExpanded: booleanish,\n    ariaFlowTo: spaceSeparated,\n    ariaGrabbed: booleanish,\n    ariaHasPopup: null,\n    ariaHidden: booleanish,\n    ariaInvalid: null,\n    ariaKeyShortcuts: null,\n    ariaLabel: null,\n    ariaLabelledBy: spaceSeparated,\n    ariaLevel: number,\n    ariaLive: null,\n    ariaModal: booleanish,\n    ariaMultiLine: booleanish,\n    ariaMultiSelectable: booleanish,\n    ariaOrientation: null,\n    ariaOwns: spaceSeparated,\n    ariaPlaceholder: null,\n    ariaPosInSet: number,\n    ariaPressed: booleanish,\n    ariaReadOnly: booleanish,\n    ariaRelevant: null,\n    ariaRequired: booleanish,\n    ariaRoleDescription: spaceSeparated,\n    ariaRowCount: number,\n    ariaRowIndex: number,\n    ariaRowSpan: number,\n    ariaSelected: booleanish,\n    ariaSetSize: number,\n    ariaSort: null,\n    ariaValueMax: number,\n    ariaValueMin: number,\n    ariaValueNow: number,\n    ariaValueText: null,\n    role: null\n  }\n})\n","import {\n  boolean,\n  overloadedBoolean,\n  booleanish,\n  number,\n  spaceSeparated,\n  commaSeparated\n} from './util/types.js'\nimport {create} from './util/create.js'\nimport {caseInsensitiveTransform} from './util/case-insensitive-transform.js'\n\nexport const html = create({\n  space: 'html',\n  attributes: {\n    acceptcharset: 'accept-charset',\n    classname: 'class',\n    htmlfor: 'for',\n    httpequiv: 'http-equiv'\n  },\n  transform: caseInsensitiveTransform,\n  mustUseProperty: ['checked', 'multiple', 'muted', 'selected'],\n  properties: {\n    // Standard Properties.\n    abbr: null,\n    accept: commaSeparated,\n    acceptCharset: spaceSeparated,\n    accessKey: spaceSeparated,\n    action: null,\n    allow: null,\n    allowFullScreen: boolean,\n    allowPaymentRequest: boolean,\n    allowUserMedia: boolean,\n    alt: null,\n    as: null,\n    async: boolean,\n    autoCapitalize: null,\n    autoComplete: spaceSeparated,\n    autoFocus: boolean,\n    autoPlay: boolean,\n    capture: boolean,\n    charSet: null,\n    checked: boolean,\n    cite: null,\n    className: spaceSeparated,\n    cols: number,\n    colSpan: null,\n    content: null,\n    contentEditable: booleanish,\n    controls: boolean,\n    controlsList: spaceSeparated,\n    coords: number | commaSeparated,\n    crossOrigin: null,\n    data: null,\n    dateTime: null,\n    decoding: null,\n    default: boolean,\n    defer: boolean,\n    dir: null,\n    dirName: null,\n    disabled: boolean,\n    download: overloadedBoolean,\n    draggable: booleanish,\n    encType: null,\n    enterKeyHint: null,\n    form: null,\n    formAction: null,\n    formEncType: null,\n    formMethod: null,\n    formNoValidate: boolean,\n    formTarget: null,\n    headers: spaceSeparated,\n    height: number,\n    hidden: boolean,\n    high: number,\n    href: null,\n    hrefLang: null,\n    htmlFor: spaceSeparated,\n    httpEquiv: spaceSeparated,\n    id: null,\n    imageSizes: null,\n    imageSrcSet: null,\n    inputMode: null,\n    integrity: null,\n    is: null,\n    isMap: boolean,\n    itemId: null,\n    itemProp: spaceSeparated,\n    itemRef: spaceSeparated,\n    itemScope: boolean,\n    itemType: spaceSeparated,\n    kind: null,\n    label: null,\n    lang: null,\n    language: null,\n    list: null,\n    loading: null,\n    loop: boolean,\n    low: number,\n    manifest: null,\n    max: null,\n    maxLength: number,\n    media: null,\n    method: null,\n    min: null,\n    minLength: number,\n    multiple: boolean,\n    muted: boolean,\n    name: null,\n    nonce: null,\n    noModule: boolean,\n    noValidate: boolean,\n    onAbort: null,\n    onAfterPrint: null,\n    onAuxClick: null,\n    onBeforePrint: null,\n    onBeforeUnload: null,\n    onBlur: null,\n    onCancel: null,\n    onCanPlay: null,\n    onCanPlayThrough: null,\n    onChange: null,\n    onClick: null,\n    onClose: null,\n    onContextLost: null,\n    onContextMenu: null,\n    onContextRestored: null,\n    onCopy: null,\n    onCueChange: null,\n    onCut: null,\n    onDblClick: null,\n    onDrag: null,\n    onDragEnd: null,\n    onDragEnter: null,\n    onDragExit: null,\n    onDragLeave: null,\n    onDragOver: null,\n    onDragStart: null,\n    onDrop: null,\n    onDurationChange: null,\n    onEmptied: null,\n    onEnded: null,\n    onError: null,\n    onFocus: null,\n    onFormData: null,\n    onHashChange: null,\n    onInput: null,\n    onInvalid: null,\n    onKeyDown: null,\n    onKeyPress: null,\n    onKeyUp: null,\n    onLanguageChange: null,\n    onLoad: null,\n    onLoadedData: null,\n    onLoadedMetadata: null,\n    onLoadEnd: null,\n    onLoadStart: null,\n    onMessage: null,\n    onMessageError: null,\n    onMouseDown: null,\n    onMouseEnter: null,\n    onMouseLeave: null,\n    onMouseMove: null,\n    onMouseOut: null,\n    onMouseOver: null,\n    onMouseUp: null,\n    onOffline: null,\n    onOnline: null,\n    onPageHide: null,\n    onPageShow: null,\n    onPaste: null,\n    onPause: null,\n    onPlay: null,\n    onPlaying: null,\n    onPopState: null,\n    onProgress: null,\n    onRateChange: null,\n    onRejectionHandled: null,\n    onReset: null,\n    onResize: null,\n    onScroll: null,\n    onSecurityPolicyViolation: null,\n    onSeeked: null,\n    onSeeking: null,\n    onSelect: null,\n    onSlotChange: null,\n    onStalled: null,\n    onStorage: null,\n    onSubmit: null,\n    onSuspend: null,\n    onTimeUpdate: null,\n    onToggle: null,\n    onUnhandledRejection: null,\n    onUnload: null,\n    onVolumeChange: null,\n    onWaiting: null,\n    onWheel: null,\n    open: boolean,\n    optimum: number,\n    pattern: null,\n    ping: spaceSeparated,\n    placeholder: null,\n    playsInline: boolean,\n    poster: null,\n    preload: null,\n    readOnly: boolean,\n    referrerPolicy: null,\n    rel: spaceSeparated,\n    required: boolean,\n    reversed: boolean,\n    rows: number,\n    rowSpan: number,\n    sandbox: spaceSeparated,\n    scope: null,\n    scoped: boolean,\n    seamless: boolean,\n    selected: boolean,\n    shape: null,\n    size: number,\n    sizes: null,\n    slot: null,\n    span: number,\n    spellCheck: booleanish,\n    src: null,\n    srcDoc: null,\n    srcLang: null,\n    srcSet: null,\n    start: number,\n    step: null,\n    style: null,\n    tabIndex: number,\n    target: null,\n    title: null,\n    translate: null,\n    type: null,\n    typeMustMatch: boolean,\n    useMap: null,\n    value: booleanish,\n    width: number,\n    wrap: null,\n\n    // Legacy.\n    // See: https://html.spec.whatwg.org/#other-elements,-attributes-and-apis\n    align: null, // Several. Use CSS `text-align` instead,\n    aLink: null, // `<body>`. Use CSS `a:active {color}` instead\n    archive: spaceSeparated, // `<object>`. List of URIs to archives\n    axis: null, // `<td>` and `<th>`. Use `scope` on `<th>`\n    background: null, // `<body>`. Use CSS `background-image` instead\n    bgColor: null, // `<body>` and table elements. Use CSS `background-color` instead\n    border: number, // `<table>`. Use CSS `border-width` instead,\n    borderColor: null, // `<table>`. Use CSS `border-color` instead,\n    bottomMargin: number, // `<body>`\n    cellPadding: null, // `<table>`\n    cellSpacing: null, // `<table>`\n    char: null, // Several table elements. When `align=char`, sets the character to align on\n    charOff: null, // Several table elements. When `char`, offsets the alignment\n    classId: null, // `<object>`\n    clear: null, // `<br>`. Use CSS `clear` instead\n    code: null, // `<object>`\n    codeBase: null, // `<object>`\n    codeType: null, // `<object>`\n    color: null, // `<font>` and `<hr>`. Use CSS instead\n    compact: boolean, // Lists. Use CSS to reduce space between items instead\n    declare: boolean, // `<object>`\n    event: null, // `<script>`\n    face: null, // `<font>`. Use CSS instead\n    frame: null, // `<table>`\n    frameBorder: null, // `<iframe>`. Use CSS `border` instead\n    hSpace: number, // `<img>` and `<object>`\n    leftMargin: number, // `<body>`\n    link: null, // `<body>`. Use CSS `a:link {color: *}` instead\n    longDesc: null, // `<frame>`, `<iframe>`, and `<img>`. Use an `<a>`\n    lowSrc: null, // `<img>`. Use a `<picture>`\n    marginHeight: number, // `<body>`\n    marginWidth: number, // `<body>`\n    noResize: boolean, // `<frame>`\n    noHref: boolean, // `<area>`. Use no href instead of an explicit `nohref`\n    noShade: boolean, // `<hr>`. Use background-color and height instead of borders\n    noWrap: boolean, // `<td>` and `<th>`\n    object: null, // `<applet>`\n    profile: null, // `<head>`\n    prompt: null, // `<isindex>`\n    rev: null, // `<link>`\n    rightMargin: number, // `<body>`\n    rules: null, // `<table>`\n    scheme: null, // `<meta>`\n    scrolling: booleanish, // `<frame>`. Use overflow in the child context\n    standby: null, // `<object>`\n    summary: null, // `<table>`\n    text: null, // `<body>`. Use CSS `color` instead\n    topMargin: number, // `<body>`\n    valueType: null, // `<param>`\n    version: null, // `<html>`. Use a doctype.\n    vAlign: null, // Several. Use CSS `vertical-align` instead\n    vLink: null, // `<body>`. Use CSS `a:visited {color}` instead\n    vSpace: number, // `<img>` and `<object>`\n\n    // Non-standard Properties.\n    allowTransparency: null,\n    autoCorrect: null,\n    autoSave: null,\n    disablePictureInPicture: boolean,\n    disableRemotePlayback: boolean,\n    prefix: null,\n    property: null,\n    results: number,\n    security: null,\n    unselectable: null\n  }\n})\n","import {\n  boolean,\n  number,\n  spaceSeparated,\n  commaSeparated,\n  commaOrSpaceSeparated\n} from './util/types.js'\nimport {create} from './util/create.js'\nimport {caseSensitiveTransform} from './util/case-sensitive-transform.js'\n\nexport const svg = create({\n  space: 'svg',\n  attributes: {\n    accentHeight: 'accent-height',\n    alignmentBaseline: 'alignment-baseline',\n    arabicForm: 'arabic-form',\n    baselineShift: 'baseline-shift',\n    capHeight: 'cap-height',\n    className: 'class',\n    clipPath: 'clip-path',\n    clipRule: 'clip-rule',\n    colorInterpolation: 'color-interpolation',\n    colorInterpolationFilters: 'color-interpolation-filters',\n    colorProfile: 'color-profile',\n    colorRendering: 'color-rendering',\n    crossOrigin: 'crossorigin',\n    dataType: 'datatype',\n    dominantBaseline: 'dominant-baseline',\n    enableBackground: 'enable-background',\n    fillOpacity: 'fill-opacity',\n    fillRule: 'fill-rule',\n    floodColor: 'flood-color',\n    floodOpacity: 'flood-opacity',\n    fontFamily: 'font-family',\n    fontSize: 'font-size',\n    fontSizeAdjust: 'font-size-adjust',\n    fontStretch: 'font-stretch',\n    fontStyle: 'font-style',\n    fontVariant: 'font-variant',\n    fontWeight: 'font-weight',\n    glyphName: 'glyph-name',\n    glyphOrientationHorizontal: 'glyph-orientation-horizontal',\n    glyphOrientationVertical: 'glyph-orientation-vertical',\n    hrefLang: 'hreflang',\n    horizAdvX: 'horiz-adv-x',\n    horizOriginX: 'horiz-origin-x',\n    horizOriginY: 'horiz-origin-y',\n    imageRendering: 'image-rendering',\n    letterSpacing: 'letter-spacing',\n    lightingColor: 'lighting-color',\n    markerEnd: 'marker-end',\n    markerMid: 'marker-mid',\n    markerStart: 'marker-start',\n    navDown: 'nav-down',\n    navDownLeft: 'nav-down-left',\n    navDownRight: 'nav-down-right',\n    navLeft: 'nav-left',\n    navNext: 'nav-next',\n    navPrev: 'nav-prev',\n    navRight: 'nav-right',\n    navUp: 'nav-up',\n    navUpLeft: 'nav-up-left',\n    navUpRight: 'nav-up-right',\n    onAbort: 'onabort',\n    onActivate: 'onactivate',\n    onAfterPrint: 'onafterprint',\n    onBeforePrint: 'onbeforeprint',\n    onBegin: 'onbegin',\n    onCancel: 'oncancel',\n    onCanPlay: 'oncanplay',\n    onCanPlayThrough: 'oncanplaythrough',\n    onChange: 'onchange',\n    onClick: 'onclick',\n    onClose: 'onclose',\n    onCopy: 'oncopy',\n    onCueChange: 'oncuechange',\n    onCut: 'oncut',\n    onDblClick: 'ondblclick',\n    onDrag: 'ondrag',\n    onDragEnd: 'ondragend',\n    onDragEnter: 'ondragenter',\n    onDragExit: 'ondragexit',\n    onDragLeave: 'ondragleave',\n    onDragOver: 'ondragover',\n    onDragStart: 'ondragstart',\n    onDrop: 'ondrop',\n    onDurationChange: 'ondurationchange',\n    onEmptied: 'onemptied',\n    onEnd: 'onend',\n    onEnded: 'onended',\n    onError: 'onerror',\n    onFocus: 'onfocus',\n    onFocusIn: 'onfocusin',\n    onFocusOut: 'onfocusout',\n    onHashChange: 'onhashchange',\n    onInput: 'oninput',\n    onInvalid: 'oninvalid',\n    onKeyDown: 'onkeydown',\n    onKeyPress: 'onkeypress',\n    onKeyUp: 'onkeyup',\n    onLoad: 'onload',\n    onLoadedData: 'onloadeddata',\n    onLoadedMetadata: 'onloadedmetadata',\n    onLoadStart: 'onloadstart',\n    onMessage: 'onmessage',\n    onMouseDown: 'onmousedown',\n    onMouseEnter: 'onmouseenter',\n    onMouseLeave: 'onmouseleave',\n    onMouseMove: 'onmousemove',\n    onMouseOut: 'onmouseout',\n    onMouseOver: 'onmouseover',\n    onMouseUp: 'onmouseup',\n    onMouseWheel: 'onmousewheel',\n    onOffline: 'onoffline',\n    onOnline: 'ononline',\n    onPageHide: 'onpagehide',\n    onPageShow: 'onpageshow',\n    onPaste: 'onpaste',\n    onPause: 'onpause',\n    onPlay: 'onplay',\n    onPlaying: 'onplaying',\n    onPopState: 'onpopstate',\n    onProgress: 'onprogress',\n    onRateChange: 'onratechange',\n    onRepeat: 'onrepeat',\n    onReset: 'onreset',\n    onResize: 'onresize',\n    onScroll: 'onscroll',\n    onSeeked: 'onseeked',\n    onSeeking: 'onseeking',\n    onSelect: 'onselect',\n    onShow: 'onshow',\n    onStalled: 'onstalled',\n    onStorage: 'onstorage',\n    onSubmit: 'onsubmit',\n    onSuspend: 'onsuspend',\n    onTimeUpdate: 'ontimeupdate',\n    onToggle: 'ontoggle',\n    onUnload: 'onunload',\n    onVolumeChange: 'onvolumechange',\n    onWaiting: 'onwaiting',\n    onZoom: 'onzoom',\n    overlinePosition: 'overline-position',\n    overlineThickness: 'overline-thickness',\n    paintOrder: 'paint-order',\n    panose1: 'panose-1',\n    pointerEvents: 'pointer-events',\n    referrerPolicy: 'referrerpolicy',\n    renderingIntent: 'rendering-intent',\n    shapeRendering: 'shape-rendering',\n    stopColor: 'stop-color',\n    stopOpacity: 'stop-opacity',\n    strikethroughPosition: 'strikethrough-position',\n    strikethroughThickness: 'strikethrough-thickness',\n    strokeDashArray: 'stroke-dasharray',\n    strokeDashOffset: 'stroke-dashoffset',\n    strokeLineCap: 'stroke-linecap',\n    strokeLineJoin: 'stroke-linejoin',\n    strokeMiterLimit: 'stroke-miterlimit',\n    strokeOpacity: 'stroke-opacity',\n    strokeWidth: 'stroke-width',\n    tabIndex: 'tabindex',\n    textAnchor: 'text-anchor',\n    textDecoration: 'text-decoration',\n    textRendering: 'text-rendering',\n    typeOf: 'typeof',\n    underlinePosition: 'underline-position',\n    underlineThickness: 'underline-thickness',\n    unicodeBidi: 'unicode-bidi',\n    unicodeRange: 'unicode-range',\n    unitsPerEm: 'units-per-em',\n    vAlphabetic: 'v-alphabetic',\n    vHanging: 'v-hanging',\n    vIdeographic: 'v-ideographic',\n    vMathematical: 'v-mathematical',\n    vectorEffect: 'vector-effect',\n    vertAdvY: 'vert-adv-y',\n    vertOriginX: 'vert-origin-x',\n    vertOriginY: 'vert-origin-y',\n    wordSpacing: 'word-spacing',\n    writingMode: 'writing-mode',\n    xHeight: 'x-height',\n    // These were camelcased in Tiny. Now lowercased in SVG 2\n    playbackOrder: 'playbackorder',\n    timelineBegin: 'timelinebegin'\n  },\n  transform: caseSensitiveTransform,\n  properties: {\n    about: commaOrSpaceSeparated,\n    accentHeight: number,\n    accumulate: null,\n    additive: null,\n    alignmentBaseline: null,\n    alphabetic: number,\n    amplitude: number,\n    arabicForm: null,\n    ascent: number,\n    attributeName: null,\n    attributeType: null,\n    azimuth: number,\n    bandwidth: null,\n    baselineShift: null,\n    baseFrequency: null,\n    baseProfile: null,\n    bbox: null,\n    begin: null,\n    bias: number,\n    by: null,\n    calcMode: null,\n    capHeight: number,\n    className: spaceSeparated,\n    clip: null,\n    clipPath: null,\n    clipPathUnits: null,\n    clipRule: null,\n    color: null,\n    colorInterpolation: null,\n    colorInterpolationFilters: null,\n    colorProfile: null,\n    colorRendering: null,\n    content: null,\n    contentScriptType: null,\n    contentStyleType: null,\n    crossOrigin: null,\n    cursor: null,\n    cx: null,\n    cy: null,\n    d: null,\n    dataType: null,\n    defaultAction: null,\n    descent: number,\n    diffuseConstant: number,\n    direction: null,\n    display: null,\n    dur: null,\n    divisor: number,\n    dominantBaseline: null,\n    download: boolean,\n    dx: null,\n    dy: null,\n    edgeMode: null,\n    editable: null,\n    elevation: number,\n    enableBackground: null,\n    end: null,\n    event: null,\n    exponent: number,\n    externalResourcesRequired: null,\n    fill: null,\n    fillOpacity: number,\n    fillRule: null,\n    filter: null,\n    filterRes: null,\n    filterUnits: null,\n    floodColor: null,\n    floodOpacity: null,\n    focusable: null,\n    focusHighlight: null,\n    fontFamily: null,\n    fontSize: null,\n    fontSizeAdjust: null,\n    fontStretch: null,\n    fontStyle: null,\n    fontVariant: null,\n    fontWeight: null,\n    format: null,\n    fr: null,\n    from: null,\n    fx: null,\n    fy: null,\n    g1: commaSeparated,\n    g2: commaSeparated,\n    glyphName: commaSeparated,\n    glyphOrientationHorizontal: null,\n    glyphOrientationVertical: null,\n    glyphRef: null,\n    gradientTransform: null,\n    gradientUnits: null,\n    handler: null,\n    hanging: number,\n    hatchContentUnits: null,\n    hatchUnits: null,\n    height: null,\n    href: null,\n    hrefLang: null,\n    horizAdvX: number,\n    horizOriginX: number,\n    horizOriginY: number,\n    id: null,\n    ideographic: number,\n    imageRendering: null,\n    initialVisibility: null,\n    in: null,\n    in2: null,\n    intercept: number,\n    k: number,\n    k1: number,\n    k2: number,\n    k3: number,\n    k4: number,\n    kernelMatrix: commaOrSpaceSeparated,\n    kernelUnitLength: null,\n    keyPoints: null, // SEMI_COLON_SEPARATED\n    keySplines: null, // SEMI_COLON_SEPARATED\n    keyTimes: null, // SEMI_COLON_SEPARATED\n    kerning: null,\n    lang: null,\n    lengthAdjust: null,\n    letterSpacing: null,\n    lightingColor: null,\n    limitingConeAngle: number,\n    local: null,\n    markerEnd: null,\n    markerMid: null,\n    markerStart: null,\n    markerHeight: null,\n    markerUnits: null,\n    markerWidth: null,\n    mask: null,\n    maskContentUnits: null,\n    maskUnits: null,\n    mathematical: null,\n    max: null,\n    media: null,\n    mediaCharacterEncoding: null,\n    mediaContentEncodings: null,\n    mediaSize: number,\n    mediaTime: null,\n    method: null,\n    min: null,\n    mode: null,\n    name: null,\n    navDown: null,\n    navDownLeft: null,\n    navDownRight: null,\n    navLeft: null,\n    navNext: null,\n    navPrev: null,\n    navRight: null,\n    navUp: null,\n    navUpLeft: null,\n    navUpRight: null,\n    numOctaves: null,\n    observer: null,\n    offset: null,\n    onAbort: null,\n    onActivate: null,\n    onAfterPrint: null,\n    onBeforePrint: null,\n    onBegin: null,\n    onCancel: null,\n    onCanPlay: null,\n    onCanPlayThrough: null,\n    onChange: null,\n    onClick: null,\n    onClose: null,\n    onCopy: null,\n    onCueChange: null,\n    onCut: null,\n    onDblClick: null,\n    onDrag: null,\n    onDragEnd: null,\n    onDragEnter: null,\n    onDragExit: null,\n    onDragLeave: null,\n    onDragOver: null,\n    onDragStart: null,\n    onDrop: null,\n    onDurationChange: null,\n    onEmptied: null,\n    onEnd: null,\n    onEnded: null,\n    onError: null,\n    onFocus: null,\n    onFocusIn: null,\n    onFocusOut: null,\n    onHashChange: null,\n    onInput: null,\n    onInvalid: null,\n    onKeyDown: null,\n    onKeyPress: null,\n    onKeyUp: null,\n    onLoad: null,\n    onLoadedData: null,\n    onLoadedMetadata: null,\n    onLoadStart: null,\n    onMessage: null,\n    onMouseDown: null,\n    onMouseEnter: null,\n    onMouseLeave: null,\n    onMouseMove: null,\n    onMouseOut: null,\n    onMouseOver: null,\n    onMouseUp: null,\n    onMouseWheel: null,\n    onOffline: null,\n    onOnline: null,\n    onPageHide: null,\n    onPageShow: null,\n    onPaste: null,\n    onPause: null,\n    onPlay: null,\n    onPlaying: null,\n    onPopState: null,\n    onProgress: null,\n    onRateChange: null,\n    onRepeat: null,\n    onReset: null,\n    onResize: null,\n    onScroll: null,\n    onSeeked: null,\n    onSeeking: null,\n    onSelect: null,\n    onShow: null,\n    onStalled: null,\n    onStorage: null,\n    onSubmit: null,\n    onSuspend: null,\n    onTimeUpdate: null,\n    onToggle: null,\n    onUnload: null,\n    onVolumeChange: null,\n    onWaiting: null,\n    onZoom: null,\n    opacity: null,\n    operator: null,\n    order: null,\n    orient: null,\n    orientation: null,\n    origin: null,\n    overflow: null,\n    overlay: null,\n    overlinePosition: number,\n    overlineThickness: number,\n    paintOrder: null,\n    panose1: null,\n    path: null,\n    pathLength: number,\n    patternContentUnits: null,\n    patternTransform: null,\n    patternUnits: null,\n    phase: null,\n    ping: spaceSeparated,\n    pitch: null,\n    playbackOrder: null,\n    pointerEvents: null,\n    points: null,\n    pointsAtX: number,\n    pointsAtY: number,\n    pointsAtZ: number,\n    preserveAlpha: null,\n    preserveAspectRatio: null,\n    primitiveUnits: null,\n    propagate: null,\n    property: commaOrSpaceSeparated,\n    r: null,\n    radius: null,\n    referrerPolicy: null,\n    refX: null,\n    refY: null,\n    rel: commaOrSpaceSeparated,\n    rev: commaOrSpaceSeparated,\n    renderingIntent: null,\n    repeatCount: null,\n    repeatDur: null,\n    requiredExtensions: commaOrSpaceSeparated,\n    requiredFeatures: commaOrSpaceSeparated,\n    requiredFonts: commaOrSpaceSeparated,\n    requiredFormats: commaOrSpaceSeparated,\n    resource: null,\n    restart: null,\n    result: null,\n    rotate: null,\n    rx: null,\n    ry: null,\n    scale: null,\n    seed: null,\n    shapeRendering: null,\n    side: null,\n    slope: null,\n    snapshotTime: null,\n    specularConstant: number,\n    specularExponent: number,\n    spreadMethod: null,\n    spacing: null,\n    startOffset: null,\n    stdDeviation: null,\n    stemh: null,\n    stemv: null,\n    stitchTiles: null,\n    stopColor: null,\n    stopOpacity: null,\n    strikethroughPosition: number,\n    strikethroughThickness: number,\n    string: null,\n    stroke: null,\n    strokeDashArray: commaOrSpaceSeparated,\n    strokeDashOffset: null,\n    strokeLineCap: null,\n    strokeLineJoin: null,\n    strokeMiterLimit: number,\n    strokeOpacity: number,\n    strokeWidth: null,\n    style: null,\n    surfaceScale: number,\n    syncBehavior: null,\n    syncBehaviorDefault: null,\n    syncMaster: null,\n    syncTolerance: null,\n    syncToleranceDefault: null,\n    systemLanguage: commaOrSpaceSeparated,\n    tabIndex: number,\n    tableValues: null,\n    target: null,\n    targetX: number,\n    targetY: number,\n    textAnchor: null,\n    textDecoration: null,\n    textRendering: null,\n    textLength: null,\n    timelineBegin: null,\n    title: null,\n    transformBehavior: null,\n    type: null,\n    typeOf: commaOrSpaceSeparated,\n    to: null,\n    transform: null,\n    u1: null,\n    u2: null,\n    underlinePosition: number,\n    underlineThickness: number,\n    unicode: null,\n    unicodeBidi: null,\n    unicodeRange: null,\n    unitsPerEm: number,\n    values: null,\n    vAlphabetic: number,\n    vMathematical: number,\n    vectorEffect: null,\n    vHanging: number,\n    vIdeographic: number,\n    version: null,\n    vertAdvY: number,\n    vertOriginX: number,\n    vertOriginY: number,\n    viewBox: null,\n    viewTarget: null,\n    visibility: null,\n    width: null,\n    widths: null,\n    wordSpacing: null,\n    writingMode: null,\n    x: null,\n    x1: null,\n    x2: null,\n    xChannelSelector: null,\n    xHeight: number,\n    y: null,\n    y1: null,\n    y2: null,\n    yChannelSelector: null,\n    z: null,\n    zoomAndPan: null\n  }\n})\n","/**\n * @typedef {import('./lib/util/info.js').Info} Info\n * @typedef {import('./lib/util/schema.js').Schema} Schema\n */\n\nimport {merge} from './lib/util/merge.js'\nimport {xlink} from './lib/xlink.js'\nimport {xml} from './lib/xml.js'\nimport {xmlns} from './lib/xmlns.js'\nimport {aria} from './lib/aria.js'\nimport {html as htmlBase} from './lib/html.js'\nimport {svg as svgBase} from './lib/svg.js'\n\nexport {find} from './lib/find.js'\nexport {hastToReact} from './lib/hast-to-react.js'\nexport {normalize} from './lib/normalize.js'\nexport const html = merge([xml, xlink, xmlns, aria, htmlBase], 'html')\nexport const svg = merge([xml, xlink, xmlns, aria, svgBase], 'svg')\n","import {visit} from 'unist-util-visit'\n\n/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').Element} Element\n *\n * @callback AllowElement\n * @param {Element} element\n * @param {number} index\n * @param {Element|Root} parent\n * @returns {boolean|undefined}\n *\n * @typedef Options\n * @property {Array<string>} [allowedElements]\n * @property {Array<string>} [disallowedElements=[]]\n * @property {AllowElement} [allowElement]\n * @property {boolean} [unwrapDisallowed=false]\n */\n\n/**\n * @type {import('unified').Plugin<[Options], Root>}\n */\nexport default function rehypeFilter(options) {\n  if (options.allowedElements && options.disallowedElements) {\n    throw new TypeError(\n      'Only one of `allowedElements` and `disallowedElements` should be defined'\n    )\n  }\n\n  if (\n    options.allowedElements ||\n    options.disallowedElements ||\n    options.allowElement\n  ) {\n    return (tree) => {\n      visit(tree, 'element', (node, index, parent_) => {\n        const parent = /** @type {Element|Root} */ (parent_)\n        /** @type {boolean|undefined} */\n        let remove\n\n        if (options.allowedElements) {\n          remove = !options.allowedElements.includes(node.tagName)\n        } else if (options.disallowedElements) {\n          remove = options.disallowedElements.includes(node.tagName)\n        }\n\n        if (!remove && options.allowElement && typeof index === 'number') {\n          remove = !options.allowElement(node, index, parent)\n        }\n\n        if (remove && typeof index === 'number') {\n          if (options.unwrapDisallowed && node.children) {\n            parent.children.splice(index, 1, ...node.children)\n          } else {\n            parent.children.splice(index, 1)\n          }\n\n          return index\n        }\n\n        return undefined\n      })\n    }\n  }\n}\n","const protocols = ['http', 'https', 'mailto', 'tel']\n\n/**\n * @param {string} uri\n * @returns {string}\n */\nexport function uriTransformer(uri) {\n  const url = (uri || '').trim()\n  const first = url.charAt(0)\n\n  if (first === '#' || first === '/') {\n    return url\n  }\n\n  const colon = url.indexOf(':')\n  if (colon === -1) {\n    return url\n  }\n\n  let index = -1\n\n  while (++index < protocols.length) {\n    const protocol = protocols[index]\n\n    if (\n      colon === protocol.length &&\n      url.slice(0, protocol.length).toLowerCase() === protocol\n    ) {\n      return url\n    }\n  }\n\n  index = url.indexOf('?')\n  if (index !== -1 && colon > index) {\n    return url\n  }\n\n  index = url.indexOf('#')\n  if (index !== -1 && colon > index) {\n    return url\n  }\n\n  // eslint-disable-next-line no-script-url\n  return 'javascript:void(0)'\n}\n","/**\n * @param {unknown} thing\n * @returns {boolean}\n */\nexport function whitespace(thing) {\n  /** @type {string} */\n  var value =\n    // @ts-ignore looks like a node.\n    thing && typeof thing === 'object' && thing.type === 'text'\n      ? // @ts-ignore looks like a text.\n        thing.value || ''\n      : thing\n\n  // HTML whitespace expression.\n  // See <https://html.spec.whatwg.org/#space-character>.\n  return typeof value === 'string' && value.replace(/[ \\t\\n\\f\\r]/g, '') === ''\n}\n","/**\n * @typedef {import('./util/schema.js').Schema} Schema\n */\n\nimport {normalize} from './normalize.js'\nimport {DefinedInfo} from './util/defined-info.js'\nimport {Info} from './util/info.js'\n\nconst valid = /^data[-\\w.:]+$/i\nconst dash = /-[a-z]/g\nconst cap = /[A-Z]/g\n\n/**\n * @param {Schema} schema\n * @param {string} value\n * @returns {Info}\n */\nexport function find(schema, value) {\n  const normal = normalize(value)\n  let prop = value\n  let Type = Info\n\n  if (normal in schema.normal) {\n    return schema.property[schema.normal[normal]]\n  }\n\n  if (normal.length > 4 && normal.slice(0, 4) === 'data' && valid.test(value)) {\n    // Attribute or property.\n    if (value.charAt(4) === '-') {\n      // Turn it into a property.\n      const rest = value.slice(5).replace(dash, camelcase)\n      prop = 'data' + rest.charAt(0).toUpperCase() + rest.slice(1)\n    } else {\n      // Turn it into an attribute.\n      const rest = value.slice(4)\n\n      if (!dash.test(rest)) {\n        let dashes = rest.replace(cap, kebab)\n\n        if (dashes.charAt(0) !== '-') {\n          dashes = '-' + dashes\n        }\n\n        value = 'data' + dashes\n      }\n    }\n\n    Type = DefinedInfo\n  }\n\n  return new Type(prop, value)\n}\n\n/**\n * @param {string} $0\n * @returns {string}\n */\nfunction kebab($0) {\n  return '-' + $0.toLowerCase()\n}\n\n/**\n * @param {string} $0\n * @returns {string}\n */\nfunction camelcase($0) {\n  return $0.charAt(1).toUpperCase()\n}\n","export const hastToReact = {\n  classId: 'classID',\n  dataType: 'datatype',\n  itemId: 'itemID',\n  strokeDashArray: 'strokeDasharray',\n  strokeDashOffset: 'strokeDashoffset',\n  strokeLineCap: 'strokeLinecap',\n  strokeLineJoin: 'strokeLinejoin',\n  strokeMiterLimit: 'strokeMiterlimit',\n  typeOf: 'typeof',\n  xLinkActuate: 'xlinkActuate',\n  xLinkArcRole: 'xlinkArcrole',\n  xLinkHref: 'xlinkHref',\n  xLinkRole: 'xlinkRole',\n  xLinkShow: 'xlinkShow',\n  xLinkTitle: 'xlinkTitle',\n  xLinkType: 'xlinkType',\n  xmlnsXLink: 'xmlnsXlink'\n}\n","/**\n * @template T\n * @typedef {import('react').ComponentType<T>} ComponentType<T>\n */\n\n/**\n * @template T\n * @typedef {import('react').ComponentPropsWithoutRef<T>} ComponentPropsWithoutRef<T>\n */\n\n/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('unist').Position} Position\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').Text} Text\n * @typedef {import('hast').Comment} Comment\n * @typedef {import('hast').DocType} Doctype\n * @typedef {import('property-information').Info} Info\n * @typedef {import('property-information').Schema} Schema\n * @typedef {import('./complex-types').ReactMarkdownProps} ReactMarkdownProps\n *\n * @typedef Raw\n * @property {'raw'} type\n * @property {string} value\n *\n * @typedef Context\n * @property {Options} options\n * @property {Schema} schema\n * @property {number} listDepth\n *\n * @callback TransformLink\n * @param {string} href\n * @param {Array<ElementContent>} children\n * @param {string?} title\n * @returns {string}\n *\n * @callback TransformImage\n * @param {string} src\n * @param {string} alt\n * @param {string?} title\n * @returns {string}\n *\n * @typedef {import('react').HTMLAttributeAnchorTarget} TransformLinkTargetType\n *\n * @callback TransformLinkTarget\n * @param {string} href\n * @param {Array<ElementContent>} children\n * @param {string?} title\n * @returns {TransformLinkTargetType|undefined}\n *\n * @typedef {keyof JSX.IntrinsicElements} ReactMarkdownNames\n *\n * To do: is `data-sourcepos` typeable?\n *\n * @typedef {ComponentPropsWithoutRef<'code'> & ReactMarkdownProps & {inline?: boolean}} CodeProps\n * @typedef {ComponentPropsWithoutRef<'h1'> & ReactMarkdownProps & {level: number}} HeadingProps\n * @typedef {ComponentPropsWithoutRef<'li'> & ReactMarkdownProps & {checked: boolean|null, index: number, ordered: boolean}} LiProps\n * @typedef {ComponentPropsWithoutRef<'ol'> & ReactMarkdownProps & {depth: number, ordered: true}} OrderedListProps\n * @typedef {ComponentPropsWithoutRef<'table'> & ReactMarkdownProps & {style?: Record<string, unknown>, isHeader: boolean}} TableCellProps\n * @typedef {ComponentPropsWithoutRef<'tr'> & ReactMarkdownProps & {isHeader: boolean}} TableRowProps\n * @typedef {ComponentPropsWithoutRef<'ul'> & ReactMarkdownProps & {depth: number, ordered: false}} UnorderedListProps\n *\n * @typedef {ComponentType<CodeProps>} CodeComponent\n * @typedef {ComponentType<HeadingProps>} HeadingComponent\n * @typedef {ComponentType<LiProps>} LiComponent\n * @typedef {ComponentType<OrderedListProps>} OrderedListComponent\n * @typedef {ComponentType<TableCellProps>} TableCellComponent\n * @typedef {ComponentType<TableRowProps>} TableRowComponent\n * @typedef {ComponentType<UnorderedListProps>} UnorderedListComponent\n *\n * @typedef SpecialComponents\n * @property {CodeComponent|ReactMarkdownNames} code\n * @property {HeadingComponent|ReactMarkdownNames} h1\n * @property {HeadingComponent|ReactMarkdownNames} h2\n * @property {HeadingComponent|ReactMarkdownNames} h3\n * @property {HeadingComponent|ReactMarkdownNames} h4\n * @property {HeadingComponent|ReactMarkdownNames} h5\n * @property {HeadingComponent|ReactMarkdownNames} h6\n * @property {LiComponent|ReactMarkdownNames} li\n * @property {OrderedListComponent|ReactMarkdownNames} ol\n * @property {TableCellComponent|ReactMarkdownNames} td\n * @property {TableCellComponent|ReactMarkdownNames} th\n * @property {TableRowComponent|ReactMarkdownNames} tr\n * @property {UnorderedListComponent|ReactMarkdownNames} ul\n *\n * @typedef {Partial<Omit<import('./complex-types').NormalComponents, keyof SpecialComponents> & SpecialComponents>} Components\n *\n * @typedef Options\n * @property {boolean} [sourcePos=false]\n * @property {boolean} [rawSourcePos=false]\n * @property {boolean} [skipHtml=false]\n * @property {boolean} [includeElementIndex=false]\n * @property {null|false|TransformLink} [transformLinkUri]\n * @property {TransformImage} [transformImageUri]\n * @property {TransformLinkTargetType|TransformLinkTarget} [linkTarget]\n * @property {Components} [components]\n */\n\nimport React from 'react'\nimport ReactIs from 'react-is'\nimport {whitespace} from 'hast-util-whitespace'\nimport {svg, find, hastToReact} from 'property-information'\nimport {stringify as spaces} from 'space-separated-tokens'\nimport {stringify as commas} from 'comma-separated-tokens'\nimport style from 'style-to-object'\n\nconst own = {}.hasOwnProperty\n\n// The table-related elements that must not contain whitespace text according\n// to React.\nconst tableElements = new Set(['table', 'thead', 'tbody', 'tfoot', 'tr'])\n\n/**\n * @param {Context} context\n * @param {Element|Root} node\n */\nexport function childrenToReact(context, node) {\n  /** @type {Array<ReactNode>} */\n  const children = []\n  let childIndex = -1\n  /** @type {Comment|Doctype|Element|Raw|Text} */\n  let child\n\n  while (++childIndex < node.children.length) {\n    child = node.children[childIndex]\n\n    if (child.type === 'element') {\n      children.push(toReact(context, child, childIndex, node))\n    } else if (child.type === 'text') {\n      // Currently, a warning is triggered by react for *any* white space in\n      // tables.\n      // So we drop it.\n      // See: <https://github.com/facebook/react/pull/7081>.\n      // See: <https://github.com/facebook/react/pull/7515>.\n      // See: <https://github.com/remarkjs/remark-react/issues/64>.\n      // See: <https://github.com/remarkjs/react-markdown/issues/576>.\n      if (\n        node.type !== 'element' ||\n        !tableElements.has(node.tagName) ||\n        !whitespace(child)\n      ) {\n        children.push(child.value)\n      }\n    } else if (child.type === 'raw' && !context.options.skipHtml) {\n      // Default behavior is to show (encoded) HTML.\n      children.push(child.value)\n    }\n  }\n\n  return children\n}\n\n/**\n * @param {Context} context\n * @param {Element} node\n * @param {number} index\n * @param {Element|Root} parent\n */\nfunction toReact(context, node, index, parent) {\n  const options = context.options\n  const parentSchema = context.schema\n  /** @type {ReactMarkdownNames} */\n  // @ts-expect-error assume a known HTML/SVG element.\n  const name = node.tagName\n  /** @type {Record<string, unknown>} */\n  const properties = {}\n  let schema = parentSchema\n  /** @type {string} */\n  let property\n\n  if (parentSchema.space === 'html' && name === 'svg') {\n    schema = svg\n    context.schema = schema\n  }\n\n  if (node.properties) {\n    for (property in node.properties) {\n      if (own.call(node.properties, property)) {\n        addProperty(properties, property, node.properties[property], context)\n      }\n    }\n  }\n\n  if (name === 'ol' || name === 'ul') {\n    context.listDepth++\n  }\n\n  const children = childrenToReact(context, node)\n\n  if (name === 'ol' || name === 'ul') {\n    context.listDepth--\n  }\n\n  // Restore parent schema.\n  context.schema = parentSchema\n\n  // Nodes created by plugins do not have positional info, in which case we use\n  // an object that matches the position interface.\n  const position = node.position || {\n    start: {line: null, column: null, offset: null},\n    end: {line: null, column: null, offset: null}\n  }\n  const component =\n    options.components && own.call(options.components, name)\n      ? options.components[name]\n      : name\n  const basic = typeof component === 'string' || component === React.Fragment\n\n  if (!ReactIs.isValidElementType(component)) {\n    throw new TypeError(\n      `Component for name \\`${name}\\` not defined or is not renderable`\n    )\n  }\n\n  properties.key = [\n    name,\n    position.start.line,\n    position.start.column,\n    index\n  ].join('-')\n\n  if (name === 'a' && options.linkTarget) {\n    properties.target =\n      typeof options.linkTarget === 'function'\n        ? options.linkTarget(\n            String(properties.href || ''),\n            node.children,\n            typeof properties.title === 'string' ? properties.title : null\n          )\n        : options.linkTarget\n  }\n\n  if (name === 'a' && options.transformLinkUri) {\n    properties.href = options.transformLinkUri(\n      String(properties.href || ''),\n      node.children,\n      typeof properties.title === 'string' ? properties.title : null\n    )\n  }\n\n  if (\n    !basic &&\n    name === 'code' &&\n    parent.type === 'element' &&\n    parent.tagName !== 'pre'\n  ) {\n    properties.inline = true\n  }\n\n  if (\n    !basic &&\n    (name === 'h1' ||\n      name === 'h2' ||\n      name === 'h3' ||\n      name === 'h4' ||\n      name === 'h5' ||\n      name === 'h6')\n  ) {\n    properties.level = Number.parseInt(name.charAt(1), 10)\n  }\n\n  if (name === 'img' && options.transformImageUri) {\n    properties.src = options.transformImageUri(\n      String(properties.src || ''),\n      String(properties.alt || ''),\n      typeof properties.title === 'string' ? properties.title : null\n    )\n  }\n\n  if (!basic && name === 'li' && parent.type === 'element') {\n    const input = getInputElement(node)\n    properties.checked =\n      input && input.properties ? Boolean(input.properties.checked) : null\n    properties.index = getElementsBeforeCount(parent, node)\n    properties.ordered = parent.tagName === 'ol'\n  }\n\n  if (!basic && (name === 'ol' || name === 'ul')) {\n    properties.ordered = name === 'ol'\n    properties.depth = context.listDepth\n  }\n\n  if (name === 'td' || name === 'th') {\n    if (properties.align) {\n      if (!properties.style) properties.style = {}\n      // @ts-expect-error assume `style` is an object\n      properties.style.textAlign = properties.align\n      delete properties.align\n    }\n\n    if (!basic) {\n      properties.isHeader = name === 'th'\n    }\n  }\n\n  if (!basic && name === 'tr' && parent.type === 'element') {\n    properties.isHeader = Boolean(parent.tagName === 'thead')\n  }\n\n  // If `sourcePos` is given, pass source information (line/column info from markdown source).\n  if (options.sourcePos) {\n    properties['data-sourcepos'] = flattenPosition(position)\n  }\n\n  if (!basic && options.rawSourcePos) {\n    properties.sourcePosition = node.position\n  }\n\n  // If `includeElementIndex` is given, pass node index info to components.\n  if (!basic && options.includeElementIndex) {\n    properties.index = getElementsBeforeCount(parent, node)\n    properties.siblingCount = getElementsBeforeCount(parent)\n  }\n\n  if (!basic) {\n    properties.node = node\n  }\n\n  // Ensure no React warnings are emitted for void elements w/ children.\n  return children.length > 0\n    ? React.createElement(component, properties, children)\n    : React.createElement(component, properties)\n}\n\n/**\n * @param {Element|Root} node\n * @returns {Element?}\n */\nfunction getInputElement(node) {\n  let index = -1\n\n  while (++index < node.children.length) {\n    const child = node.children[index]\n\n    if (child.type === 'element' && child.tagName === 'input') {\n      return child\n    }\n  }\n\n  return null\n}\n\n/**\n * @param {Element|Root} parent\n * @param {Element} [node]\n * @returns {number}\n */\nfunction getElementsBeforeCount(parent, node) {\n  let index = -1\n  let count = 0\n\n  while (++index < parent.children.length) {\n    if (parent.children[index] === node) break\n    if (parent.children[index].type === 'element') count++\n  }\n\n  return count\n}\n\n/**\n * @param {Record<string, unknown>} props\n * @param {string} prop\n * @param {unknown} value\n * @param {Context} ctx\n */\nfunction addProperty(props, prop, value, ctx) {\n  const info = find(ctx.schema, prop)\n  let result = value\n\n  // Ignore nullish and `NaN` values.\n  // eslint-disable-next-line no-self-compare\n  if (result === null || result === undefined || result !== result) {\n    return\n  }\n\n  // Accept `array`.\n  // Most props are space-separated.\n  if (Array.isArray(result)) {\n    result = info.commaSeparated ? commas(result) : spaces(result)\n  }\n\n  if (info.property === 'style' && typeof result === 'string') {\n    result = parseStyle(result)\n  }\n\n  if (info.space && info.property) {\n    props[\n      own.call(hastToReact, info.property)\n        ? hastToReact[info.property]\n        : info.property\n    ] = result\n  } else if (info.attribute) {\n    props[info.attribute] = result\n  }\n}\n\n/**\n * @param {string} value\n * @returns {Record<string, string>}\n */\nfunction parseStyle(value) {\n  /** @type {Record<string, string>} */\n  const result = {}\n\n  try {\n    style(value, iterator)\n  } catch {\n    // Silent.\n  }\n\n  return result\n\n  /**\n   * @param {string} name\n   * @param {string} v\n   */\n  function iterator(name, v) {\n    const k = name.slice(0, 4) === '-ms-' ? `ms-${name.slice(4)}` : name\n    result[k.replace(/-([a-z])/g, styleReplacer)] = v\n  }\n}\n\n/**\n * @param {unknown} _\n * @param {string} $1\n */\nfunction styleReplacer(_, $1) {\n  return $1.toUpperCase()\n}\n\n/**\n * @param {Position|{start: {line: null, column: null, offset: null}, end: {line: null, column: null, offset: null}}} pos\n * @returns {string}\n */\nfunction flattenPosition(pos) {\n  return [\n    pos.start.line,\n    ':',\n    pos.start.column,\n    '-',\n    pos.end.line,\n    ':',\n    pos.end.column\n  ]\n    .map((d) => String(d))\n    .join('')\n}\n","/**\n * @typedef {Object} StringifyOptions\n * @property {boolean} [padLeft=true] Whether to pad a space before a token (`boolean`, default: `true`).\n * @property {boolean} [padRight=false] Whether to pad a space after a token (`boolean`, default: `false`).\n */\n\n/**\n * Parse comma separated tokens to an array.\n *\n * @param {string} value\n * @returns {Array.<string>}\n */\nexport function parse(value) {\n  /** @type {Array.<string>} */\n  var tokens = []\n  var input = String(value || '')\n  var index = input.indexOf(',')\n  var start = 0\n  /** @type {boolean} */\n  var end\n  /** @type {string} */\n  var token\n\n  while (!end) {\n    if (index === -1) {\n      index = input.length\n      end = true\n    }\n\n    token = input.slice(start, index).trim()\n\n    if (token || !end) {\n      tokens.push(token)\n    }\n\n    start = index + 1\n    index = input.indexOf(',', start)\n  }\n\n  return tokens\n}\n\n/**\n * Serialize an array of strings to comma separated tokens.\n *\n * @param {Array.<string|number>} values\n * @param {StringifyOptions} [options]\n * @returns {string}\n */\nexport function stringify(values, options) {\n  var settings = options || {}\n\n  // Ensure the last empty entry is seen.\n  if (values[values.length - 1] === '') {\n    values = values.concat('')\n  }\n\n  return values\n    .join(\n      (settings.padRight ? ' ' : '') +\n        ',' +\n        (settings.padLeft === false ? '' : ' ')\n    )\n    .trim()\n}\n","/**\n * Parse space separated tokens to an array of strings.\n *\n * @param {string} value Space separated tokens\n * @returns {Array.<string>} Tokens\n */\nexport function parse(value) {\n  const input = String(value || '').trim()\n  return input ? input.split(/[ \\t\\n\\r\\f]+/g) : []\n}\n\n/**\n * Serialize an array of strings as space separated tokens.\n *\n * @param {Array.<string|number>} values Tokens\n * @returns {string} Space separated tokens\n */\nexport function stringify(values) {\n  return values.join(' ').trim()\n}\n","/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('react').ReactElement<{}>} ReactElement\n * @typedef {import('unified').PluggableList} PluggableList\n * @typedef {import('hast').Root} Root\n * @typedef {import('./rehype-filter.js').Options} FilterOptions\n * @typedef {import('./ast-to-react.js').Options} TransformOptions\n *\n * @typedef CoreOptions\n * @property {string} children\n *\n * @typedef PluginOptions\n * @property {PluggableList} [plugins=[]] **deprecated**: use `remarkPlugins` instead\n * @property {PluggableList} [remarkPlugins=[]]\n * @property {PluggableList} [rehypePlugins=[]]\n *\n * @typedef LayoutOptions\n * @property {string} [className]\n *\n * @typedef {CoreOptions & PluginOptions & LayoutOptions & FilterOptions & TransformOptions} ReactMarkdownOptions\n *\n * @typedef Deprecation\n * @property {string} id\n * @property {string} [to]\n */\n\nimport React from 'react'\nimport {VFile} from 'vfile'\nimport {unified} from 'unified'\nimport remarkParse from 'remark-parse'\nimport remarkRehype from 'remark-rehype'\nimport PropTypes from 'prop-types'\nimport {html} from 'property-information'\nimport rehypeFilter from './rehype-filter.js'\nimport {uriTransformer} from './uri-transformer.js'\nimport {childrenToReact} from './ast-to-react.js'\n\nconst own = {}.hasOwnProperty\nconst changelog =\n  'https://github.com/remarkjs/react-markdown/blob/main/changelog.md'\n\n/** @type {Record<string, Deprecation>} */\nconst deprecated = {\n  renderers: {to: 'components', id: 'change-renderers-to-components'},\n  astPlugins: {id: 'remove-buggy-html-in-markdown-parser'},\n  allowDangerousHtml: {id: 'remove-buggy-html-in-markdown-parser'},\n  escapeHtml: {id: 'remove-buggy-html-in-markdown-parser'},\n  source: {to: 'children', id: 'change-source-to-children'},\n  allowNode: {\n    to: 'allowElement',\n    id: 'replace-allownode-allowedtypes-and-disallowedtypes'\n  },\n  allowedTypes: {\n    to: 'allowedElements',\n    id: 'replace-allownode-allowedtypes-and-disallowedtypes'\n  },\n  disallowedTypes: {\n    to: 'disallowedElements',\n    id: 'replace-allownode-allowedtypes-and-disallowedtypes'\n  },\n  includeNodeIndex: {\n    to: 'includeElementIndex',\n    id: 'change-includenodeindex-to-includeelementindex'\n  }\n}\n\n/**\n * React component to render markdown.\n *\n * @param {ReactMarkdownOptions} options\n * @returns {ReactElement}\n */\nexport function ReactMarkdown(options) {\n  for (const key in deprecated) {\n    if (own.call(deprecated, key) && own.call(options, key)) {\n      const deprecation = deprecated[key]\n      console.warn(\n        `[react-markdown] Warning: please ${\n          deprecation.to ? `use \\`${deprecation.to}\\` instead of` : 'remove'\n        } \\`${key}\\` (see <${changelog}#${deprecation.id}> for more info)`\n      )\n      delete deprecated[key]\n    }\n  }\n\n  const processor = unified()\n    .use(remarkParse)\n    // TODO: deprecate `plugins` in v8.0.0.\n    .use(options.remarkPlugins || options.plugins || [])\n    .use(remarkRehype, {allowDangerousHtml: true})\n    .use(options.rehypePlugins || [])\n    .use(rehypeFilter, options)\n\n  const file = new VFile()\n\n  if (typeof options.children === 'string') {\n    file.value = options.children\n  } else if (options.children !== undefined && options.children !== null) {\n    console.warn(\n      `[react-markdown] Warning: please pass a string as \\`children\\` (not: \\`${options.children}\\`)`\n    )\n  }\n\n  const hastNode = processor.runSync(processor.parse(file), file)\n\n  if (hastNode.type !== 'root') {\n    throw new TypeError('Expected a `root` node')\n  }\n\n  /** @type {ReactElement} */\n  let result = React.createElement(\n    React.Fragment,\n    {},\n    childrenToReact({options, schema: html, listDepth: 0}, hastNode)\n  )\n\n  if (options.className) {\n    result = React.createElement('div', {className: options.className}, result)\n  }\n\n  return result\n}\n\nReactMarkdown.defaultProps = {transformLinkUri: uriTransformer}\n\nReactMarkdown.propTypes = {\n  // Core options:\n  children: PropTypes.string,\n  // Layout options:\n  className: PropTypes.string,\n  // Filter options:\n  allowElement: PropTypes.func,\n  allowedElements: PropTypes.arrayOf(PropTypes.string),\n  disallowedElements: PropTypes.arrayOf(PropTypes.string),\n  unwrapDisallowed: PropTypes.bool,\n  // Plugin options:\n  remarkPlugins: PropTypes.arrayOf(\n    PropTypes.oneOfType([\n      PropTypes.object,\n      PropTypes.func,\n      PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.object, PropTypes.func]))\n    ])\n  ),\n  rehypePlugins: PropTypes.arrayOf(\n    PropTypes.oneOfType([\n      PropTypes.object,\n      PropTypes.func,\n      PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.object, PropTypes.func]))\n    ])\n  ),\n  // Transform options:\n  sourcePos: PropTypes.bool,\n  rawSourcePos: PropTypes.bool,\n  skipHtml: PropTypes.bool,\n  includeElementIndex: PropTypes.bool,\n  transformLinkUri: PropTypes.oneOfType([PropTypes.func, PropTypes.bool]),\n  linkTarget: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n  transformImageUri: PropTypes.func,\n  components: PropTypes.object\n}\n"],"sourceRoot":""}